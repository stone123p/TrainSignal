<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>itemis: Xtext 2.19 Release – builds on Eclipse’s new infrastructure JIRO</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/xtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro</guid>
	<link>https://blogs.itemis.com/en/xtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro</link>
	<description>&lt;p&gt;The Xtext team has released version 2.19.0 of Eclipse Xtext &amp;amp; Xtend. The current version is mainly a maintenance release. After working hard on some new features in the past releases, it was time for summer vacation during the current release period and for some focus on build engineering tasks. Still over 350 pull requests made it into the short release period.&lt;/p&gt; 
&lt;img alt=&quot;Update_1024px_Twitter_Fotolia_107769487_S_&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Eclipse/Now%20Available%20Xtext%202.19/Update_1024px_Twitter_Fotolia_107769487_S_.jpg?width=881&amp;amp;name=Update_1024px_Twitter_Fotolia_107769487_S_.jpg&quot; style=&quot;width: 881px;&quot; width=&quot;881&quot; /&gt; 
&lt;h2&gt;Eclipse’s new build infrastructure JIRO&lt;/h2&gt; 
&lt;p&gt;The Eclipse Foundation’s build engineers worked on a new build infrastructure called &lt;a href=&quot;https://github.com/eclipse-cbi/jiro#why-is-it-called-jiro&quot; title=&quot;Link to https://github.com/eclipse-cbi/jiro#why-is-it-called-jiro (opens in a new tab)&quot;&gt;JIRO (Jenkins Instances Running on OpenShift)&lt;/a&gt;. The Xtext project joined early the efforts on preparing a migration to the new infrastructure. However, now it was time and the Eclipse Foundation asked to finally shut down the old build server and to switch over to the new infrastructure. While we were already done with the main build jobs, there were still quite some supportive build jobs for release engineering that had to be migrated.&lt;/p&gt; 
&lt;p&gt;Luckily, the itemis Xtext team could acquire Nico Prediger from the itemis DevOps staff to support the efforts on build engineering tasks. With his support, we could finalize the work and finally replace the old Jenkins instance.&lt;/p&gt; 
&lt;p&gt;As a result, Xtext builds fine now on its new JIRO instance at &lt;a href=&quot;https://ci.eclipse.org/xtext/&quot; title=&quot;Link to https://ci.eclipse.org/xtext/ (opens in a new tab)&quot;&gt;https://ci.eclipse.org/xtext/&lt;/a&gt; and was released the first time on the new infra.&lt;/p&gt; 
&lt;h2&gt;Keeping the software stack up-to-date&lt;/h2&gt; 
&lt;p&gt;Xtext builds upon a quite huge software stack, and several components are released within each release period. We try to keep them all on the latest state as far as we can. Of course, for each used component we have to test the compatibility of each upgrade.&lt;/p&gt; 
&lt;p&gt;The most notable upgrades this time are Guava and Gradle:&lt;/p&gt; 
&lt;p&gt;The Guava version 21.0 that we used before had a security problem that was issued as &lt;a href=&quot;https://github.com/google/guava/wiki/cve-2018-10237&quot; title=&quot;Link to https://github.com/google/guava/wiki/cve-2018-10237 (opens in a new tab)&quot;&gt;CVE-2018-10237&lt;/a&gt;. This forced Xtext as well as other dependent Eclipse projects to upgrade to a recent version of Guava. For the Eclipse 2019-09 simultaneous release, the delivered Guava version is now 27.1.0. All builds descriptors, wizards, and projects have been updated to use Guava 27.1.0 now.&lt;/p&gt; 
&lt;p&gt;The Guava upgrade also affected the MWE project, which employed the upgrade with its recent release. As a consequence, Xtext upgraded to MWE 2.11.&lt;/p&gt; 
&lt;p&gt;Xtext has been updated to use &lt;a href=&quot;https://docs.gradle.org/5.5/release-notes.html&quot; title=&quot;Link to https://docs.gradle.org/5.5/release-notes.html (opens in a new tab)&quot;&gt;Gradle 5.5&lt;/a&gt; now. While Gradle 6 is not official yet, Xtext has already been prepared for it. We closely followed the planned changes and revisited all relevant sources to ensure compatibility with Gradle’s next major versions. We expect that Xtext finally upgrades to Gradle 6 shortly after its release.&lt;/p&gt; 
&lt;h2&gt;XTEXT WEB SUPPORT UPDATED&lt;/h2&gt; 
&lt;p&gt;With the rise of the Language Server Protocol (LSP) integration of Xtext-based languages into other IDEs and editors, it is often preferred to work through language servers. Xtext is integrating the latest LSP4J version 0.8.0 und thus the current status of the LSP.&lt;/p&gt; 
&lt;p&gt;When it comes to language support in web-based editors, Xtext offers a second approach called &lt;a href=&quot;https://github.com/eclipse/xtext-web&quot; title=&quot;Link to https://github.com/eclipse/xtext-web (opens in a new tab)&quot;&gt;Xtext Web&lt;/a&gt;. The software components that Xtext Web is based on have been upgraded to their latest state. Also, the examples have been polished again with this version.&lt;/p&gt; 
&lt;p&gt;To get a better feeling, we have put the Xtext Web examples online now, so you don’t have to download and build them locally. Try the Xtext Web integration with the various supported editors &lt;a href=&quot;https://ace.c9.io/&quot; title=&quot;Link to Ace (opens in a new tab)&quot;&gt;Ace&lt;/a&gt;, &lt;a href=&quot;https://codemirror.net/&quot; title=&quot;Link to CodeMirror (opens in a new tab)&quot;&gt;CodeMirror&lt;/a&gt;, and &lt;a href=&quot;https://orionhub.org/mixloginstatic/landing.html?redirect=https%3A%2F%2Forionhub.org%2F&amp;amp;key=FORMOAuthUser&quot; title=&quot;Link to Orion (opens in a new tab)&quot;&gt;Orion&lt;/a&gt; here: &lt;a href=&quot;https://xtext-demo.itemis.com/&quot; title=&quot;Link to Xtext Demo (opens in a new tab)&quot;&gt;https://xtext-demo.itemis.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What’s your wish for future Xtext versions?&lt;/h2&gt; 
&lt;p&gt;We will continue to implement exciting features and ensure that Xtext will be compatible with the latest and greatest of all that we use. While we focus the development on the needs of our customers, you may have ideas how to make Xtext even better. Please tell us! We won’t bite you (and we can’t do this through the wire anyway)!&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fxtext-2-19-release-builds-on-eclipses-new-infrastructure-jiro&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Sep 2019 07:27:38 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>Scott Lewis: OSGi Remote Services with Apache Dubbo</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-895972499876792176</guid>
	<link>http://eclipseecf.blogspot.com/2019/08/osgi-remote-services-with-apache-dubbo.html</link>
	<description>&lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Communication_Framework_Project&quot;&gt;ECF's implementation&lt;/a&gt; of &lt;a href=&quot;https://osgi.org/specification/osgi.cmpn/7.0.0/service.remoteservices.html&quot;&gt;OSGi R7 Remote Services&lt;/a&gt; allows for replacing the underlying distribution system (repsonsible for the object serialization, transport, and other things).  &lt;br /&gt;&lt;br /&gt;This makes it relatively easy to replace one kind of distribution (e.g. Jersey, ActiveMQ) with other/new distribution systems.  &lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://dubbo.apache.org/&quot;&gt;Apache Dubbo&lt;/a&gt; has recently been contributed to Apache, and we've &lt;a href=&quot;https://github.com/ECF/DubboProvider&quot;&gt;created a distribution provider based upon Apache Dubbo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://wiki.eclipse.org/Distribution_Providers&quot;&gt;Here's a list&lt;/a&gt; of open ECF Remote Service distribution providers.   If you would like Remote Services support for a particular transport, or you've created your own distribution (or &lt;a href=&quot;https://wiki.eclipse.org/Discovery_Providers&quot;&gt;discovery&lt;/a&gt;) based upon some other transport and wish to make it available to others please &lt;a href=&quot;mailto:ecf-dev@eclipse.org&quot;&gt;let us know&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Sat, 31 Aug 2019 17:37:31 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Mat Booth: Eclipse Module on F30 Addendum</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2019-08-30:/10-eclipse-module-f30-addendum.html/</guid>
	<link>http://blog.matbooth.co.uk/10-eclipse-module-f30-addendum.html</link>
	<description>&lt;p&gt;Additional information about installing the Eclipse IDE module on F30.&lt;/p&gt;</description>
	<pubDate>Fri, 30 Aug 2019 11:30:00 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x for Scala next steps</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-for-scala-next-steps</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-for-scala-next-steps</link>
	<description>&lt;article&gt;&lt;h1 id=&quot;scala-for-eclipse-vert-x-the-next-steps&quot;&gt;Scala for Eclipse Vert.x: The next steps&lt;/h1&gt;
&lt;h2 id=&quot;tl-dr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No Scala 2.13 in Eclipse Vert.x 3.x due to increased support burden&lt;/li&gt;
&lt;li&gt;New value classes based approach for Vert.x 4&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;retrospective&quot;&gt;Retrospective&lt;/h2&gt;
&lt;p&gt;It’s been more than two years since the inception of &lt;code&gt;vert-lang-scala&lt;/code&gt; to the Vert.x ecosystem. And almost as long since I wrote my first &lt;a href=&quot;https://vertx.io/blog/scala-is-here/&quot;&gt;blog post&lt;/a&gt; about it.&lt;/p&gt;
&lt;p&gt;A lot has happened since March 2017:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vertx-lang-scala&lt;/code&gt; kept up with new versions of Scala&lt;/li&gt;
&lt;li&gt;all Vert.x-modules are supported (35 so far)&lt;/li&gt;
&lt;li&gt;a Giter8 based &lt;a href=&quot;https://github.com/vert-x3/vertx-scala.g8&quot;&gt;template&lt;/a&gt; was added for easily bootstrapping a Vert.x-Scala-project&lt;/li&gt;
&lt;li&gt;Bugs were squashed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And most recently we received a great contribution by &lt;a href=&quot;https://github.com/NikolajLeischner&quot;&gt;Nikolaj Leischner&lt;/a&gt; who was kind enough to port the &lt;a href=&quot;https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Scala/vertx-web-scala&quot;&gt;techempowered&lt;/a&gt; benchmark to vert-lang-scala. Which will be part of the next steps.&lt;/p&gt;
&lt;p&gt;The numbers produced by this benchmark were very promising and and additional motivation to move to the next phase of Scala support for Vert.x.&lt;/p&gt;
&lt;h2 id=&quot;old-idea&quot;&gt;Old idea&lt;/h2&gt;
&lt;p&gt;Before getting to the new ideas I want to take a look at the “old” one.&lt;/p&gt;
&lt;p&gt;The current version of vert-lang-scala is based around the idea of wrapping the Vert.x-API with a dedicated Scala-layer. That layer is created using a Freemarker-based code generator. I took this idea from the first try by Tim Fox for building that support.&lt;/p&gt;
&lt;p&gt;Wrapping the existing Java-API was rather painful but gave me great flexibility to create an idiomatic Scala-API.&lt;/p&gt;
&lt;p&gt;But an approach like that comes with a price:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are a lot of intermediate objects being created.&lt;/li&gt;
&lt;li&gt;Many unneccessary conversions between Java/Scala types&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both increased memory consumption and garbage collection activity quite a bit and has been bugging me from the beginning.&lt;/p&gt;
&lt;h2 id=&quot;new-idea&quot;&gt;New idea&lt;/h2&gt;
&lt;p&gt;With Vert.x 4 approaching I was finally able to invest time into the rework I had wanted to do for quite a while.&lt;/p&gt;
&lt;p&gt;The core idea is to replace the current wrapping based approach with something more lightweight but native to the Scala-world.&lt;/p&gt;
&lt;p&gt;And that’s where &lt;a href=&quot;https://docs.scala-lang.org/overviews/core/value-classes.html&quot;&gt;value classes&lt;/a&gt; come in.&lt;/p&gt;
&lt;p&gt;Value classes allow the extension of existing classes with additional methods. They make it easy to control &lt;strong&gt;when&lt;/strong&gt; methods become visible and do that with a minimum of overhead. To be precise: A wrapping class is normally ever only instantiated &lt;strong&gt;once&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A good example is the addition of methods for wrapping the Vert.x approach of Promises with Scala-Futures. Each method returning a Vert.x-Promise needs to receive an alternative version which returns a Scala-Future.&lt;/p&gt;
&lt;p&gt;In Vert.x 3 I achieved that by adding methods to the wrapper and giving them a distinct name. A method called &lt;strong&gt;listen&lt;/strong&gt; returning a Promise would receive a companion called &lt;strong&gt;listenFuture&lt;/strong&gt; in the Scala layer.&lt;/p&gt;
&lt;p&gt;Let’s look at how this looks in the new approach:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; io.vertx.scala
&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;core&lt;/span&gt;{&lt;/span&gt;
   &lt;span class=&quot;hljs-keyword&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HttpServerScala&lt;/span&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;asJava&lt;/span&gt;:&lt;/span&gt; io.vertx.core.http.&lt;span class=&quot;hljs-type&quot;&gt;HttpServer&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;AnyVal&lt;/span&gt; {
      &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;listenFuture&lt;/span&gt;(&lt;/span&gt;port: java.lang.&lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt;): scala.concurrent.&lt;span class=&quot;hljs-type&quot;&gt;Future&lt;/span&gt;[io.vertx.core.http.&lt;span class=&quot;hljs-type&quot;&gt;HttpServer&lt;/span&gt;] = {..}
      ..
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code above does the following things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It creates a package object for &lt;strong&gt;io.vertx.scala.core&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;it adds an implict class &lt;strong&gt;HttpServerScala&lt;/strong&gt; to wrpa &lt;strong&gt;HttpServer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;it adds a &lt;strong&gt;listenFuture&lt;/strong&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using this method in code looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; io.vertx.scala.demo

&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; io.vertx.lang.scala.&lt;span class=&quot;hljs-type&quot;&gt;VertxExecutionContext&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; io.vertx.scala.core._

&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; scala.util.{&lt;span class=&quot;hljs-type&quot;&gt;Failure&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Success&lt;/span&gt;}

&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt; {&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;(&lt;/span&gt;args: &lt;span class=&quot;hljs-type&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;]): &lt;span class=&quot;hljs-type&quot;&gt;Unit&lt;/span&gt; = {
    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;vertx&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Vertx&lt;/span&gt;.vertx()
    &lt;span class=&quot;hljs-keyword&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ec&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VertxExecutionContext&lt;/span&gt;(vertx.getOrCreateContext())
    vertx
      .createHttpServer()
      .requestHandler(r =&amp;gt; {
        r.response().end(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bye&quot;&lt;/span&gt;)
      })
      .listenFuture(&lt;span class=&quot;hljs-number&quot;&gt;6667&lt;/span&gt;)
      .onComplete {
        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Success&lt;/span&gt;(_) =&amp;gt; println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Started&quot;&lt;/span&gt;)
        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Failure&lt;/span&gt;(exception) =&amp;gt; println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Failure&quot;&lt;/span&gt;)
      }
  }
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Importing the package object using &lt;strong&gt;import io.vertx.scala.core._&lt;/strong&gt; brings the extension method into scope and makes them available on all instances of &lt;strong&gt;HttpServer&lt;/strong&gt;. In the example above &lt;strong&gt;createHttpServer()&lt;/strong&gt; return such an instance and we can now use the idiomatic Scala way of handling a Future.&lt;/p&gt;
&lt;h3 id=&quot;even-more&quot;&gt;Even more&lt;/h3&gt;
&lt;p&gt;Extending classes with Future-methods is only one of the new things to come. On top of that the support for DataObjects will be considerably improved, both through extending them and by providing type aliases.&lt;/p&gt;
&lt;p&gt;I also switched from doing all conversions for collections automatically to handing the control back to the user. Something which gets even more important for Scala 2.13 and the new collection API.&lt;/p&gt;
&lt;h3 id=&quot;the-downside&quot;&gt;The downside&lt;/h3&gt;
&lt;p&gt;The clear downside of this approach is that the Java-methods will stay visible since the java-classes won’t be wrapped but extended. This might lead to some confusion but I am pretty sure the benefits outweight this downside.&lt;/p&gt;
&lt;p&gt;The bigger change will be the removal of automatic vonversion between Scala types (Long/Int/String and  Collections) and their Java counterparts. I spent considerable time trying to tune that part in the current version bbut always ended up hitting some edgecase. For now I’ve decided to have the user pick the right time to convert.&lt;/p&gt;
&lt;p&gt;I might still add this feature in a later version if user feedback points into that direction.&lt;/p&gt;
&lt;h2 id=&quot;when-will-i-get-it-&quot;&gt;When will I get it?&lt;/h2&gt;
&lt;p&gt;First for the good news: There is already a &lt;a href=&quot;https://github.com/vert-x3/vertx-lang-scala/tree/4.0&quot;&gt;branch&lt;/a&gt; with a full implementation.&lt;/p&gt;
&lt;p&gt;The bad news: It will break until Vert.x 4.0 is finally released.&lt;/p&gt;
&lt;p&gt;Vert.x 4 is in active development with most APIs already finalized but breaking changes still happen. So use at your own risk!&lt;/p&gt;
&lt;h2 id=&quot;what-about-scala-2-13-&quot;&gt;What about Scala 2.13?&lt;/h2&gt;
&lt;p&gt;Scala 2.13 has been released recently which prompted questions from the community about when it will be supported by Vert.x.&lt;/p&gt;
&lt;p&gt;I haven’t done a good job providing the results of our internal discussions on that topic to the community. So here we go:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vert.x 3 will stay on 2.12 for the following reasons:&lt;ul&gt;
&lt;li&gt;Both are still actively supported&lt;/li&gt;
&lt;li&gt;Scala ecosystems takes some time to do the switch to 2.13&lt;/li&gt;
&lt;li&gt;We simply don’t have the capacity to support both versions &lt;strong&gt;AND&lt;/strong&gt; the upcoming new version&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vert.x 4 will receive 2.13 support&lt;ul&gt;
&lt;li&gt;Scala ecosystem will have moved closer to 2.13 adoption when Vert.x 4 comes out&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;for-the-adventure-seaker&quot;&gt;For the adventure seaker&lt;/h2&gt;
&lt;p&gt;I actually did a port of vertx-lang-scala 3.8 to Scala 2.13 and you can grab the work in this &lt;a href=&quot;https://github.com/vert-x3/vertx-lang-scala/tree/3.8_2.13&quot;&gt;branch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Don’t expect &lt;strong&gt;ANY&lt;/strong&gt; support for this branch. This was only an experiment to see how much I had to change for initial 2.13 support.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Vert.x 4 will be an evolutionary step for vertx-lang-scala. Value classes promise to reduce both complexity and allocation rate, two things which have been bugging me quite a bit with the current approach.&lt;/p&gt;
&lt;p&gt;I am eager to hear from you all what you think about this new direction.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Eclipse Collections 10.0 Released</title>
	<guid isPermaLink="false">https://medium.com/p/49bae6a4b4c6</guid>
	<link>https://medium.com/oracledevs/eclipse-collections-10-0-released-49bae6a4b4c6?source=rss-df39b86e9f04------2</link>
	<description>&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1010/1*PF-EQ7IlxLPI792mM9HuWw.png&quot; /&gt;&lt;figcaption&gt;The features you want, with the collections you need.&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Thank you to the contributors&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; 9.2 was released in May 2018. The 9.x releases were extremely feature rich and had many contributions from the community. The 10.0 release is even more so. There were 18 contributors in the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/10.0.0&quot;&gt;10.0 release&lt;/a&gt;. This is outstanding! Thank you so much to all of the contributors who donated their valuable time to making Eclipse Collections more feature rich and even higher quality. Your efforts are truly appreciated.&lt;/p&gt;&lt;h3&gt;Too many features for one blog&lt;/h3&gt;&lt;p&gt;There are so many features included in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; 10.0, that it is going to take me a bit longer to write good examples leveraging all of them. So I have decided to break this release blog into a few parts. This part will purely be a summary.&lt;/p&gt;&lt;h3&gt;Update: Detailed Feature Blogs&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/new-features-of-eclipse-collections-10-0-part-1-3307ce997d21?source=friends_link&amp;amp;sk=6e99f4dc0ef15ec28a4ba2410ef6eaaf&quot;&gt;Part 1&lt;/a&gt; — Covers Features 1–10&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/new-features-of-eclipse-collections-10-0-part-2-cc215aadc907?source=friends_link&amp;amp;sk=76f3543e88c8f06062d34f094c67db71&quot;&gt;Part 2&lt;/a&gt; — Covers Features 11–20&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/new-features-of-eclipse-collections-10-0-part-3-ff801223f821?source=friends_link&amp;amp;sk=4f2c6d12f1dd3f65aac4f609f717a144&quot;&gt;Part 3&lt;/a&gt; — Covers Features 21–26&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/10-features-in-eclipse-collections-10-0-b5529f41d448?source=friends_link&amp;amp;sk=00774aab62995bea1fd5f9955b46987e&quot;&gt;My Top 10 List of Features&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;The Feature Summary&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Specialized Interfaces for MultiReaderList/Bag/Set&lt;/li&gt;&lt;li&gt;Implement Stream for Primitive Lists&lt;/li&gt;&lt;li&gt;Implement toMap with target Map&lt;/li&gt;&lt;li&gt;Implement MutableMapIterable.removeAllKeys&lt;/li&gt;&lt;li&gt;Implement RichIterable.toBiMap&lt;/li&gt;&lt;li&gt;Implement Multimap.collectKeyMultiValues&lt;/li&gt;&lt;li&gt;Implement fromStream(Stream) on collection factories&lt;/li&gt;&lt;li&gt;Implement LazyIterate.cartesianProduct&lt;/li&gt;&lt;li&gt;Add updateValues to primitive maps&lt;/li&gt;&lt;li&gt;Implement MutableMultimap.getIfAbsentPutAll&lt;/li&gt;&lt;li&gt;Implement Bag.collectWithOccurrences&lt;/li&gt;&lt;li&gt;Add reduce and reduceIfEmpty for primitive iterables&lt;/li&gt;&lt;li&gt;Add &amp;lt;type1&amp;gt;&amp;lt;type2&amp;gt;To&amp;lt;type1&amp;gt;Function for primitives&lt;/li&gt;&lt;li&gt;Add ofInitialCapacity to primitive maps&lt;/li&gt;&lt;li&gt;Implement countByEach on RichIterable&lt;/li&gt;&lt;li&gt;Implement UnifiedSetWithHashingStrategy.addOrReplace&lt;/li&gt;&lt;li&gt;Implement UnmodifiableMutableOrderedMap&lt;/li&gt;&lt;li&gt;Implement withAllKeyValues on mutable primitive maps.&lt;/li&gt;&lt;li&gt;Add ability to create PrimitivePrimitive/PrimitiveObject/ObjectPrimitiveMap from Iterable&lt;/li&gt;&lt;li&gt;Implement ofInitialCapacity and withInitialCapacity in HashingStrategySets&lt;/li&gt;&lt;li&gt;Implement getAny on RichIterable&lt;/li&gt;&lt;li&gt;Revamp and standardize resize/rehash for all primitive hash structures&lt;/li&gt;&lt;li&gt;Implement factory methods to convert Iterable&amp;lt;BoxedPrimitive&amp;gt; to PrimitiveStack/Bag/List/Set&lt;/li&gt;&lt;li&gt;Implement ImmutableSortedBagMultimapFactory in Multimaps&lt;/li&gt;&lt;li&gt;Implement a Map factory method that takes a Map parameter.&lt;/li&gt;&lt;li&gt;Wildcard type in MultableMultimap.putAllPairs &amp;amp; add methods&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Check out the latest &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.0.0/overview-summary.html&quot;&gt;JavaDoc&lt;/a&gt; for the new features.&lt;/p&gt;&lt;h3&gt;Other Improvements&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Improved Test Coverage&lt;/li&gt;&lt;li&gt;Many build improvements&lt;/li&gt;&lt;li&gt;Remove duplicate code&lt;/li&gt;&lt;li&gt;Removed some deprecated classes&lt;/li&gt;&lt;li&gt;Improved generics&lt;/li&gt;&lt;li&gt;Some new benchmark tests&lt;/li&gt;&lt;li&gt;And much more!&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Thank you&lt;/h3&gt;&lt;p&gt;From all the contributors and committers… thank you for using Eclipse Collections. We hope you enjoy all of the new features and improvements in the 10.0 release.&lt;/p&gt;&lt;p&gt;I’ll be publishing detailed examples for the new features in the 10.0 release in a few blogs. Stay tuned!&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=49bae6a4b4c6&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/eclipse-collections-10-0-released-49bae6a4b4c6&quot;&gt;Eclipse Collections 10.0 Released&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Thu, 29 Aug 2019 23:57:41 +0000</pubDate>
</item>
<item>
	<title>N4JS: Redux App Development and Testing in N4JS (Chess Game Part 2)</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-8839918734785430851</guid>
	<link>https://n4js.blogspot.com/2019/08/redux-app-development-and-testing-in.html</link>
	<description>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;In large applications, &lt;a href=&quot;https://redux.js.org/&quot; target=&quot;_blank&quot;&gt;Redux&lt;/a&gt; - an implementation of &lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot;&gt;Flux architecture&lt;/a&gt; created by Facebook - is often used to organise application code by using a strict data flow in one direction only. Redux is UI agnostic, and can be used in conjunction with any UI library. As a continuation of our chess game tutorial with React, we show how to extract the entire program state out of React components, store it with Redux, and test it with N4JS. The full tutorial is available at &lt;a href=&quot;https://www.eclipse.org/n4js/userguides/n4js-tutorial-chess/n4js-tutorial-chess-redux.html&quot; target=&quot;_blank&quot;&gt;eclipse.org/n4js&lt;/a&gt; and the sources can be found at &lt;a href=&quot;https://github.com/Eclipse/n4js-tutorials&quot; target=&quot;_blank&quot;&gt;github.com/Eclipse/n4js-tutorials&lt;/a&gt;.&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The first part of the chess game tutorial discussed how to develop a chess game app with React and JSX in N4JS. We have stored the program state - which for instance contains information about the locations of all chess pieces - in the state of the React components directly. As applications become larger, however, the mix of program state and UI makes the application hard to comprehend and difficult to test. To address these issues, we extract the program state from the UI components in the second part of the tutorial.&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;When using React with Redux, we store the application state in Redux store instead of the state of React components. As a result, React components become stateless UI elements and simply render the UI using the data retrieved from the Redux store. In a Redux architecture, data flows strictly in one direction. The diagram below graphically depicts the action/data flow in a React/Redux app.&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Strict data flow of flux architecture application&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;The action/data flow in the diagram can be roughly understood as follows:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;When a user interaction is triggered on the React component (e.g. button clicked, text field edited etc.), an action is created. The action describes the changes needed to be updated in the application state. For instance, when a text field is edited, the action created may contain the new string of the text field.&lt;/li&gt;&lt;li&gt;Then the action is dispatched to the Redux store whereby the Redux store stores the application state, usually as a hierarchical tree of state.&lt;/li&gt;&lt;li&gt;The reducers take the action and the current application state and create an updated application state.&lt;/li&gt;&lt;li&gt;If the changes in the application state are to a certain React component, they are forwarded into the component in form of props. The change in props causes the component to re-render.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In the second part of the tutorial we further elaborate on the interaction of React and Redux and migrate the original chess non-Redux app. The tutorial explains the role of the reducer, and how the game state is stored and maintained in the Redux store. Based on storing the game using Redux, the tutorial shows how to test the game application with the N4JS test library &lt;i&gt;Mangelhaft&lt;/i&gt;, by for instance checking that valid move destination squares are updated after a chess piece was selected.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Note that the way of testing the game logics is completely UI-agnostic and no React components are involved at all. This is thanks to the decoupling of game logics from UI with the help of Redux.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Minh Quang Tran&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 29 Aug 2019 16:04:16 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Ed Merks: And Now for Something Completely Different</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3879044552984472733.post-4273181109797448391</guid>
	<link>http://ed-merks.blogspot.com/2019/08/and-now-for-something-completely.html</link>
	<description>It's been 5 years since I last blogged, so I had to delete 500 SPAM  posts when getting started again.  Much has happened over the past  years, some of them not so great. When you start to get old like me, you  must deal with the older generation gradually passing on and health  problems, such as coronary re-plumbing, can become an ugly fact of life.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s1600/OldShip.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;180&quot; src=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s320/OldShip.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I've been working with itemis for the past 11 years, but that now  draws to a close.  I wish to thank them for their generous support over  all these years.  Many of you might thank them as well because much of  what I've contributed is thanks to their funding.  Though admittedly I  have the nasty habit of working like a maniac, beyond any reasonable  number of working hours, regardless of whether or not there is financial  reward.  Cool things are just so compelling. But the worst habit then  is not bothering to document or advertise all these cool new features as  they become available, but rather to dive into the next obsession  because somehow that's more compelling.  Compulsion is a bit of a Merks'  family trait, e.g., my sister has more than 20 dogs, though it's easy  to lose count...&lt;br /&gt;&lt;br /&gt;In any case, most of my obsession over the last year has been related  to working with Airbus.  I don't normally talk about my customers, but  given they were gracious enough to allow me to demo at last year's  EclipseCon the software being developed at Airbus, it's common knowledge  anyway.  My goodness but that was a creative and cool project!  Unfortunately that too has, as is the case for all good things, come  to an end.&lt;br /&gt;&lt;br /&gt;I immediately dove into generating a quality report for the Eclipse  SimRel p2 repository; there's no rest for the wicked nor for the  compelled.  I used EMF's Java Emitter Templates (JET) for implementing  that, just as I did for generating the full site information for  &lt;a href=&quot;https://download.eclipse.org/modeling/emf/emf/builds/index.html&quot;&gt;EMF's Update Sites&lt;/a&gt;  as part of migrating the build to Maven/Tycho.&lt;br /&gt;&lt;br /&gt;Speaking of which, did you know that you can make it trivially easy for your contributors to set up a development environment? Just have a look at &lt;a href=&quot;https://ci.eclipse.org/emf/&quot;&gt;EMF' build page&lt;/a&gt;.  Also, did you know that there exists such a thing for the complete &lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Platform_SDK_Provisioning&quot;&gt;Eclipse Platform SDK&lt;/a&gt; as well? Of course not, because I never bothered to tell you!&lt;br /&gt;&lt;br /&gt;What's really supergeil (yes, I live in Germany and speak fluent  Denglish) about the installing an environment with the full Platform  SDK, or some subset there of, is that you can easily see all the Git  history of each source file, so you can see what exactly has changed and  evolved.  Also, when developing new applications, you can easily search  for how the Platform implements those things; then you can snarf and  barf out your own solutions, with all due respect for the EPL of  course.  You can even find out all the places that a constant is  actually used; you cannot do that against binaries because constants get  in-lined.  Also, if you see some label in the IDE, you can search for  where it comes from, some *.properties file somewhere no doubt, and then  you will know the name of that property and can easily find where  that's defined and how that's used in the code.  You might even  contribute fixes via Gerrit commits!&lt;br /&gt;&lt;br /&gt;But I digress.  I was using JET to generate a nice helpful web page  with information about all the problems in the SimRel repo, or in any  arbitrary repo actually, i.e., invalid licenses, unsigned content,  missing pack200 files, duplicate bundles, inappropriate providers, and  so on. But then I got frustrated that JET templates eventually get  really hard to read, especially as they become more complicated.  Then,  when you need it the most, all the nice features of JDT are missing  while editing the scriplets and expressions in that template. So as I am  wont to do, I digressed further and spent the better part of the last  two months working on a rich editor for JET.  I'm sorry (not!) that I  had to violate a few API rules to do so, but alas, API rights activists  is a topic for another blog because that's a long digression.  The good thing is that the JET editor is finished now; it will be in  2019-09's M3.  Here's a sneak preview:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s1600/JETEditor.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;231&quot; src=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s320/JETEditor.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Yes, that's content assist, just is if were in a real Java editor! Not only that, this time I wrote documentation for it in EMF's doc bundle. And, to top that off with icing, this time I blog  about it.  Perhaps only three people in the world will ever use it, but  I am one of those three people and I love it and I need it even for  working with EMF's code generation templates too. So now I can pop this off  my digression stack and go back to generating that p2 repo quality  report.  I've been doing that for the past week, and it's almost ready  for prime-time.&lt;br /&gt;&lt;br /&gt;But then at this point, I must ask myself, where is the financial gain  in all this?  My local neighborhood fox, I've named him Fergus,  might  be trying to tell me something.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s1600/Fergus.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s320/Fergus.png&quot; width=&quot;197&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Perhaps you should be a little more sly.  Perhaps the endless free goodness too must come to an end...</description>
	<pubDate>Thu, 29 Aug 2019 09:23:18 +0000</pubDate>
	<author>noreply@blogger.com (Ed Merks)</author>
</item>
<item>
	<title>Eclipse Ditto: Eclipse Ditto now supports OpenID Connect</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-08-28-openid-connect.html</guid>
	<link>https://www.eclipse.org/ditto/2019-08-28-openid-connect.html</link>
	<description>&lt;p&gt;Eclipse Ditto now supports all OAuth 2.0 providers which implement &lt;a href=&quot;https://openid.net/connect/&quot;&gt;OpenID Connect&lt;/a&gt; out-of-the-box.
You can find a list of certified providers at &lt;a href=&quot;https://openid.net/developers/certified/&quot;&gt;OpenID Connect - Certified OpenID Provider Servers and Services&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this post, we want to give an example of this new feature using the open source provider &lt;a href=&quot;https://www.ory.sh&quot;&gt;ORY Hydra&lt;/a&gt;.
Follow their &lt;a href=&quot;https://www.ory.sh/docs/next/hydra/configure-deploy#installing-ory-hydra&quot;&gt;installation guide&lt;/a&gt; for a
 docker based setup on your development machine.&lt;/p&gt;

&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;
&lt;p&gt;Download the self-signed certificate form the ORY Hydra server: https://localhost:9000/.well-known/openid-configuration&lt;/p&gt;

&lt;p&gt;Use the downloaded certificate for the akka-http ssl configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-hocon&quot;&gt;ssl-config {
  trustManager = {
    stores = [
      { type = &quot;PEM&quot;, path = &quot;/path/to/cert/globalsign.crt&quot; }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The authentication provider must be added to the ditto-gateway configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-hocon&quot;&gt;ditto.gateway.authentication {
    oauth {
      openid-connect-issuers = {
        ory = &quot;https://localhost:9000/&quot;
      }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The configured subject-issuer will be used to prefix the value of the “sub” claim, e.g.&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subjects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ory:foo@bar.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;generated&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;authenticate-ditto-api&quot;&gt;Authenticate Ditto API&lt;/h4&gt;
&lt;p&gt;Create an OAuth client with hydra to be able to create ID Tokens.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;HYDRA_ADMIN_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://ory-hydra-example--hydra:4445 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; hydraguide &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  oryd/hydra:v1.0.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  clients create &lt;span class=&quot;nt&quot;&gt;--skip-tls-verify&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--id&lt;/span&gt; eclipse-ditto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--secret&lt;/span&gt; some-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grant-types&lt;/span&gt; authorization_code,refresh_token,client_credentials,implicit &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--response-types&lt;/span&gt; token,code,id_token &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--scope&lt;/span&gt; openid,offline &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--callbacks&lt;/span&gt; http://127.0.0.1:9010/callback
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use the client to generate an ID Token.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; hydraguide &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9010:9010 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  oryd/hydra:v1.0.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  token user &lt;span class=&quot;nt&quot;&gt;--skip-tls-verify&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 9010 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--auth-url&lt;/span&gt; https://localhost:9000/oauth2/auth &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--token-url&lt;/span&gt; https://ory-hydra-example--hydra:4444/oauth2/token &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--client-id&lt;/span&gt; eclipse-ditto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--client-secret&lt;/span&gt; some-secret &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--scope&lt;/span&gt; openid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After that perform the OAuth 2.0 Authorize Code Flow by opening the link, as prompted, 
in your browser, and follow the steps shown there.&lt;/p&gt;

&lt;p&gt;Use the generated token to authenticate Ditto API.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  http://localhost:8080/api/2/things &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Authorization: Bearer &amp;lt;JWT&amp;gt;'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 28 Aug 2019 04:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Jakarta Newsletter August 2019: Jakarta EE 8 Preview</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/ydKhDpjHIME/jakarta-newsletter-august-2019-jakarta-ee-8-preview</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/ydKhDpjHIME/jakarta-newsletter-august-2019-jakarta-ee-8-preview</link>
	<description>This newsletter puts a spotlight on the present and future of Jakarta EE, the journey to Jakarta EE 8,JakartaOne Livestream and more.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/ydKhDpjHIME&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 26 Aug 2019 16:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Welcome Ivar Grimstad!</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/J9ZubNQauwg/welcome-ivar</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/J9ZubNQauwg/welcome-ivar</link>
	<description>We are happy to announce that effective October 1st, Ivar Grimstad will join the Eclipse Foundation in the role of Jakarta EE Developer Advocate.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/J9ZubNQauwg&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 26 Aug 2019 16:00:00 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 4 milestone 2 released!</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released</link>
	<description>&lt;article&gt;&lt;p&gt;We are extremely pleased to announce the second 4.0 milestone release of Eclipse Vert.x .&lt;/p&gt;
&lt;p&gt;Vert.x 4 is the evolution of the Vert.x 3.x series that will bring key features to Vert.x.&lt;/p&gt;
&lt;p&gt;This release aims to provide a reliable distribution of the current development of Vert.x 4 for people that
want to try it and provide feedback.&lt;/p&gt;
&lt;h4 id=&quot;futurisation&quot;&gt;Futurisation&lt;/h4&gt;
&lt;p&gt;Vert.x 4 extends the 3.x callback asynchronous model to a future/callback hybrid model.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NetClient&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;hljs-comment&quot;&gt;// Since 3.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host, Handler&amp;gt; handler)&lt;/span&gt;&lt;/span&gt;;

  &lt;span class=&quot;hljs-comment&quot;&gt;// New in 4.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;Future &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host)&lt;/span&gt;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first milestone, only covered &lt;em&gt;Vert.x Core&lt;/em&gt;, this second milestone has made significant progress with the futurisation
of the following stack modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vertx-auth&lt;/li&gt;
&lt;li&gt;vertx-web&lt;/li&gt;
&lt;li&gt;vertx-mqtt&lt;/li&gt;
&lt;li&gt;vertx-cassandra-client&lt;/li&gt;
&lt;li&gt;vertx-redis-client&lt;/li&gt;
&lt;li&gt;vertx-kakfa-client&lt;/li&gt;
&lt;li&gt;vertx-amqp-client&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;tracing&quot;&gt;Tracing&lt;/h4&gt;
&lt;p&gt;Instrumenting asynchronous application for distributed tracing is quite challenging because most tracing libraries
rely on &lt;a href=&quot;https://fr.wikipedia.org/wiki/Thread_Local_Storage&quot;&gt;thread local storage&lt;/a&gt;. While it works reasonnably well
in a blocking application, this does not work for an asynchronous application.&lt;/p&gt;
&lt;p&gt;This supposes that the application control flow matters (i.e threads) although what really matters is the application
request flow (e.g the incoming HTTP request).&lt;/p&gt;
&lt;p&gt;We improved Vert.x 4 to reify the request flow, making it possible to integrate popular tracing tools such as &lt;a href=&quot;https://zipkin.io&quot;&gt;Zipkin&lt;/a&gt;
or &lt;a href=&quot;https://opentracing.io&quot;&gt;Opentracing&lt;/a&gt;. Vert.x performance is legendary and we made sure that this does not have
any overhead out of the box (disabled).&lt;/p&gt;
&lt;p&gt;We provide support for these two popular libraries under the &lt;em&gt;Vert.x Tracing&lt;/em&gt; umbrella.&lt;/p&gt;
&lt;h4 id=&quot;other-changes&quot;&gt;Other changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Groovy has been simplified in Vert.x 4 to remove code generation that was not really needed in practice&lt;/li&gt;
&lt;li&gt;The original Redis client deprecated in 3.7 has been removed replaced by the new Redis client&lt;/li&gt;
&lt;li&gt;The following components have reached their end of life and have been pruned&lt;ul&gt;
&lt;li&gt;MySQL / PostgreSQL async client replaced by the Vert.x SQL Client (since 3.8)&lt;/li&gt;
&lt;li&gt;AMQP bridge replaced by the Vert.x AMQP Client (since 3.7)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ramping-up-to-vert-x-4&quot;&gt;Ramping up to Vert.x 4&lt;/h4&gt;
&lt;p&gt;Instead of developing all new features exclusively in Vert.x 4, we introduce some of these features in the 3.x branch
so the community can benefit from them. The Vert.x 4 development focus on more fundamental changes that cannot be done
in the 3.x series.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; src=&quot;https://vertx.io/assets/blog/vertx-4-milestone2-release/vertx-4-timeline.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This is the first milestone of Vert.x 4, we aim to release Vert.x 4 by the end of this year and you can of course
expect more milestones to outline the progress of the effort.&lt;/p&gt;
&lt;h4 id=&quot;finally&quot;&gt;Finally&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes&quot;&gt;deprecations and breaking changes&lt;/a&gt;
 can be found on the wiki.&lt;/p&gt;
&lt;p&gt;For this release there are no Docker images.,&lt;/p&gt;
&lt;p&gt;The release artifacts have been deployed to &lt;a href=&quot;https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone2&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone2/&quot;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can bootstrap a Vert.x 4.0.0-milestone2 project using &lt;a href=&quot;https://start.vertx.io&quot;&gt;https://start.vertx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation has been deployed on this preview web-site &lt;a href=&quot;https://vertx-ci.github.io/vertx-4-preview/docs/&quot;&gt;https://vertx-ci.github.io/vertx-4-preview/docs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thatâ€™s it! Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mat Booth: Eclipse is Now a Module on Fedora 30</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2019-08-21:/09-eclipse-module-f30.html/</guid>
	<link>http://blog.matbooth.co.uk/09-eclipse-module-f30.html</link>
	<description>&lt;p&gt;How to install the Eclipse IDE module on Fedora 30!&lt;/p&gt;</description>
	<pubDate>Wed, 21 Aug 2019 13:30:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Modeling Symposium @ EclipseCon Europe 2019</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=41891</guid>
	<link>https://eclipsesource.com/blogs/2019/08/20/modeling-symposium-eclipsecon-europe-2019/</link>
	<description>&lt;p&gt;We are happy to announce that Ed, Philip and Jonas are organizing the Modeling Symposium for the EclipseCon Europe 2019 in...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/08/20/modeling-symposium-eclipsecon-europe-2019/&quot; rel=&quot;nofollow&quot;&gt;Modeling Symposium @ EclipseCon Europe 2019&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 20 Aug 2019 08:58:43 +0000</pubDate>
</item>
<item>
	<title>Jonas Hungershausen: GSoC 2019 Summary: Dart support for the Eclipse IDE</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-summary/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-summary/</link>
	<description>&lt;p&gt;Summary of my Summer of Code 2019&lt;/p&gt;
&lt;p&gt;This post is a summary of my Summer of Code 2019.
My project was to bring Dart development support to the Eclipse IDE.
To do so I created a plugin that consumes the Dart analysis server using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.lsp4e&quot;&gt;LSP4E&lt;/a&gt;.
It also provides syntax highlighting using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.tm4e&quot;&gt;TM4E&lt;/a&gt; and many more features listed below.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;The following list showcases the most significant features of the plugin I (and other contributors) added during GSoC 2019.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running Dart programs directly from Eclipse&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/1&quot;&gt;eclipse/dartboard#1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard &amp;amp; error output in a dedicated console&lt;/li&gt;
&lt;li&gt;Support for multiple Launch configurations&lt;/li&gt;
&lt;li&gt;Running single files from the context menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dart preference page&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/10&quot;&gt;eclipse/dartboard#10&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the location for the Dart SDK that should be used for all actions&lt;/li&gt;
&lt;li&gt;Choose whether to automatically synchronize the dependencies of project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;First class Pub support&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/107&quot;&gt;eclipse/dartboard#107&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic synchronization of Pub dependencies when changing the &lt;code&gt;pubspec.yaml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Shortcut for running &lt;code&gt;$ pub get&lt;/code&gt; manually&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creating new Dart projects and files&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/115&quot;&gt;eclipse/dartboard#115&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stagehand templates are also supported&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Usage of the Dart logo&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/commit/a23fc1f57cd3fdc6e702759c507aa977f7dd7561&quot;&gt;eclipse/dartboard@a23fc1f&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Import existing Dart projects directly into the workspace&lt;/strong&gt; (+ automatic dependency synchronization) - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/116&quot;&gt;eclipse/dartboard#116&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Upstream Bug Fixes&lt;/h1&gt;
&lt;p&gt;During development I encountered many issues with the libraries and tools I was using.
As I was already aware I took the time to fix them directly and provide a patch or PR for the corresponding library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;NullPointerException&lt;/code&gt; in LSP4E's &lt;code&gt;SymbolsModel#getChildren&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/4&quot;&gt;eclipse/dartboard#4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/139273/&quot;&gt;Change 139273&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adjusted the Eclipse Light syntax theme in TM4E to match the classic Eclipse theme better&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/21&quot;&gt;eclipse/dartboard#21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the quick access menu in Eclipse resulted in an Exception.
This was caused by LSP4E not adhering to the LSP spec.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=548155&quot;&gt;Bug 548155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143723/&quot;&gt;Change 143723&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;textDocument/didSave&lt;/code&gt; notification is not supported by the Dart analysis server but LSP4E sent it anyway and this resulted in an error&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/32&quot;&gt;eclipse/dartboard#32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143922/&quot;&gt;Change 143922&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another NPE in TM4E's &lt;code&gt;ThemeContribution&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/tm4e/issues/207&quot;&gt;eclipse/tm4e#207&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/217&quot;&gt;eclipse/tm4e#217&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Things Left to do&lt;/h1&gt;
&lt;p&gt;I have completed all of my goals I set in the initial proposal for GSoC.
However a few things and features have come up during development that I plan on taking care of in the near future.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flutter support&lt;/strong&gt; - Flutter apps need to be run using the special &lt;code&gt;$ flutter&lt;/code&gt; command suite, instead of the default SDK
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/109&quot;&gt;eclipse/dartboard#109&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other things that could be enhanced include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pub console&lt;/strong&gt; - Currently there is now way to see the output of the pub commands
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/117&quot;&gt;eclipse/dartboard#117&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Webdev support&lt;/strong&gt; - Dart apps that should be run on the browser need to be run using the &lt;code&gt;$ webdev&lt;/code&gt; command line tools
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/110&quot;&gt;eclipse/dartboard#110&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope to be able to work on them but community contributions are always welcome.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A full list of commits and issues can be found on the &lt;a href=&quot;https://github.com/eclipse/dartboard&quot;&gt;project's GitHub repository&lt;/a&gt;.
Installation instructions can also be found there.&lt;/p&gt;
&lt;h1&gt;Appreciation&lt;/h1&gt;
&lt;p&gt;In the early days, Lakshminarayana Nekkanti has joined the project as a committer.
He has been extremely helpful since by fixing bugs in the Eclipse platform that have been open for years (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=513034&quot;&gt;Bug 513034&lt;/a&gt;) and contributing a lot of features and knowledge to the plugin.
Thank you, Lakshminarayana!&lt;/p&gt;
&lt;p&gt;I would also like to thank Lars Vogel who has been my Mentor and helped tremendously when I was unsure what to do.&lt;/p&gt;</description>
	<pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: Sponsor Testimonial: Bosch Software Innovations</title>
	<guid isPermaLink="false">2168 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/sponsor-testimonial-bosch-software-innovations</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;em&gt;...We find EclipseCon Europe to be the ideal gathering ground for the open source community and the perfect place to share and gain insights into new open source developments and trends. This year, we are contributing six sessions to the conference. We &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/if-bosch-can-do-it-you-can-do-it-too&quot;&gt;share insights into our approach to open source&lt;/a&gt; and take a closer look at &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/eclipse-hawkbit-101&quot;&gt;Eclipse hawkBit&lt;/a&gt;, &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/using-eclipse-kuksa-connected-vehicle-services&quot;&gt;Eclipse Kuksa&lt;/a&gt;, &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/osgi-creates-real-technical-added-value-iot-%E2%80%93-let%E2%80%99s-talk-about-concrete-use&quot;&gt;OSGi&lt;/a&gt; as well as ways of &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/ensuring-open-source-compliance-using-eclipse-foundation-technology&quot;&gt;improving efficiency of open source compliance processes&lt;/a&gt;. Feel free to also join us at the IoT playground....&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/sponsor-testimonial-bosch-software-innovations&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/BoschSpeakers.png?itok=Ky5jga8U&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 15 Aug 2019 14:48:50 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Scaffolding a JSON Forms application with Yeoman</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=41880</guid>
	<link>https://eclipsesource.com/blogs/2019/08/14/scaffolding-a-json-forms-application-with-yeoman/</link>
	<description>&lt;p&gt;JSON Forms is a framework for efficiently developing form-based UIs based on JSON Schema.  It provides a simple declarative JSON-based language...&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/08/14/scaffolding-a-json-forms-application-with-yeoman/&quot; rel=&quot;nofollow&quot;&gt;Scaffolding a JSON Forms application with Yeoman&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 14 Aug 2019 10:15:56 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Two Years and Fifty Blogs</title>
	<guid isPermaLink="false">https://medium.com/p/15dbbe422f60</guid>
	<link>https://medium.com/oracledevs/two-years-and-fifty-blogs-15dbbe422f60?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Happy Blogiversary&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*uLC17Sc4aWbawcxU7allhA.png&quot; /&gt;&lt;figcaption&gt;Grounds for Sculpture, Hamilton Township, NJ&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Welcome to Medium&lt;/h3&gt;&lt;p&gt;Two years ago, I wrote my first blog. It was about Symmetry in API design.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Writing this blog was one of the hardest and most rewarding things I have done in my career as a software developer.&lt;/p&gt;&lt;p&gt;I have been blogging at least once a month ever since. In the following sections I will share the most popular and my personal favorite blogs for each of the three calendar years I have been blogging. Enjoy!&lt;/p&gt;&lt;h3&gt;2017 — Finding My Voice&lt;/h3&gt;&lt;p&gt;I write a lot about the Java programming language and &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt;. I am the creator of Eclipse Collections and am still an active Project Lead and Committer for the project at the &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse Foundation&lt;/a&gt;, so that should help explain why I write about it.&lt;/p&gt;&lt;p&gt;My top blog in 2017 was “Nine Features in Eclipse Collections 9.0”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/nine-features-in-eclipse-collections-9-0-a2ca97dfdf74&quot;&gt;Nine Features in Eclipse Collections 9.0&lt;/a&gt;&lt;/p&gt;&lt;p&gt;My personal favorite blog in 2017 was “Preposition Preference”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/preposition-preference-1f1c709b098b&quot;&gt;Preposition Preference&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;2018 — Finding My Way&lt;/h3&gt;&lt;p&gt;In 2018 was nominated and selected as a Java Champion. I was humbled and honored to be selected into this group of amazingly talented and respected Java luminaries.&lt;/p&gt;&lt;p&gt;My top blog in 2018 was “Ten reasons to use Eclipse Collections”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/ten-reasons-to-use-eclipse-collections-91593104af9d&quot;&gt;Ten reasons to use Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;My personal favorite blog in 2018 was “The 4am Jamestown-Scotland ferry and other optimization strategies”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/the-4am-jamestown-scotland-ferry-and-other-optimization-strategies-66365ac415ef&quot;&gt;The 4am Jamestown-Scotland ferry and other optimization strategies&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;2019 — Continuing to Tell My Story&lt;/h3&gt;&lt;p&gt;I hope to share more about myself and my general views on software development in 2019. I hope to write some blogs about the Smalltalk programming language and environment. I will keep blogging about Eclipse Collections and Java as well I’m sure, especially as we look to the future after the 10.0 release. Java has been changing a lot since Java 8 was released. There is a lot of excitement again around this now twenty four year old programming language.&lt;/p&gt;&lt;p&gt;My top blog in 2019 so far is “Eclipse Collections 10.0 Released”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/eclipse-collections-10-0-released-49bae6a4b4c6&quot;&gt;Eclipse Collections 10.0 Released&lt;/a&gt;&lt;/p&gt;&lt;p&gt;My personal favorite blog so far in 2019 is “Graduating from Minimal to Rich Java APIs”.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/graduating-from-minimal-to-rich-java-apis-c50192c8322f&quot;&gt;Graduating from Minimal to Rich Java APIs&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;On to 2020 — Finding More Bloggers&lt;/h3&gt;&lt;p&gt;I’m heading to Oracle CodeOne in a few weeks to give a talk, meet with old friends, hopefully make some new friends, and spend time teaching and learning as much as I can. I have a new sense of community and purpose since I was selected as a Java Champion. I want to help more bloggers find their voices. It is hard to write, and very hard to write regularly, but it is so critically important to leave a bit of what we know to the current and future generations of developers to learn from.&lt;/p&gt;&lt;p&gt;Thank you for taking the time to read my blogs. I hope you enjoy them and learn something useful from them now and again.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=15dbbe422f60&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/two-years-and-fifty-blogs-15dbbe422f60&quot;&gt;Two Years and Fifty Blogs&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Fri, 09 Aug 2019 03:53:16 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Update for Jakarta EE community: August 2019</title>
	<guid isPermaLink="false">6722 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/update-jakarta-ee-community-august-2019</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/wayneeclipsefdn_blogs%20%281%29.png&quot; style=&quot;height: 400px; width: 800px;&quot; /&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We hope you’re enjoying the Jakarta EE monthly email update, which seeks to highlight news from various committee meetings related to this platform. There’s a lot happening in the Jakarta EE ecosystem so if you want to get a richer insight into the work that has been invested in Jakarta EE so far and get involved in shaping the future of Cloud Native Java, read on. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Without further ado, let’s have a look at what happened in July: &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;: Record-high talk submissions&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;With your help, EclipseCon Europe 2019 reported record-high talk submissions. Thank you all for proposing so many interesting talks! This is not the only record, though: it seems that the track with the biggest number of submissions is Cloud Native Java so if you want to learn how to develop applications and cloud native microservices using Java, EclipseCon Europe 2019 is the place to be. The program will be announced the week of August 5th. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Speaking of EclipseCon Europe, you don’t want to miss the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/eclipse-community-day&quot;&gt;Community Day&lt;/a&gt; happening on October 21; this day is jam-packed with peer-to-peer interaction and community-organized meetings that are ideal for Eclipse Working Groups, Eclipse projects, and similar groups that form the Eclipse community. Plus, there’s also a Community Evening planned for you, where like-minded attendees can share ideas, experiences and have fun! That said, in order to make this event a success, we need your help. What would you like the Community Day &amp;amp; Evening to be all about? Check out &lt;a href=&quot;https://wiki.eclipse.org/Cloud_Native_Community_Events_2019&quot;&gt;this wiki&lt;/a&gt; first, then make sure to go over what we did &lt;a href=&quot;https://wiki.eclipse.org/JakartaEE_-_MicroProfile_-_Community_day&quot;&gt;last year&lt;/a&gt;. And don’t forget to &lt;a href=&quot;https://www.eclipsecon.org/europe2019/registration&quot;&gt;register&lt;/a&gt; for the Community Day and/or Community Evening! &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;EclipseCon Europe will take place in Ludwigsburg, Germany on October 21 - 24, 2019. &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jakartaone.org/&quot;&gt;JakartaOne Livestream&lt;/a&gt;: Registration is open!&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Given the huge interest in the Cloud Native Java track at EclipseCon Europe 2019, it’s safe to say that JakartaOne Livestream, taking place on September 10, is the fall virtual conference spanning multiple time zones. Plus, the date coincides with the highly anticipated Jakarta EE 8 release so make sure to save the date; you’re in for a treat! &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We hope you’ll attend this all-day virtual conference as it unfolds; this way, you get the chance to interact with renowned speakers, participate in interesting interactions and have all your questions answered during the interactive sessions. &lt;a href=&quot;https://www.crowdcast.io/e/nztuljys/register&quot;&gt;Registration&lt;/a&gt; is now open so make sure to secure your spot at JakartaOne Livestream! &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;No matter if you’re a developer or a technical business leader, this virtual conference promises to satisfy your thirst for knowledge with a balance of technical talks, user experiences, use cases and more. The program will be published soon. Stay tuned!&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Jakarta EE 8 release&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;On September 10, join us in celebrating the Jakarta EE 8 release at &lt;a href=&quot;https://jakartaone.org/&quot;&gt;JakartaOne Livestream&lt;/a&gt;!  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;That being said, head over to &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects&quot;&gt;GitHub&lt;/a&gt; to keep track of all the &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects&quot;&gt;Eclipse EE4J&lt;/a&gt; projects. Noticeable progress has been made on &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/15&quot;&gt;Final Specifications Releases&lt;/a&gt;, &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/14&quot;&gt;Jakarta EE 8 TCK jobs&lt;/a&gt;, &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/11&quot;&gt;Jakarta Specification Project Names&lt;/a&gt;, and &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/10&quot;&gt;Jakarta Specification Scope Statements&lt;/a&gt; so make sure to check out the progress and contribute!  &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Jakarta EE Trademark guidelines: Updates &lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Version 1.1 of the &lt;a href=&quot;https://jakarta.ee/legal/trademark_guidelines/&quot;&gt;Jakarta EE Trademark Guidelines&lt;/a&gt; is out! This document supplements the &lt;a href=&quot;https://www.eclipse.org/legal/logo_guidelines.php&quot;&gt;Eclipse Foundation Guidelines for Eclipse Logos &amp;amp; Trademarks Policy&lt;/a&gt; to address the permitted usage of the Jakarta EE Marks, including the following names and/or logos: &lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE Working Group&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE Member &lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE Compatible &lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p dir=&quot;ltr&quot;&gt;The full guidelines on the usage of the Jakarta EE Marks are described in the &lt;a href=&quot;https://jakarta.ee/legal/trademark_guidelines/jakarta-ee-branding-guidelines.pdf&quot;&gt;Jakarta EE Brand Usage Handbook&lt;/a&gt;. &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;EFSP: Updates&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Version 1.2 of the &lt;a href=&quot;https://www.eclipse.org/projects/efsp/&quot;&gt;Eclipse Foundation Specification Process&lt;/a&gt; was approved on June 30, 2019. The EFSP leverages and augments the Eclipse Development Process (EDP), which defines important concepts, including the Open Source Rules of Engagement, the organizational framework for open source projects and teams, releases, reviews, and more.&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;JESP: Updates&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://jakarta.ee/about/jesp/&quot;&gt;Jakarta EE Specification Process v1.2&lt;/a&gt; was approved on July 16, 2019. The JESP has undergone a few modifications, including &lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;changed ballot periods for the progress and release (including service releases) reviews from 30 to 14 days&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;the Jakarta EE Specification Committee now adopts the EFSP v1.2 as the Jakarta EE Specification Process&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;TCK process finalized &lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;The TCK process has been finalized. The document sheds light on aspects such as the materials a TCK must possess in order to be considered suitable for delivering portability, the process for challenging tests and how to resolve them and more.     &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;This document defines:&lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Materials a TCK MUST possess to be considered suitable for delivering portability&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Process for challenging tests and how these challenges are resolved&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Means of excluding released TCK tests from certification requirements&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Policy on improving TCK tests for released specifications&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Process for self-certification&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Jakarta EE Community Update: July video call&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;The most recent Jakarta EE Community Update meeting took place in mid-July; the conversation included topics such as Jakarta EE 8 release, status on progress and plans, Jakarta EE TCK process update, brief update re. transitioning from javax namespace to the jakarta namespace, as well as details about JakartaOne Livestream and EclipseCon Europe 2019.   &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The materials used in the Jakarta EE community update meeting are available &lt;a href=&quot;https://drive.google.com/drive/folders/1nt-dnvwDedsduz5oWWglSpJ-uQLh1JM2&quot;&gt;here&lt;/a&gt; and the recorded Zoom video conversation can be found &lt;a href=&quot;https://www.youtube.com/watch?v=SpEgN5k-0Q8&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Please make sure to join us for the August 14  community call.&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Cloud Native Java eBook: Coming soon!&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;What does cloud native Java really mean to developers? What does the cloud native Java future look like? Where is Jakarta EE headed? Which technologies should be part of your toolkit for developing cloud native Java applications? &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;All these questions (and more!) will be answered soon; we’re developing a downloadable eBook on the community's definition and vision for cloud native Java, which will become available shortly before Jakarta EE 8 is released. Stay tuned!&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Eclipse Newsletter: Jakarta EE edition  &lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The Jakarta community has made great progress this year and the culmination of all this hard work is the Jakarta EE 8 release, which will be celebrated on September 10 at &lt;a href=&quot;https://jakartaone.org/&quot;&gt;JakartaOne Livestream&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In honor of this milestone, the next issue of the &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt;Eclipse Newsletter&lt;/a&gt; will focus entirely on Jakarta EE 8. If you’re not subscribed to the Eclipse Newsletter, make sure to do that before the Jakarta EE issue is released - on August 22! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meet the Jakarta EE Working Group Committee Members &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It takes a village to create a successful project and the Jakarta EE Working Group is no different. We’d like to honor all those who have demonstrated their commitment to Jakarta EE by presenting the members of all the committees that work together toward a common goal: steer Jakarta EE toward its exciting future. As a reminder, Strategic members appoint their representatives, while the representatives for Participant and Committer members were elected in June.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The list of all Committee Members can be found &lt;a href=&quot;https://jakarta.ee/about/&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Steering Committee &lt;/u&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Will Lyons (chair)- Oracle, Ed Bratt - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Kenji Kazumura - Fujitsu, Michael DeNicola - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Dan Bandera - IBM, Ian Robinson - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Steve Millidge - Payara, Mike Croft - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Mark Little - Red Hat, Scott Stark - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;David Blevins - Tomitribe, Richard Monson-Haefel alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Martijn Verburg - London Java Community - Elected Participant Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Ivar Grimstad - Elected Committer Representative&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Specifications Committee &lt;/u&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Kenji Kazumura - Fujitsu, Michael DeNicola - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Dan Bandera - IBM, Kevin Sutter - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Bill Shannon - Oracle, Ed Bratt - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Steve Millidge - Payara, Arjan Tijms - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Scott Stark - Red Hat, Mark Little - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;David Blevins - Tomitribe, Richard Monson-Haefel - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Ivar Grimstad - PMC Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Alex Theedom - London Java Community Elected Participant Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Werner Keil - Elected Committer Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Paul Buck - Eclipse Foundation (serves as interim chair, but is not a voting committee member)&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Marketing and Brand Committee&lt;/u&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Michael DeNicola - Fujitsu, Kenji Kazumura - alternate &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Dan Bandera - IBM, Neil Patterson - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Ed Bratt - Oracle, David Delabassee - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Dominika Tasarz - Payara, Jadon Orglepp - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Cesar Saavedra - Red Hat, Paul Hinz - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;David Blevins - Tomitribe, Jonathan Gallimore - alternate&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Theresa Nguyen - Microsoft Elected Participant Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;VACANT - Elected Committer Representative&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Thabang Mashologu - Eclipse Foundation (serves as interim chair, but is not a voting committee member)&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Jakarta EE presence at events and conferences: July overview &lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Cloud native was the talk of the town in July. Conferences such as &lt;a href=&quot;http://www.jcrete.org/&quot;&gt;JCrete&lt;/a&gt;, &lt;a href=&quot;https://www.j4k.io/&quot;&gt;J4K&lt;/a&gt;, and &lt;a href=&quot;https://www.java-forum-stuttgart.de/de/Home.html&quot;&gt;Java Forum Stuttgart&lt;/a&gt;, to name a few, were all about open source and cloud native and how to tap into this key approach for IT modernization success. The Eclipse Foundation and the Jakarta EE Working Group members were there to take a pulse of the community to better understand the adoption of cloud native technologies. &lt;/p&gt;

&lt;p&gt;For example, IBM’s Graham Charters and Steve Poole featured Jakarta EE and Eclipse MicroProfile in demonstrations at the IBM Booth at &lt;a href=&quot;https://conferences.oreilly.com/oscon/oscon-or&quot;&gt;OSCON&lt;/a&gt;; Open Source Summit 2019 participants should expect another round of Jakarta EE and Eclipse MicroProfile demonstrations from IBM representatives. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Thank you for your interest in Jakarta EE. Help steer Jakarta EE toward its exciting future by subscribing to the &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=0tSsQkMPqlAqlO58_0kVZUNJvuApIvPd9ayj0AoAaLggLeHBBrGJlAx-F0VJJtTwdnpi0CXR-1YRnE0ETgmQeRHNh2sqtFxkPMsi-Ulu_yk=&quot;&gt;jakarta.ee-wg@eclipse.org&lt;/a&gt; mailing list and by joining the Jakarta EE Working Group. Don’t forget to follow us on &lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt;Twitter&lt;/a&gt; to get the latest news and updates!&lt;/p&gt;

&lt;p&gt;To learn more about the collaborative efforts to build tomorrow’s enterprise Java platform for the cloud, check out the &lt;a href=&quot;https://jakartablogs.ee/&quot;&gt;Jakarta Blogs&lt;/a&gt; and participate in the monthly &lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt;Jakarta Tech Talks&lt;/a&gt;. Don’t forget to subscribe to the Eclipse &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt;newsletter&lt;/a&gt;!  &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;&lt;img src=&quot;https://docs.google.com/a/eclipse-foundation.org/drawings/d/s_oq4uZ3pZGwwgZ7zI16DDg/image?w=609&amp;amp;h=374&amp;amp;rev=2&amp;amp;ac=1&amp;amp;parent=1wEHtO_HByGAAQikdmh7PAynh4wxryaoVZUC-mkVEWHs&quot; style=&quot;height: 374px; width: 609px;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 06 Aug 2019 15:55:11 +0000</pubDate>
</item>
<item>
	<title>Jonas Hungershausen: Dartboard: Pub support, Stagehand templates &amp; better theming</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-fourth-update/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-fourth-update/</link>
	<description>&lt;p&gt;Automatic &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; dependency synchronization, &lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;stagehand templates&lt;/a&gt; and theme improvements for TM4E.&lt;/p&gt;

&lt;h1&gt;Pub dependency synchronization&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; is the main source of packages for Dart projects.
Dependencies are added to a &lt;code&gt;pubspec.yaml&lt;/code&gt; file and the &lt;code&gt;$ pub get&lt;/code&gt; command is used to download the packages from the registry.
Since most projects require at least a few dependencies this step &lt;em&gt;must&lt;/em&gt; be taken before the project compiles without errors.&lt;/p&gt;
&lt;p&gt;To ease this process a little, the command is now automatically run when saving the &lt;code&gt;pubspec.yaml&lt;/code&gt; file in Eclipse.
With this, required dependencies are automatically downloaded when a project is imported or when a new package is added to the &lt;code&gt;pubspec.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you don't want this behavior the feature can be disabled from the preference page.
Manually running the synchronization is also supported from the context menu of a project.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub context handler&quot; src=&quot;https://jonas-jonas.dev/posts/assets/pub-command.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The current progress of the synchronization is reported to the &lt;em&gt;Progress&lt;/em&gt; view.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub progress&quot; src=&quot;https://jonas-jonas.dev/posts/assets/pub-dependencies.gif&quot; /&gt;&lt;/p&gt;
&lt;h1&gt;Stagehand&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;Stagehand&lt;/a&gt; is a CLI tool, written in Dart, that generates new projects from a list of templates.
There are different project types to chose from, like Flutter, AngularDart or just console applications.
After a template is generated the project contains a &lt;code&gt;pubspec.yaml&lt;/code&gt; file containing all necessary dependency information and various entry files that are required by the type of project.&lt;/p&gt;
&lt;p&gt;This tool is now supported graphically by the &lt;em&gt;New Dart Project&lt;/em&gt; wizard also provided by Dartboard.
Under the hood the plugin uses the exact executable from &lt;code&gt;pub.dev&lt;/code&gt;.
And by automatically updating it we make sure that new templates can be immediately used.&lt;/p&gt;
&lt;p&gt;This is how the &lt;em&gt;New Dart Project&lt;/em&gt; wizard looks now:
&lt;img alt=&quot;Stagehand&quot; src=&quot;https://jonas-jonas.dev/posts/assets/stagehand.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At first selection of the Wizard (after a fresh IDE start) &lt;em&gt;Stagehand&lt;/em&gt; is updated and its templates are fetched.
After that job is finished the available templates are added to the combo box.
If no template should be used the &lt;em&gt;Use Stagehand template&lt;/em&gt; checkbox can be unchecked and an empty project is generated.&lt;/p&gt;
&lt;p&gt;Subsequent usages of the wizard use cached versions of the templates list to not strain your network or the &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; registry too much.&lt;/p&gt;
&lt;h1&gt;Project import&lt;/h1&gt;
&lt;p&gt;Not every Dart project was created from Eclipse though.
So to be able to use Dartboard with existing Dart projects it is required to import them into the workspace.
For this task we now provide a shortcut to import Dart projects from the &lt;em&gt;Import Project&lt;/em&gt; context menu entry.&lt;/p&gt;
&lt;p&gt;Currently it simply opens the &lt;em&gt;Projects from Folder or Archive&lt;/em&gt; wizard.
This wizard however allows to specify a &lt;code&gt;ProjectConfigurator&lt;/code&gt; that takes care of selecting folders that should be imported as a project.
In our own configurator we traverse all children and look for &lt;code&gt;pubspec.yaml&lt;/code&gt; files.
Every folder that contains such a file is considered to be a separate project.&lt;/p&gt;
&lt;h1&gt;Eclipse light theme for TM4E&lt;/h1&gt;
&lt;p&gt;TM4E can be used to apply different syntax highlighting to the editor.
We provide a configuration file that specifies how certain words inside the editor should look.
It also gives the option to select what theme to use.
There are different light and dark themes available, like &lt;em&gt;Solarized Light&lt;/em&gt; or the classic Eclipse Java editor theme.&lt;/p&gt;
&lt;p&gt;I provided a patch to add some missing styles to the latter to make it look more like the classic theme.
This is what it looks like now:
&lt;img alt=&quot;Eclipse light theme&quot; src=&quot;https://jonas-jonas.dev/posts/assets/eclipse-light-new.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Wrap up&lt;/h1&gt;
&lt;p&gt;With two weeks to go until the end of Summer of Code 2019 there is not that much left to do for me to fulfill my proposed timeline.
One major thing that is still missing are automated tests.
I have started work on it now and will work on that for the last two weeks.&lt;/p&gt;
&lt;p&gt;This will also be my last update post on Summer of Code as the next post will be a summary of my whole summer.&lt;/p&gt;</description>
	<pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: The Wait Is Over!</title>
	<guid isPermaLink="false">2150 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/wait-over</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The 2019 program has been chosen. Visit &lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions&quot; target=&quot;_blank&quot;&gt;this page&lt;/a&gt; to see the list of accepted talks and tutorials.&lt;/p&gt;

&lt;p&gt;Congratulations to the speakers, and thank you to all who submitted. The program committee can now take a well-earned break.&lt;/p&gt;

&lt;p&gt;The detailed schedule will be published soon.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/wait-over&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/audience2.jpg?itok=bjq3YWSp&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 01 Aug 2019 21:08:16 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: KubeCon Shanghai 2019: Cloud Native at China Scale</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4295</guid>
	<link>https://www.aniszczyk.org/2019/07/29/kubecon-shanghai-2019-cloud-native-at-china-scale/</link>
	<description>&lt;p&gt;Last month, we held KubeCon + Cloud NativeCon in Shanghai, one of the largest open source events in China. Recently, we published the &lt;a href=&quot;https://drive.google.com/file/d/1gnIUxCj33EJkXMDyFwP7JbwdM3bmXHBJ/view&quot;&gt;conference transparency report&lt;/a&gt; detailing how the 3500 person event went but I’d like to share a couple take aways as someone who has been traveling to China quite a bit the last few years.&lt;/p&gt;



&lt;figure class=&quot;wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter&quot;&gt;&lt;div class=&quot;wp-block-embed__wrapper&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Another record-breaking event! &lt;a href=&quot;https://twitter.com/hashtag/KubeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#KubeCon&lt;/a&gt; + &lt;a href=&quot;https://twitter.com/hashtag/CloudNativeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#CloudNativeCon&lt;/a&gt; + &lt;a href=&quot;https://twitter.com/hashtag/OSS?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#OSS&lt;/a&gt; China was a blast!&lt;img alt=&quot;âž¡&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/27a1.png&quot; style=&quot;height: 1em;&quot; /&gt; Have a look at our transparency report for interesting insights into the event&lt;img alt=&quot;ðŸŒŸ&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f31f.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;a href=&quot;https://t.co/hLysRkoWvR&quot;&gt;https://t.co/hLysRkoWvR&lt;/a&gt;&lt;/p&gt;— CNCF (@CloudNativeFdn) &lt;a href=&quot;https://twitter.com/CloudNativeFdn/status/1154783210221527040?ref_src=twsrc%5Etfw&quot;&gt;July 26, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/figure&gt;



&lt;h2&gt;Cloud Native at China Scale&lt;/h2&gt;



&lt;p&gt;The scale of operating a popular service in China can be wild when you serve a billion users. This forces many of these companies to operate in a cloud native fashion, similar to their internet scale peers in Silicon Valley. I strongly believe we will see more interesting open source technology born in China over the next decade as they deal with scaling issues, similar to how a lot of internet scale open source technology was born from Google and other SV companies that had to support a larger user base. I highly recommend this great &lt;a href=&quot;https://softwareengineeringdaily.com/2019/02/26/china-scale-the-new-sandbox-to-battle-test-innovative-technology/&quot;&gt;interview from Kevin Xu&lt;/a&gt; highlights some of the scale and open source projects coming out of China.&lt;/p&gt;



&lt;p&gt;Also, Ant Financial &lt;a href=&quot;https://www.cncf.io/announcement/2019/06/24/cloud-native-computing-foundation-welcomes-ant-financial-as-gold-end-user-member/&quot;&gt;joined&lt;/a&gt; CNCF as a Gold End User member, which is indicative of the trends of Chinese companies supporting open source they depend on and sharing the lessons they have learned. For those that aren’t aware, Ant Financial is the largest mobile payments company in the world (Alipay), running on Kubernetes and other CNCF projects. You can read their CNCF Case study &lt;a href=&quot;https://www.cncf.io/case-study/ant-financial/&quot;&gt;here&lt;/a&gt; how they run on tens of thousands of Kubernetes nodes serving nearly a billion Alipay customers.&lt;/p&gt;



&lt;h2&gt;Giving Back: China: #2 contributor to Kubernetes&lt;/h2&gt;



&lt;p&gt;For those who aren’t aware, China is the &lt;a href=&quot;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&quot;&gt;second largest contributor to Kubernetes&lt;/a&gt; (and third to CNCF projects overall).&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://lh4.googleusercontent.com/yDpuca3jvLEu4Hbv_XRyzU7LGsnYXpIY9YbOnkF6_QBZvbftA45dsL9Ww5gfutOywtAAKYAFGJ6hwsP8Bfn6lfydbBbNe_Kq9mte87KOjayI-BsvJDvK2y2mJZojClKX62CWJmXQmrM&quot; /&gt;&lt;figcaption&gt;DevStats: &lt;a href=&quot;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&quot;&gt;https://k8s.devstats.cncf.io/d/50/countries-stats?orgId=1&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;It’s always great to have consumers contribute code back as that’s one important way how open source is &lt;a href=&quot;https://opensource.com/article/19/4/ways-support-sustain-open-source&quot;&gt;sustainable&lt;/a&gt; in the long run.&lt;/p&gt;



&lt;p&gt;On the whole, it was a fantastic to spend time with our cloud native community in Shanghai and we look forward to coming back to China next year, stay tuned for details for KubeCon + CloudNativeCon 2020 China! For now, we look forward to seeing many folks at &lt;a href=&quot;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/&quot;&gt;KubeCon + CloudNativeCon 2019 San Diego&lt;/a&gt; which is gearing to be one of the largest open source events in the world.&lt;/p&gt;</description>
	<pubDate>Mon, 29 Jul 2019 16:08:25 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: Pimping the status line</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-6299947500212529376</guid>
	<link>http://javaclipse.blogspot.com/2019/07/pimping-status-line.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;This weekend I've tried to write a &lt;a href=&quot;https://git.eclipse.org/r/#/c/146706/1/org.eclipse.jdt.debug.tests/tests/org/eclipse/jdt/debug/tests/ui/DebugHoverTests.java@169&quot;&gt;test for Eclipse debug hover&lt;/a&gt;, that required to know exact position of the selected text, somewhere in the middle of the editor. If you think this is easy - go figure out in Eclipse at which offset is your cursor - surprisingly there is no obvious way to do so!&lt;br /&gt;&lt;br /&gt;So I've used some 3rd party editor that was kind enough to provide this information in the status line. Why shouldn't this be offered by Eclipse itself?&lt;br /&gt;&lt;br /&gt;So I've created an &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;enhancement request&lt;/a&gt; and &lt;a href=&quot;https://git.eclipse.org/r/146707&quot;&gt;pushed patch&lt;/a&gt; that adds both features to Eclipse. By default, status line shows now cursor position, and if editor has something selected, the number of characters in the selection (works also in block selection mode). Both new additions to the status line can be disabled via preferences.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s1600/selection.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;261&quot; src=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s640/selection.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt; If there is no selection, cursor offset is shown:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s1600/cursor_offset.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;258&quot; src=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s640/cursor_offset.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Both new additions to the status line can be disabled via preferences:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s1600/preferences.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;640&quot; src=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s640/preferences.png&quot; width=&quot;420&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;WDYT?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:50:05 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Andrey Loskutov: Incompatible Eclipse workspaces</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-3852949671843488587</guid>
	<link>http://javaclipse.blogspot.com/2019/05/incompatible-eclipse-workspaces.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;Eclipse has mechanism to recognize if the workspace to be used is created with older Eclipse version.&lt;br /&gt;In such case, to be safe, Eclipse shows dialog like:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;As of today (Eclipse 4.12 M1), if you click on &quot;Cancel&quot; button, Eclipse will behave differently, depending on the use cases &quot;history&quot;:&lt;br /&gt;&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;A. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;B. If the workbench was started:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;This behavior is inconvenient (at least), so we have &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Fix Proposal #1&lt;/h4&gt;The proposal is, that &lt;b&gt;independently&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;always&lt;/b&gt; show the default workspace selection dialog (instead of termination):&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;In this dialog above user has two choices: launch any workspace or finally terminate Eclipse via &quot;Cancel&quot;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #1 Matrix&lt;/h4&gt;&lt;h4&gt;A1. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with or without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog. To terminate Eclipse, user has to click &quot;Cancel&quot; in the workspace selection dialog.&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B1. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Fix Proposal #2&lt;/h4&gt;The proposal is, that &lt;b&gt;depending&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;may or may not&lt;/b&gt; show the default workspace selection dialog. So what happens after &quot;Older Workspace Version&quot; dialog is shown is &lt;b&gt;not predictable&lt;/b&gt; by just looking on this dialog - it depends on the &lt;b&gt;history&lt;/b&gt; of this dialog.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #2 Matrix&lt;/h4&gt;&lt;h4&gt;A2. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B2. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Similarities&lt;/h4&gt;&lt;div&gt;Both proposals fix second bullet in the use case B2.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Differences&lt;/h4&gt;&lt;div&gt;We see that Proposal #1 has no second bullet for A1 case, and is always consistent in the way how UI behaves after clicking on &quot;Cancel&quot; in the &quot;Older Workspace Version&quot; dialog. Proposal #2 fixes only B2 use case, inconsistency in UI behavior for the second part of A1 use case remains.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Technical (biased) notes:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Proposal #1 is implemented and the &lt;a href=&quot;https://git.eclipse.org/r/142139&quot;&gt;patch is available&lt;/a&gt;, along with the &lt;a href=&quot;https://bugs.eclipse.org/bugs/attachment.cgi?id=278605&quot;&gt;demo video&lt;/a&gt;. To test it live, one has to build Eclipse - but here I have &lt;a href=&quot;https://drive.google.com/drive/folders/0B7vALkuico9heWlDMlhfRGlRbm8&quot;&gt;SDK binaries with the patch applied&lt;/a&gt;. The patch is relatively simple and only affects Platform UI internal code.&lt;/li&gt;&lt;li&gt;Proposal #2 is not implemented yet. I assume that this will require more work compared to the patch #1. We will need a new command line argument for Eclipse to differentiate between &quot;&lt;i&gt;I want you not to terminate even if incompatible -data is supplied because I'm calling you from UI&lt;/i&gt;&quot; and &quot;&lt;i&gt;Please terminate if incompatible data is supplied because I'm calling you from the command line&lt;/i&gt;&quot;. A new command line argument for Eclipse means not just Platform UI internal change, but also requires changes in the Equinox and Help, and also means public interface change.&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;h4&gt;Question to the masses!&lt;/h4&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: red; font-size: large;&quot;&gt;We want to know your opinion - which proposal should be implemented?&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Please reply here or on the &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;This version was implemented and available in 4.13 M1:&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:35:08 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>N4JS: React App Development in N4JS (Chess Game Part 1)</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-4419334707635283961</guid>
	<link>https://n4js.blogspot.com/2019/07/react-app-development-in-n4js-chess.html</link>
	<description>&lt;b&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; is a popular JavaScript library created by Facebook widely used for developing web user interfaces. &lt;/b&gt;&lt;b&gt;In this post we introduce a tutorial on how to develop a chess game based on React, JSX and N4JS. The full tutorial is available (and playable) at &lt;a href=&quot;https://www.eclipse.org/n4js/userguides/n4js-tutorial-chess/n4js-tutorial-chess.html&quot; target=&quot;_blank&quot;&gt;eclipse.org/n4js&lt;/a&gt; and the sources can be found at &lt;a href=&quot;https://github.com/Eclipse/n4js-tutorials&quot; target=&quot;_blank&quot;&gt;github.com/Eclipse/n4js-tutorials&lt;/a&gt;.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/--gtGX2YSx0s/XS2GOI3At3I/AAAAAAAAAL8/F85E5T-HsKkyGhSWMTOaW2ov0kyUc3NjQCLcBGAs/s1600/chess-game-screenshot.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/--gtGX2YSx0s/XS2GOI3At3I/AAAAAAAAAL8/F85E5T-HsKkyGhSWMTOaW2ov0kyUc3NjQCLcBGAs/s1600/chess-game-screenshot.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Chess game implemented in N4JS with React&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;span id=&quot;goog_1065493477&quot;&gt;&lt;/span&gt;The chess game app implements the following requirements:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;When the chess application is started, a chess board of 8x8 squares shall be showed containing 16 white pieces and 16 black pieces in their initial positions. &lt;/li&gt;&lt;li&gt;A player in turn shall be able to use the mouse to pick one of the pieces that she/he wants to move. A picked piece shall be clearly recognisable. Moreover, to aid players, especially beginners, whenever a piece is picked, all possible valid destination squares shall be visually highlighted as well. &lt;/li&gt;&lt;li&gt;In addition to the game board, there shall be a game information area that shows which player is in turn. Moreover, the game information area shall show a complete history of the game protocolling each move made by the players. As a bonus, jumping back to a previous state of the history shall be possible. &lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;In the tutorial you will learn how to use npm, webpack and React to develop a web application with N4JS and the N4JS IDE. Most of the tutorial will elaborate on specific parts of the implementation and explain for example the graphical representation of the chess board and chess pieces, and how to use React to model the UI. Also, it will explain the game logic, i.e. how possible moves for the different piece types are computed, how the turn history is maintained, and how the end of the game (i.e. a win situation) is detected. In the end, the tutorial will make suggestions on how to improve the chess game e.g. by adding support for the &lt;a href=&quot;https://en.wikipedia.org/wiki/En_passant&quot; target=&quot;_blank&quot;&gt;en passant&lt;/a&gt; move.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Have fun with implementing this game!&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Minh Quang Tran&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 16 Jul 2019 09:47:07 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Tanja Obradovic: Update for Jakarta EE community: July 2019</title>
	<guid isPermaLink="false">6720 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/update-jakarta-ee-community-july-2019</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Two months ago, we launched a monthly email update for the Jakarta EE community which seeks to highlight news from various committee meetings related to this platform. There are a few ways to get richer insight into the work that has been invested in Jakarta EE so far, so if you’d like to learn more about Jakarta EE-related plans and get involved in shaping the future of Cloud Native Java, read on. &lt;/p&gt;

&lt;p&gt;Without further ado, let’s have a look at what happened in June: &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt;JakartaOne LiveStream: All eyes on Cloud Native Java&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Are you interested in the current state and future of Jakarta EE? Would you like to explore other related technologies that should be part of your toolkit for developing Cloud Native Java applications? Then JakartaOne Livestream is for you! No matter if you’re a developer or a technical business leader, this virtual conference promises to satisfy your thirst for knowledge with a balance of technical talks, user experiences, use cases and more.  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;You should join the JakartaOne Livestream speaker lineup if you want to &lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Show the world how you and/or your organization are using Jakarta EE technologies to develop cutting-edge solutions. &lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Demonstrate how Jakarta EE and Java EE features can be used today to develop cloud native solutions. &lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p dir=&quot;ltr&quot;&gt;This one-day virtual conference, which takes place September 10, 2019, is currently accepting submissions from speakers so if you have an idea for a talk that will educate and inspire the Jakarta community, now’s the time to submit your pitch!  The deadline for submissions is today, July 15, 2019. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Note: All the JakartaOne Livestream sessions and keynotes are chosen by an independent program committee made up of volunteers from the Jakarta EE and Cloud Native Java community: Reza Rahman, who is also the program chair, Adam Bien, Arun Gupta, Ivar Grimstad, Josh Juneau, and Tanja Obradovic.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;*As this inaugural event is a one-day event only, the number of accepted sessions is limited. Submit your talk now!  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Even if all the talks will be recorded and made available later on the &lt;a href=&quot;https://jakarta.ee/&quot;&gt;Jakarta EE website&lt;/a&gt;, make sure to attend the virtual conference in order to directly interact with the speakers. We do hope you will attend “live”, as it will lead to more questions and more interactive sessions. &lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;br /&gt;
&lt;strong&gt;Jakarta EE 8 release and progress&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Are you keeping track of &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects&quot;&gt;Eclipse EE4J&lt;/a&gt; projects on GitHub? Have you noticed that Jakarta EE Platform Specifications are now available in GitHub? If not please do!!!! Also please, check out the &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/13&quot;&gt;creation and progress of specification projects&lt;/a&gt;, which will be used to follow the process of converting the &quot;Eclipse Project for ...&quot; projects into specification projects to set them up to specification work as defined by the Eclipse Foundation Specification Process, and &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/12&quot;&gt;Specification Document Names&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Noticeable progress has been made on &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/14&quot;&gt;Jakarta EE 8 TCK jobs&lt;/a&gt;, &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/11&quot;&gt;Jakarta Specification Project Names&lt;/a&gt;, and &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/10&quot;&gt;Jakarta Specification Scope Statements&lt;/a&gt; so head over to GitHub to discover all the improvements and all the bits and pieces that have already been resolved.  &lt;/p&gt;

&lt;p&gt;Work on the TCK process is in progress, with Scott Stark, Vice President of Architecture at Red Hat, leading the effort. The TCK process document v 1.0 is expected to be completed in the very near future. The document will shed light on aspects such as the materials a TCK must possess in order to be considered suitable for delivering portability, the process for challenging tests and how to resolve them and more. &lt;/p&gt;

&lt;p&gt;Jakarta EE 8 is expected to be released on September 10, 2019, just in time for JakartaOne Livestream.  &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Javax package namespace discussions&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The specification committee has put out two approaches regarding restrictions on javax package namespace use for the community to consider, namely Big Bang and Incremental. &lt;/p&gt;

&lt;p&gt;Based on the input we got from the community and discussions within the Working Group, the specification committee has not yet reached consensus on the approach to be taken, until work on the binary compatibility is further explored. With that in mind, the Working Group members will invest time to work on the technical approach for binary compatibility and then propose/decide on the option that is the best for the customers, vendors, and developers.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Please refer to &lt;a href=&quot;https://docs.google.com/presentation/d/1eCRNn72siY0-nQHaVQZ8Id_GMnsDtc1PXaOcW89Hbmk/edit?usp=sharing&quot;&gt;David Blevins’ presentation &lt;/a&gt;from the Jakarta EE Update call June 12th, 2019&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;If you want to dive deeper into this topic, David Blevins has &lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/blob/master/namespace/transitive.adoc&quot;&gt;written a helpful analysis&lt;/a&gt; of the javax package namespace matter, in which he answers questions like &quot;If we rename javax.servlet, what else has to be renamed?&quot; &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt; JCP Copyright Licensing request: Your assistance in this matter is greatly appreciated&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;As part of Java EE’s transfer to the Eclipse Foundation under the Jakarta EE name, it is essential to ensure that the Foundation has the necessary rights so that the specifications can be evolved under the new Jakarta EE Specification Process. For this, we need your help!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We are currently requesting copyright licenses from all past contributors to Java EE specifications under the JCP; we are reaching out to all companies and individuals who made contributions to Java EE in the past to help out, execute the agreements and return them back to the Eclipse Foundation. As the advancement of the specifications and the technology is at stake, we greatly appreciate your prompt response. Oracle, Red Hat, IBM, and many others in the community have already signed an agreement to license their contributions to Java EE specifications to the Eclipse Foundation. We are also counting on the JCP community to be supportive of this request.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For more information about this topic, read Tanja Obradovic’s &lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jcp-copyright-licensing-request&quot;&gt;blog&lt;/a&gt;. If you have questions regarding the request for copyright licenses from all past contributors, please contact &lt;a href=&quot;mailto:mariateresa.delgado@eclipse-foundation.org&quot;&gt;mariateresa.delgado@eclipse-foundation.org&lt;/a&gt;.&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt; Election results for Jakarta EE working group committees&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The nomination period for elections to the Jakarta EE committees is now closed. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Almost all positions have been filled, with the exception of the Committer representative on the Marketing Committee, due to lack of nominees.   &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The representatives for 2019-20 on the committees, starting July 1, 2019, are: &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;u&gt;Participant Representative:&lt;/u&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;STEERING COMMITTEE - Martijn Verburg (London Java Community)&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;SPECIFICATIONS COMMITTEE - Alex Theedom (London Java Community)&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;MARKETING COMMITTEE - Theresa Nguyen (Microsoft)&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;u&gt;Committer Representative:&lt;/u&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;STEERING COMMITTEE - Ivar Grimstad&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;SPECIFICATIONS COMMITTEE - Werner Keil&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;MARKETING COMMITTEE - Vacant&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt; Jakarta EE Community Update: June video call&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;The most recent Jakarta EE Community Update meeting took place in June; the conversation included topics such as Jakarta EE 8 progress and plans, headway with specification name changes/ specification scope definitions, TCK process update, copyright license agreements, PMC/ Projects update, and more. &lt;/p&gt;

&lt;p&gt;The materials used on the Jakarta EE community update meeting are available &lt;a href=&quot;https://drive.google.com/drive/folders/1z_pI5aY5xYo3SSo6auz-rML38ozLMadF&quot;&gt;here&lt;/a&gt; and the recorded Zoom video conversation can be found &lt;a href=&quot;https://www.youtube.com/watch?v=LeZIskzEcPs&amp;amp;feature=youtu.be&quot;&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Please make sure to join us for the July 17th call.&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;strong&gt; &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;: Call for Papers open until July 15&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;You can still submit your proposals to be part of EclipseCon Europe 2019’s speaker lineup. The Call for Papers (CFP) is closing soon so if you have an idea for a talk that will educate and inspire the Eclipse community, now’s the time to &lt;a href=&quot;https://www.eclipsecon.org/europe2019/cfp&quot;&gt;submit your talk&lt;/a&gt;! The final submission deadline is July 15. &lt;/p&gt;

&lt;p&gt;The conference takes place in Ludwigsburg, Germany on October 21 - 24, 2019. &lt;/p&gt;

&lt;h3&gt;&lt;br /&gt;
&lt;strong&gt;Jakarta EE presence at events and conferences: June overview&lt;/strong&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;(asked members on Jakarta marketing committee Slack channel if they participated in any conferences; waiting for a reply) &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://www.eventbrite.it/e/biglietti-eclipse-democamp-florence-2019-60934217886&quot;&gt;Eclipse DemoCamp Florence 2019&lt;/a&gt;&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Tomitribe: &lt;a href=&quot;https://www.tomitribe.com/blog/jakartaee-39-project-and-where-they-are-at/&quot;&gt;presence at JNation in Portugal &lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Thank you for your interest in Jakarta EE. Help steer Jakarta EE toward its exciting future by subscribing to the &lt;a href=&quot;https://www.globenewswire.com/Tracker?data=0tSsQkMPqlAqlO58_0kVZUNJvuApIvPd9ayj0AoAaLggLeHBBrGJlAx-F0VJJtTwdnpi0CXR-1YRnE0ETgmQeRHNh2sqtFxkPMsi-Ulu_yk=&quot;&gt;jakarta.ee-wg@eclipse.org&lt;/a&gt; mailing list and by joining the Jakarta EE Working Group. &lt;/p&gt;

&lt;p&gt;To learn more about the collaborative efforts to build tomorrow’s enterprise Java platform for the cloud, check out the &lt;a href=&quot;https://jakartablogs.ee/&quot;&gt;Jakarta Blogs&lt;/a&gt; and participate in the monthly &lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt;Jakarta Tech Talks&lt;/a&gt;. Don’t forget to subscribe to the Eclipse &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt;newsletter&lt;/a&gt;!  &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
 &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;&lt;img src=&quot;https://docs.google.com/a/eclipse-foundation.org/drawings/d/sd11njxCW9lkppgFTk5zzpg/image?w=609&amp;amp;h=374&amp;amp;rev=1&amp;amp;ac=1&amp;amp;parent=1a5O3CNRTi18lV7clEtIKOhQ52v8xchxXFrooGvddIsc&quot; style=&quot;height: 374px; width: 609px;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 15 Jul 2019 16:19:01 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: Commercial-Grade Collaboration at the Eclipse Foundation</title>
	<guid isPermaLink="false">6718 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/commercial-grade-collaboration-eclipse-foundation</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;When it comes to the digital economy, business runs on open source. That’s because open source is the best way to deliver large-scale business innovation and value at the pace customers expect. We’ve just released a Business of Open Source &lt;a href=&quot;http://bit.ly/BoOSS_tm&quot;&gt;eBook&lt;/a&gt; that is essential reading for leaders in the age of digital disruption who are considering how to maximize their returns from open source participation.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For the last 15 years, companies ranging from startups to industry leaders the likes of Bosch, Broadcom, Fujitsu, Google, IBM, Microsoft, Oracle, Red Hat, SAP, and more have collaborated under the Eclipse governance model to advance open source projects and create value for their stakeholders. In this latest publication, we explore the role of open source as a pillar for transformation initiatives and the unique position of the Eclipse Foundation as the home of community-driven, code-first, and commercial-ready open source technologies.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Featuring interviews from leading open source industry experts, this eBook sheds light on how hundreds of organizations have leveraged the Foundation’s clear, vendor-neutral rules for intellectual property sharing and decision-making, business-friendly licensing, and ecosystem development and marketing services to accelerate market adoption, mitigate business risk, and harness open source for business growth while giving back to the developer community.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Deborah Bryant, Senior Director, Open Source Program Office at Red Hat, puts it this way in the eBook: “The Eclipse Foundation has a rich history of being an industry disrupter...It distinguishes itself in its long history and deep roots with large industry players. The Foundation has really been driven by engineers for engineers, but also as an honest broker of discussions with the business of these big companies that are doing very large-scale projects.”&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Are you leveraging all that open source has to offer? Do you understand the value of participating in open source to develop customer-centric products and services faster? Do you recognize the scalability of open source, the ability to innovate on business models, and the ability to collaborate with a global developer community? Congratulations, you’re what we like to call an &lt;a href=&quot;http://www.entropeneur.org&quot;&gt;entr&amp;lt;open&amp;gt;eur&lt;/a&gt;. To get the most out of your stake in open source, it's time to consider joining a commercially-friendly open source foundation like ours.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about the business value of open collaboration at the Eclipse Foundation, visit &lt;a href=&quot;http://www.entropeneur.org&quot;&gt;entropeneur.org&lt;/a&gt;. In addition to the eBook, you’ll find video success stories from the Eclipse community, an &lt;a href=&quot;https://www.eclipse.org/org/value/public/pdf/business_of_open_source_infographic.pdf&quot;&gt;infographic&lt;/a&gt; summarizing the role and benefits of participating in an open source foundation, and an informative &lt;a href=&quot;https://www.eclipse.org/org/value/public/pdf/business_of_open_source_slide_deck.pdf&quot;&gt;slide deck&lt;/a&gt; that you can use to make the case for joining the Eclipse Foundation. Many thanks to Deborah Bryant, Todd Moore, and Tyler Jewell for contributing their expertise and insights to the eBook.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Let us know what you think and be sure to join the entrepreneurial open source conversation on Twitter @EclipseFdn and share your open source success story using #entropeneur.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/business-leadership&quot;&gt;business leadership&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/eclipse-foundation&quot;&gt;Eclipse Foundation&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/entreur&quot;&gt;entr&amp;lt;open&amp;gt;eur&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 15 Jul 2019 15:04:01 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Industrial-Scale Collaboration for the Business Win</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1505</guid>
	<link>https://eclipse-foundation.blog/2019/07/15/industrial-scale-collaboration-for-the-business-win/</link>
	<description>&lt;p&gt;Marc Andreessen once famously said, “&lt;a href=&quot;https://a16z.com/2011/08/20/why-software-is-eating-the-world/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Software is eating the world&lt;/a&gt;.” He was right, software gobbled up industry sectors as varied as financial services, automotive, mining, healthcare, and entertainment. Companies of all sizes have leveraged software to improve their business processes and adapt products to a digital economy. And then a funny thing happened: open source ate software.&lt;/p&gt;
&lt;p&gt;From startups to the world’s large corporations, commercial software is built on and with open source. In fact, open source now comprises 80 to 90 percent of the code in a typical software application. Today, &lt;a href=&quot;https://github.com/todogroup/survey&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;most companies&lt;/a&gt; ship commercial products based on open source. If software is the engine of industrial-scale digital transformation, open source is the rocket fuel.&lt;/p&gt;
&lt;p&gt;The fact is, no single company can compete with the rate and scale of disruptive innovation delivered by diverse open source communities. Not only has open source proven to be the most viable way of delivering complex platform software, but open source tenets like transparency, community-focus, inclusion, and collaboration have been adopted by organizations for building customer-centric strategies and cultures. According to &lt;a href=&quot;https://hbswk.hbs.edu/item/the-hidden-benefit-of-giving-back-to-open-source-software&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;research&lt;/a&gt; from Harvard Business School, firms contributing to open source see as much as 100 percent of a productivity boost.&lt;/p&gt;
&lt;p&gt;Nowadays, organizations collaborate at open source foundations to gain a competitive edge. Industry leaders leverage participation in open source foundations to accelerate the market adoption of technologies, improve time to market, and achieve superior interoperability. At the Eclipse Foundation over the last 15 years, industry leaders like Bosch, Broadcom, Fujitsu, Google, IBM, Microsoft, Oracle, Red Hat, SAP, and hundreds more have collaborated under the Eclipse governance model to drive shared innovation and create value within a sustainable ecosystem.&lt;/p&gt;
&lt;p&gt;Today, we are thrilled to release the Business of Open Source &lt;a href=&quot;https://www.eclipse.org/org/value/public/pdf/business_of_open_source_ebook.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;eBook&lt;/a&gt; focused on how successful entrepreneurs are leveraging all that open source has to offer to drive digital disruption within business-friendly open source foundations like the Eclipse Foundation. We call this class of innovators entr&amp;lt;open&amp;gt;eurs.&lt;/p&gt;
&lt;p&gt;Entr&amp;lt;open&amp;gt;eurs understand the value of open source participation to develop products faster, mitigate risk, and recruit talent to gain a competitive edge. They fundamentally recognize the role of vendor-neutral, community-driven, and commercially-friendly open source foundations like ours to foster industry-scale collaboration, anti-trust compliance, IP cleanliness, and ecosystem development and sustainability.&lt;/p&gt;
&lt;p&gt;As Todd Moore, IBM’s Vice President of Open Technology, explains in the eBook, “being a disruptor generally means that you have to move very quickly. You don’t develop all of the technologies that you’re employing. You’ve got enough mastery over them to quickly be able to assemble them. You’re using automation and deployment strategies that allow you to rapidly cycle through the code. What you start with and what you end up with at the end of the string can radically change.”&lt;/p&gt;
&lt;p&gt;Download the Business of Open Source eBook today to learn how to innovate with confidence by giving your mission-critical projects a proper home at the Eclipse Foundation. Thank you to Deborah Bryant, Todd Moore, and Tyler Jewell for contributing their insights and expertise to the eBook. Let us know what you think and be sure to join the entrepreneurial open source conversation on Twitter @EclipseFdn and share your open source success story using #entropeneur.&lt;/p&gt;
&lt;p&gt;To learn more about the business value of open collaboration at the Eclipse Foundation, visit entropeneur.org to explore our other commercial open source resources, including video success stories featuring Eclipse community members. We’ve also developed an &lt;a href=&quot;https://www.eclipse.org/org/value/public/pdf/business_of_open_source_infographic.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;infographic&lt;/a&gt; summarizing the benefits and advantages of participating in an open source foundation, and &lt;a href=&quot;https://www.eclipse.org/org/value/public/pdf/business_of_open_source_slide_deck.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;slide deck&lt;/a&gt; that you can use to make the case for joining the Eclipse Foundation.&lt;/p&gt;</description>
	<pubDate>Mon, 15 Jul 2019 14:40:45 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Papyrus SysML 1.6  available from the Eclipse Marketplace.</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2364</guid>
	<link>https://papyrusuml.wordpress.com/2019/07/12/papyrus-sysml-1-6-available-from-the-eclipse-marketplace/</link>
	<description>&lt;p&gt;I should have mentioned, yesterday, that Papyrus SysML 1.6 is available from the Eclipse market place at &lt;a href=&quot;https://marketplace.eclipse.org/content/papyrus-sysml-16&quot;&gt;https://marketplace.eclipse.org/content/papyrus-sysml-16&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 12 Jul 2019 14:03:10 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Papyrus 4.4 is available</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2361</guid>
	<link>https://papyrusuml.wordpress.com/2019/07/12/papyrus-4-4-is-available/</link>
	<description>&lt;p&gt;I’m a bit late with this posting…better late than never!&lt;/p&gt;



&lt;p&gt;A new version of papyrus 4.4 is available:&lt;/p&gt;



&lt;p&gt;SysML1.6 ( a forum topic will be send when the market place is available)&lt;br /&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;SysML 1.6 profile done&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML requirement diagram shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML Parametric diagram shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML BDD shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML IBD shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML requirement table shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML Graphical element type shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML AF shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML allocation Matrix shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The elementype of SysML 1.6 shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Make SysML 1.6 open source&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML model explorer customization shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Add written OCL constraints&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Implement E3 of SysML 1.6&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Update SysML 1.6 diagram of profile&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Add Icon for conjugated Interface block&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Add compartment of Conjugated Interfaceblock inside BDD&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The SysML Junit Test shall be implemented&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Papyrus shall support the migration from SysML 1.4 to 1.6 Papyrus toolsmith&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Validation of plugins:&lt;br /&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;you have done your profile to customize papyrus, but you forget extension point, build.xml, dependencies. We have done a work not only to validate profile but the plugin that contains the profile&lt;br /&gt;&lt;/li&gt;&lt;li&gt;the work has also be done for plugins that contain elementTypes model.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Improve developer experience to use plugin org.eclipse.papyrus.infra.core.sasheditor&lt;br /&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Decrease the usage of internal eclipse code&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Papyrus has developed at the beginning a new kind of editor compnoent sasheditor. To be more stable, we have ask to open api to eclipse in order to improve integration to eclipse.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Dedicated API have been created from use cases in order to help developer to access to this graphical composite; add a new editor inside papyrus, get active editor…&lt;br /&gt;&lt;/li&gt;&lt;li&gt;These usecases will be published inside a plugin developer doc :&lt;br /&gt;&lt;/li&gt;&lt;li&gt;It is will be like a javadoc that has a list of use cases and references API that implement these usecases.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Model2Doc&lt;br /&gt;&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Papyrus will provide a documentation generator targeting LibreOffice file (odt).&lt;br /&gt;&lt;/li&gt;&lt;li&gt;This generator will allow to the user to describe how to cross the UML model to create the document&lt;br /&gt;&lt;/li&gt;&lt;li&gt;This generator will allow to the user to define a document template to use for the generation&lt;br /&gt;&lt;/li&gt;&lt;li&gt;This generator will support image and table insertion.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Go try it and send me your comments!&lt;/p&gt;



&lt;p&gt;HAVE FUN!&lt;/p&gt;</description>
	<pubDate>Fri, 12 Jul 2019 07:15:43 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 0.9.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-07-10-release-announcement-090.html</guid>
	<link>https://www.eclipse.org/ditto/2019-07-10-release-announcement-090.html</link>
	<description>&lt;p&gt;Today the Eclipse Ditto team proudly presents its second release 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/0.9.0&quot;&gt;0.9.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The topics of this release in a nutshell were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Memory improvements for huge amounts (multi million) of digital twins which are held in memory&lt;/li&gt;
  &lt;li&gt;Adding metrics and logging around the connectivity feature in order to enable being able to operate connections to foreign systems/brokers via APIs&lt;/li&gt;
  &lt;li&gt;Enhancing Ditto’s connectivity feature by additionally being able to connect to Apache Kafka&lt;/li&gt;
  &lt;li&gt;Performance improvements of Ditto’s search functionality&lt;/li&gt;
  &lt;li&gt;Stabilization of cluster bootstrapping&lt;/li&gt;
  &lt;li&gt;Refactoring of how the services configurations are determined&lt;/li&gt;
  &lt;li&gt;Addition of a Helm template in order to simplify Kubernetes based deployments&lt;/li&gt;
  &lt;li&gt;Contributions from Microsoft in order to ease operating Eclipse Ditto on Microsoft Azure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_090.html&quot;&gt;0.9.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 10 Jul 2019 04:00:00 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Building UIs with EASE</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-390668608738243831</guid>
	<link>http://codeandme.blogspot.com/2019/07/building-uis-with-ease.html</link>
	<description>You probably used &lt;a href=&quot;https://www.eclipse.org/ease/&quot; target=&quot;_blank&quot;&gt;EASE&lt;/a&gt; before to automate daily tasks in your IDE or to &lt;a href=&quot;http://codeandme.blogspot.com/2014/12/ease-scripts-conquer-ui.html&quot; target=&quot;_blank&quot;&gt;augment toolbars and menus&lt;/a&gt; with custom functionality. But so far scripts could not be used to build UIs. This changed with the recent contribution of the &lt;i&gt;UI Builder&lt;/i&gt; module.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;What it is all about&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;The &lt;i&gt;UI Builder&lt;/i&gt; module allows to create views and dialogs by pure script code in your IDE. It is great for custom views that developers do not want to put into their products, for rapid prototyping and even for mocking.&lt;br /&gt;&lt;br /&gt;The aim of EASE is to hide layout complexity as much as possible and provide a simple, yet flexible way to implement typical UI tasks.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 1: Input Form&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;We will start by creating a simple input form for address data.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI Builder&quot;);&lt;br /&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;&lt;br /&gt;setColumnCount(2);&lt;br /&gt;createLabel(&quot;First Name:&quot;);&lt;br /&gt;var txtFirstName = createText();&lt;br /&gt;createLabel(&quot;Last Name:&quot;);&lt;br /&gt;var txtLastName = createText();&lt;br /&gt;&lt;/pre&gt;This snippet will create a dynamic view as shown below:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s1600/script_form.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;155&quot; src=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s400/script_form.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;The renderer used will apply a &lt;a href=&quot;https://www.eclipse.org/articles/Article-Understanding-Layouts/Understanding-Layouts.htm&quot; target=&quot;_blank&quot;&gt;GridLayout&lt;/a&gt;. By setting the &lt;i&gt;columnCount&lt;/i&gt; to 2 we may simply add our elements without providing any additional layout information - a simple way to create basic layouts.&lt;br /&gt;&lt;br /&gt;If needed EASE provides more control by providing layout information when creating components:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;createLabel(&quot;First Name:&quot;, &quot;1/1 &amp;gt;x&quot;);&lt;br /&gt;var txtFirstName = createText(&quot;2-4/1 o!&quot;);&lt;br /&gt;createLabel(&quot;Last Name:&quot;, &quot;1/2 &amp;gt;x&quot;);&lt;br /&gt;var txtLastName = createText(&quot;2-4/2 o!&quot;);&lt;br /&gt;&lt;/pre&gt;Creates the same view as above, but now with detailed layout information.&lt;br /&gt;As an example &lt;i&gt;&quot;1/2 &amp;gt;x&quot;&lt;/i&gt; means: first column, second row, horizontal align right, vertical align middle. A full documentation on the syntax is provided in the module documentation (Hover over the &lt;i&gt;UI Builder&lt;/i&gt; module in the &lt;i&gt;Modules Explorer&lt;/i&gt; view).&lt;br /&gt;&lt;br /&gt;Now lets create a combo viewer to select a country for the address:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;cmbCountry = createComboViewer([&quot;Austria&quot;, &quot;Germany&quot;, &quot;India&quot;, &quot;USA&quot;])&lt;br /&gt;&lt;/pre&gt;Simple, isn't it?&lt;br /&gt;&lt;br /&gt;So far we did not need to react on any of our UI elements. Next step is to create a button which needs some kind of callback action:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createButton(&quot;Save 1&quot;, 'print(&quot;you hit the save button&quot;)')&lt;br /&gt;createButton(&quot;Save 2&quot;, saveAddress)&lt;br /&gt;&lt;br /&gt;function saveAddress() {&lt;br /&gt; print(&quot;This is the save method&quot;);&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;The first version of a button adds the callback code as string argument. When the button gets pressed, the callback code will be executed. You may call any script code that the engine is capable of interpreting.&lt;br /&gt;&lt;br /&gt;The second version looks a bit cleaner, as it defines a function &lt;i&gt;saveAddress() &lt;/i&gt;which is called on a button click. Note that we provide a function reference to &lt;i&gt;createButton()&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/Address%20Input.js&quot; target=&quot;_blank&quot;&gt;View the full example&lt;/a&gt; of this script on our &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree&quot; target=&quot;_blank&quot;&gt;script repository&lt;/a&gt;. In addition to some more layouting it also contains a working implementation of the save action to store addresses as JSON data files.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s1600/script_form2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;211&quot; src=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s400/script_form2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Interacting with SWT controls&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The saveAddress() method needs to read data from the input fields of our form. This could be done using&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var firstName = txtFirstName.getText();&lt;/pre&gt;Unfortunately SWT Controls can only be queried in the UI thread, while the script engine is executed in its own thread. To move code execution to the UI thread, the UI module provides a function executeUI(). By default this functionality is disabled as a bad script executed in the UI thread might stall your Eclipse IDE. To enable it you need to set a checkbox in &lt;i&gt;Preferences/Scripting&lt;/i&gt;. The full call then looks like this:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI&quot;)&lt;br /&gt;var firstName = executeUI('txtFirstName.getText();');&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 2: A viewer for our phone numbers&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Now that we are able to create some sample data, we also need a viewer for our phone numbers. Say we are able to load all our addresses into an array, the only thing we need is a table viewer to visualize our entries. Following 2 lines will do the job:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var addresses = readAddresses();&lt;br /&gt;var tableViewer = createTableViewer(addresses)&lt;br /&gt;&lt;/pre&gt;Where &lt;i&gt;readAddresses()&lt;/i&gt; collects our &lt;i&gt;*.address&lt;/i&gt; files and stores them into an array.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s1600/phonebook_1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s400/phonebook_1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;So the viewer works, however we need to define how our columns shall be rendered.&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createViewerColumn(tableViewer, &quot;Name&quot;, createLabelProvider(&quot;getProviderElement().firstName + ' ' + getProviderElement().lastName&quot;))&lt;br /&gt;createViewerColumn(tableViewer, &quot;Phone&quot;, createLabelProvider(&quot;getProviderElement().phone&quot;))&lt;br /&gt;&lt;/pre&gt;Whenever a callback needs a viewer element, getProviderElement() holds the actual element.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s1600/phonebook_2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s400/phonebook_2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We are done! 3 lines of code for a TableViewer does not sound too bad, right? Again a &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/List.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; is available on our script repository. It automatically loads &lt;i&gt;*.address&lt;/i&gt; files from your workspace and displays them in the view.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Example 3: A workspace viewer&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We had a &lt;i&gt;TableViewer&lt;/i&gt; before, now lets try a &lt;i&gt;TreeViewer&lt;/i&gt;. As a tree needs structure, we need to provide a callback to calculate child elements from a given parent:&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var viewer = createTreeViewer(getWorkspace().getProjects(), getChildren);&lt;br /&gt;&lt;br /&gt;function getChildren() {&lt;br /&gt; if (getProviderElement() instanceof org.eclipse.core.resources.IContainer)&lt;br /&gt;  return getProviderElement().members();&lt;br /&gt; &lt;br /&gt; return null;&lt;br /&gt;}&lt;/pre&gt;So simple! The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Project%20Info%20Viewer.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; looks like this:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;u&gt;Example 4: Math function viewer&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The last example demonstrates how to add a custom &lt;i&gt;Control&lt;/i&gt; to a view.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s1600/functions.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;304&quot; src=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s640/functions.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;For plotting we use the Charting module that is shipped with EASE. The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Plot%20function.js&quot; target=&quot;_blank&quot;&gt;source code&lt;/a&gt; should be pretty much self explanatory.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Some Tips &amp;amp; Tricks&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Layouting is dynamic.&lt;br /&gt;Unlike the Java &lt;i&gt;GridLayout&lt;/i&gt; you do not need to fill all cells of your layout. The EASE renderer takes care to automatically fill empty cells with placeholders&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Elements can be replaced.&lt;br /&gt;If you use coordinates when creating controls, you may easily replace a given control by another one. This simplifies the process of layouting (eg if you experience with alignments) and even allows a view to dynamically change its components depending on some external data/events&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Full control.&lt;br /&gt;While some methods from SWT do not have a corresponding script function, still all SWT calls may be used as the &lt;i&gt;create*&lt;/i&gt; methods expose the underlying SWT instances.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Layout help.&lt;br /&gt;To simplify layouting use the &lt;i&gt;showGrid()&lt;/i&gt; function. It displays cell borders that help you to see row/column borders.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 08 Jul 2019 18:54:52 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Jens Reimann: Eclipse Milo 0.3, updated examples</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4271</guid>
	<link>https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/</link>
	<description>&lt;p&gt;We while back I wrote&lt;a href=&quot;https://dentrassi.de/2017/09/14/creating-opc-ua-solutions-eclipse-milo/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; a blog post about OPC UA, using Milo&lt;/a&gt; and added a bunch of examples, in order to get you started. Time passed by and now Milo 0.3.x is released, with a changed API and so those examples no longer work. Not too much has changed, but the experience of running into compile errors isn’t a good one. Finally I found some time to update the examples.&lt;/p&gt;



&lt;span id=&quot;more-4271&quot;&gt;&lt;/span&gt;



&lt;p&gt;This blog post will focus on the changes, compared to the old blog post. As the old blog post is still valid, I though it might make sense to keep it, and introduce the changes of Milo here. The examples repository however is updated to show the new APIs on the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;



&lt;h2&gt;Making contact&lt;/h2&gt;



&lt;p&gt;This is the first situation where you run into the changed API, getting the endpoints. Although the new code is not much different, the old will no longer work:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;List&amp;lt;EndpointDescription&amp;gt; endpoints =
  DiscoveryClient.getEndpoints(&quot;opc.tcp://localhost:4840&quot;)
    .get();&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;When you compare that to the old code, then you will notice that instead of an array, now a list is being used and the class name changed. Not too bad.&lt;/p&gt;



&lt;p&gt;Also, the way you create a new client instance with Milo 0.3.x is a bit different now:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;OpcUaClientConfigBuilder cfg = new OpcUaClientConfigBuilder();
cfg.setEndpoint(endpoints[0]); // please do better, and not only pick the first entry

OpcUaClient client = OpcUaClient.create(cfg.build());
client.connect().get();&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Using the static &lt;code&gt;create&lt;/code&gt; method instead of the constructor allows for a bit more processing, before the class instance is actually created. Also may this new method throw an exception now. Handling this in an async way isn’t too hard when you are using Java 9+:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;public static CompletableFuture&amp;lt;OpcUaClient&amp;gt; createClient(String uri) {
  return DiscoveryClient
    .getEndpoints(uri) // look up endpoints from remote
    .thenCompose(endpoints -&amp;gt; {
      try {
        return CompletableFuture.completedFuture(
            OpcUaClient.create(buildConfiguration(endpoints)) // &quot;buildConfiguration&quot; should pick an endpoint
        );
      } catch (final UaException e) {
        return CompletableFuture.failedFuture(e);
      }
    });
}&lt;/code&gt;&lt;/pre&gt;



&lt;h2&gt;That’s it? That’s it!&lt;/h2&gt;



&lt;p&gt;Well, pretty much. However, we have only been looking at the client side of Milo. Implementing your own server requires to use the server side API, and that change much more. But to be fair, the changes improve the situation a lot, and make things much easier to use.&lt;/p&gt;



&lt;h2&gt;Milo examples repository&lt;/h2&gt;



&lt;p&gt;As mentioned, the examples in the repository &lt;a href=&quot;https://github.com/ctron/milo-ece2017&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;ctron/milo-ece2017&lt;/a&gt; have been updated as well. They also contain the changed server side, which changed a lot more than the client side.&lt;/p&gt;



&lt;p&gt;When you &lt;a href=&quot;https://github.com/ctron/milo-ece2017/compare/milo-0.2x...master&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;compare the two branches&lt;/a&gt; &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;milo-0.2.x&lt;/code&gt;, you can see the changed I made for updating to the new version.&lt;/p&gt;



&lt;p&gt;I hope this helps a bit in getting started with Milo 0.3.x. And please be sure to read the &lt;a href=&quot;https://dentrassi.de/2017/09/14/creating-opc-ua-solutions-eclipse-milo/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;original post&lt;/a&gt;, giving a more detailed introduction, as well.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Milo 0.3, updated examples&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sat, 06 Jul 2019 20:22:28 +0000</pubDate>
</item>
<item>
	<title>Doug Schaefer: Current State of C/C++ Language Servers</title>
	<guid isPermaLink="false">https://medium.com/p/ab87e6fc186b</guid>
	<link>https://medium.com/@dougschaefer/current-state-of-c-c-language-servers-ab87e6fc186b?source=rss-8f7a70438965------2</link>
	<description>&lt;h3&gt;A Bit of History&lt;/h3&gt;&lt;p&gt;When I joined the Eclipse CDT project back in 2002 (yeah, it’s been a long time), I was working on modeling tools for “real time”, or more accurately, embedded reactive systems. Communicating state machines. I wrote code generators that generated C and C++ from &lt;a href=&quot;https://en.wikipedia.org/wiki/Real-Time_Object-Oriented_Modeling&quot;&gt;ROOM models&lt;/a&gt; and then eventually &lt;a href=&quot;https://www.omg.org/news/meetings/workshops/presentations/embedded-rt2002/04-1_Selic-Watson_RT-UML.tutorial&quot;&gt;UML-RT&lt;/a&gt;. ROOM was way better by the way and easier to generate for because it was more semantically complete and well defined. That objective is key later in this story.&lt;/p&gt;&lt;p&gt;We had the vision to integrate our modeling tools more closely with Integrated Development Environments. We started looking at Visual Studio but Eclipse was the young up and comer. That and IBM bought us, Rational by that point, and had already bought OTI who built Eclipse so it was a natural fit. And we were all in Ottawa. And by chance, Ottawa-based QNX had already written a C/C++ IDE based on Eclipse and were open sourcing it and it was perfect for our customers as well. It’s amazing how that all happened and led to my life as CDT Doug.&lt;/p&gt;&lt;p&gt;Our first order of business was to help the CDT become an industry class C/C++ IDE and become a foundation for integrating our modeling tools. Since we wanted to be able to generate model elements from code, it required we have accurate C and C++ parsers and indexers. No one figured we could do it, but we were able to put together a somewhat decent system written in Java in the org.eclipse.cdt.core plug-in.&lt;/p&gt;&lt;h3&gt;Scaling is Hard&lt;/h3&gt;&lt;p&gt;However, as the community started to try it out on real projects, especially ones of a significant size, we started to run into pretty massive performance problems with the indexer. We were essentially doing full builds of the user’s projects and storing the results in a string table. On large projects, builds take a long time. But users expect that and put up with it because they really need those binaries it produces. They don’t have the same patience for their IDEs building indexes the don’t really see and we paid a pretty high price for that.&lt;/p&gt;&lt;p&gt;As a solution, I wondered if we could store the symbol information that we were gathering in a way that we could load it up from disk as we were parsing other files and plug the symbol info into the AST the same way we do symbols normally. This would allow us to parse header files once and reuse the results, similar to how precompiled headers work. The price you pay is in accuracy since some systems parse header files multiple times with different macro settings. But my guess was that it wouldn’t be that bad.&lt;/p&gt;&lt;p&gt;It was hard to convince my team at IBM Rational to take this road. Accuracy was king for our modeling tools. But when I moved to join QNX, I decide to forgo that requirement and give this “fast indexer” strategy a go. And the rest is history. Performance on large projects was an order of magnitude faster. Incremental indexing of files as they were saved isn’t even noticeable. It was a huge success and my proudest contribution to the CDT. And I was even better when other community members handed us their expertise to make the accuracy better and better so you barely notice that at all either.&lt;/p&gt;&lt;h3&gt;C++ Rises from the “Dead”&lt;/h3&gt;&lt;p&gt;Move the clock a decade later and we started running into a problem. The C++ standards community has new life and are adding a tonne of new features at a three year cadence. The CDT community has long lost most of the experts that build the original parsers. Lucky for us a new crop of contributors has come along and are doing heroes work to keep up. But it’s getting harder and harder. One thing we benefit from is how slow embedded developers, the majority of users of CDT, are to adopt the new standards. It gives us time, but not forever. We need to find a better way.&lt;/p&gt;&lt;p&gt;Then along came the Language Server Protocol and a small handful of language servers that do C/C++. I’ve investigated four of them. Three of them are based on llvm and clang. One of them is in tree with llvm and clang in clang-tools-extra, i.e., clangd. The other two are projects that use libclang with parts of the tree, i.e., cquery and ccls. Those two projects are what I call “one person projects” and with cquery at least, that person found something else to do last November. Beware of the one person project.&lt;/p&gt;&lt;h3&gt;clangd&lt;/h3&gt;&lt;p&gt;I’ve spent a lot of time with clangd when experimenting with Visual Studio Code. For what it does, clangd is very accurate and really fast. It uses compile_commands.json files to find out what source files are built and what compiler and command lines they use. I’ve had to fork the tree to add in support for discovering compilers it doesn’t know about, but that was pretty easy to put together. It gives great content assist and you get the benefit of clang’s awesome compilation error diagnostics as you type. It shows a lot of promise.&lt;/p&gt;&lt;p&gt;However clangd for the longest time lacked an indexer. When you search for references it only finds them in files you have opened previously. The thought as I understand it is that you use another process to build the index and that is usually done at build time. However, not all users have such an environment set up so having an index created by the IDE is a mandatory feature. Now, clangd did eventually get an indexer but it does what the old CDT indexer did and completely parses the source three. That predictably takes forever on large projects and I don’t think users have the appetite to take a huge step backwards like that.&lt;/p&gt;&lt;h3&gt;IntelliSense&lt;/h3&gt;&lt;p&gt;While waiting for the right solution to arrive for clangd, I thought I’d give the Microsoft C/C++ Tools for VS Code a try. My initial experience was quite surprising. It actually worked well with a gnu tools cross compiler project I used for testing. You have to teach it how to parse your code using a magic JSON file, which fits right in with the rest of VS Code. It’s able to pick out the default include path when you point it at your compiler. It has a MI support for debugging, though no built-in support for remote debugging but that was hackable. It seemed like a reasonable alternative, at least for VS Code.&lt;/p&gt;&lt;p&gt;However when I tried it with one of our production projects it quickly fell apart. It does a great job trying to figure out include paths, similar to the heuristics we use in CDT. That includes things like treating all the folders in your workspace as a potential include path entry. But it tended to make mistakes. It even has support for compile_commands.json files so I could tell it the command lines that were use. It did better but still tried to do too much and gave incorrect results.&lt;/p&gt;&lt;p&gt;That and it doesn’t have an index yet either. One is coming soon, but if it can’t figure out how to parse my files correctly, it’s not going to be a great experience. Still a lot of work to do there.&lt;/p&gt;&lt;h3&gt;Where do we go from here?&lt;/h3&gt;&lt;p&gt;As it stands today, at least from a CDT perspective, there really isn’t a language server solution that comes near what we have in CDT. Yes, some things are better. Both these language servers are using real parsers to parse the code. (or at least clangd is. Microsoft’s, of course, is closed source so I can only assume). They give really good content assist and error diagnostics and open declaration works. But without a usable indexer, you don’t get accurate symbol references. And I haven’t even mentioned refactoring which CDT has and which is not even suggested in the language server protocol.&lt;/p&gt;&lt;p&gt;So if all your doing is typing in code, the new language servers are great. But if you need to do some code mining to understand the code before you change it, you’re out of luck. The good news is that we are continuing to see investment in them so who knows. But then, maybe the CDT parsers catch up with the language standards before these other language servers grow great indexers making the whole thing moot. I wouldn’t bet against that right now.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ab87e6fc186b&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 28 Jun 2019 19:59:53 +0000</pubDate>
</item>
<item>
	<title>itemis: Graphical Editing Framework (GEF) 5.1.0 Release</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</guid>
	<link>https://blogs.itemis.com/en/graphical-editing-framework-gef-5.1.0-release</link>
	<description>&lt;p&gt;The Eclipse GEF team is happy to announce that version 5.1.0 of the &lt;a href=&quot;https://www.eclipse.org/gef/&quot; title=&quot; Eclipse&quot;&gt;Eclipse Graphical Editing Framework&lt;/a&gt; is part of the Eclipse 2019-06 simultaneous release:&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;img alt=&quot;GEF_Installation&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Eclipse/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Installation.jpg?width=869&amp;amp;name=GEF_Installation.jpg&quot; style=&quot;width: 869px;&quot; width=&quot;869&quot; /&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The project team has worked hard since the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/en/graphical-editing-framework-gef-5.0.0-release&quot; title=&quot; Graphical Editing Framework (GEF) 5.0.0 Release&quot;&gt; Eclipse GEF 5.0.0 release &lt;/a&gt;&lt;/strong&gt; two years ago. The new release fixes &lt;a href=&quot;https://projects.eclipse.org/projects/tools.gef/releases/5.1.0-2019-06/bugs&quot;&gt;&lt;strong&gt;issues&lt;/strong&gt;&lt;/a&gt; on the &lt;em&gt;GEF MVC&lt;/em&gt;, &lt;em&gt;GEF Zest&lt;/em&gt;, and &lt;em&gt;GEF DOT&lt;/em&gt; components.&lt;/p&gt; 
&lt;p&gt;We would like to thank all contributors who made this release possible:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;GEF_Contributions&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Embedded/GRAPHICAL%20EDITING%20FRAMEWORK%20(GEF)%205.1.0%20RELEASE/GEF_Contributions.png?width=874&amp;amp;name=GEF_Contributions.png&quot; style=&quot;width: 874px;&quot; width=&quot;874&quot; /&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;Your feedback regarding the new release is highly appreciated. If you have any questions or suggestions, please let us know via the &lt;a href=&quot;https://www.eclipse.org/forums/index.php?t=thread&amp;amp;frm_id=81&quot; title=&quot;Eclipse GEF forum&quot;&gt;&lt;strong&gt;Eclipse GEF forum&lt;/strong&gt;&lt;/a&gt; or create an issue on &lt;a href=&quot;https://bugs.eclipse.org/bugs/describecomponents.cgi?product=GEF&quot; title=&quot;Eclipse Bugzilla&quot;&gt;&lt;strong&gt;Eclipse Bugzilla&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For further information, we recommend to take a look at the &lt;strong&gt;&lt;a href=&quot;https://blogs.itemis.com/topic/gef&quot; title=&quot;More Eclipse GEF blog articles&quot;&gt;Eclipse GEF blog articles&lt;/a&gt;&lt;/strong&gt;, watch the &lt;a href=&quot;https://www.youtube.com/watch?v=GnSVLNYfGlk&quot; title=&quot;Eclipse GEF DOT Video&quot;&gt;&lt;strong&gt;Eclipse GEF session on the EclipseCon Europe 2018&lt;/strong&gt;&lt;/a&gt;, and try out the&lt;strong&gt; &lt;a href=&quot;https://info.itemis.com/en/gef/tutorials/&quot; title=&quot;Online tutorial: Getting started with GEF 5.0&quot;&gt;Getting started with Eclipse GEF online tutorial&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fgraphical-editing-framework-gef-5.1.0-release&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 25 Jun 2019 08:00:00 +0000</pubDate>
	<author>miklossy@itemis.de (Tamas Miklossy)</author>
</item>
<item>
	<title>Jens Reimann: Bringing IoT to Red Hat AMQ Online</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4160</guid>
	<link>https://dentrassi.de/2019/06/24/bringing-iot-to-red-hat-amq-online/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/amq_online_1.1_on_openshift_container_platform_release_notes/index&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat AMQ Online 1.1&lt;/a&gt; was recently announced, and I am excited about it because it contains a tech preview of our Internet of Things &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/amq_online_1.1_on_openshift_container_platform_release_notes/tech-preview-online#internet_of_things_iot_functionality&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;(IoT) support&lt;/a&gt;. AMQ Online is the “messaging as service solution” from Red Hat AMQ. Leveraging the work we did on &lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Hono&lt;/a&gt; allows us to integrate a &lt;a href=&quot;https://dentrassi.de/2018/07/25/scaling-iot-eclipse-hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;scalable&lt;/a&gt;,  cloud-native IoT personality into this general-purpose messaging layer.  And the whole reason why you need an IoT messaging layer is so you can  focus on connecting your cloud-side application with the millions of  devices that you have out there.&lt;/p&gt;



&lt;span id=&quot;more-4160&quot;&gt;&lt;/span&gt;



&lt;p class=&quot;has-background has-very-light-gray-background-color&quot;&gt;&lt;em&gt;This post was originally published on &lt;a href=&quot;https://developers.redhat.com/blog/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Developers&lt;/a&gt;, the community to learn, code, and share faster. To read the original post, click &lt;a href=&quot;https://developers.redhat.com/blog/2019/05/14/bringing-iot-to-red-hat-amq-online/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;



&lt;h2&gt;What is Eclipse Hono&lt;img alt=&quot;™&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/2122.png&quot; style=&quot;height: 1em;&quot; /&gt;?&lt;/h2&gt;



&lt;p&gt;Eclipse Hono is an IoT abstraction layer. It defines APIs in order to build an IoT stack in the cloud, taking care of things like device credentials, protocols, and scalability. For some of those APIs, it comes with a ready-to-run implementation, such as the MQTT protocol adapter. For others, such as the device registry, it only defines the necessary API. The actual implementation must be provided to the system.&lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter is-resized&quot;&gt;&lt;img alt=&quot;Eclipse Hono IoT architecture overview&quot; class=&quot;wp-image-4165&quot; height=&quot;346&quot; src=&quot;https://dentrassi.de/wp-content/uploads/hono-overview.svg&quot; width=&quot;849&quot; /&gt;&lt;figcaption&gt;Eclipse Hono overview&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;A key feature of Hono is that it normalizes the different IoT-specific protocols on &lt;a href=&quot;http://www.amqp.org/specification/1.0/amqp-org-download&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;AMQP 1.0&lt;/a&gt;.  This protocol is common on the data center side, and it is quite  capable of handling the requirements on throughput and back-pressure.  However, on the IoT devices side, other protocols might have more  benefits for certain use cases. MQTT is a favorite for many people, as  is plain HTTP due to its simplicity. LoRaWAN, CoAP, Sigfox, etc. all  have their pros and cons. If you want to play in the world of IoT, you  simply have to support them all. Even when it comes to custom protocols,  Hono provides a software stack to easily implement your custom  protocol.&lt;/p&gt;



&lt;h2&gt;AMQ Online&lt;/h2&gt;



&lt;p&gt;Hono requires an AMQP 1.0 messaging backend. It requires a broker and a  component called “router” (which doesn’t own messages but only forwards  them to the correct receiver). Of course, it expects the AMQP layer to  be as scalable as Hono itself. AMQ Online is a “self-service,” messaging  solution for the cloud. So it makes sense to allow Hono to run on top  of it. We had this deployment model for a while in Hono, allowing the  use of &lt;a href=&quot;https://enmasse.io/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EnMasse&lt;/a&gt; (the upstream project of AMQ Online).&lt;/p&gt;



&lt;h2&gt;Self-service IoT&lt;/h2&gt;



&lt;p&gt;In a world of Kubernetes and operators, the thing that you are actually looking for is more like this:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;kind: IoTProject
 apiVersion: iot.enmasse.io/v1alpha1
 metadata:
   name: iot
   namespace: myapp
 spec:
   downstreamStrategy:
     managedStrategy:
       addressSpace:
         name: iot
         plan: standard-unlimited
       addresses:
         telemetry:
           plan: standard-small-anycast
         event:
           plan: standard-small-queue
         command:
           plan: standard-small-anycast&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;You simply define your IoT project, by creating a new custom resource using &lt;code&gt;kubectl create -f&lt;/code&gt;  and you are done. If you have the IoT operator of AMQ Online 1.1  deployed, then it will create the necessary address space for you, and  set up the required addresses.&lt;/p&gt;



&lt;p&gt;The IoT project will also automatically act as a Hono tenant. In this example, the Hono tenant would be &lt;code&gt;myapp.iot&lt;/code&gt;, and so the full authentication ID of e.g. &lt;code&gt;sensor1&lt;/code&gt; would be &lt;code&gt;sensor1@myapp.iot&lt;/code&gt;. The IoT project also holds all the optional tenant configuration under the section &lt;code&gt;.spec.configuration&lt;/code&gt;.&lt;/p&gt;



&lt;p&gt;With the &lt;a href=&quot;https://github.com/ctron/hat&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hono admin tool,&lt;/a&gt;  you can quickly register a new device with your installation (the  documentation will also tell you how to achieve the same with &lt;code&gt;curl&lt;/code&gt;):&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;# register the new context once with 'hat'
hat context create myapp1 --default-tenant myapp.iot https://$(oc -n messaging-infra get routes device-registry --template='{{ .spec.host }}')

# register a new device and set credentials
hat reg create 4711
hat cred set-password sensor1 sha-512 hono-secret --device 4711&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;With that, you can simply use Hono as always. First, start the consumer:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;# from the hono/cli directory
export MESSAGING_HOST=$(oc -n myapp get addressspace iot -o jsonpath={.status.endpointStatuses[?(@.name==\'messaging\')].externalHost})
export MESSAGING_PORT=443

mvn spring-boot:run -Drun.arguments=--hono.client.host=$MESSAGING_HOST,--hono.client.port=$MESSAGING_PORT,--hono.client.username=consumer,--hono.client.password=foobar,--tenant.id=myapp.iot,--hono.client.trustStorePath=target/config/hono-demo-certs-jar/tls.crt,--message.type=telemetry&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;And then publish some data to the telemetry channel:&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;curl -X POST -i -u sensor1@myapp.iot:hono-secret -H 'Content-Type: application/json' --data-binary '{&quot;temp&quot;: 5}' https://$(oc -n enmasse-infra get routes iot-http-adapter --template='{{ .spec.host }}')/telemetry&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;For more detailed instructions, see: &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/evaluating_amq_online_on_openshift_container_platform/assembly-iot-messaging&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Getting Started with Internet of Things (IoT) on AMQ Online&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;IoT integration&lt;/h2&gt;



&lt;p&gt;As mentioned before, you don’t do IoT just for the fun of it (well,  maybe at home, with a Raspberry Pi, Node.js, OpenHAB, and mosquitto).  But when you want to connect millions of devices with your cloud  backend, you want to start working with that data. Using Hono gives you a  pretty simple start. Everything you need is an AMQP 1.0 connectivity.  Assuming you use Apache Camel, pushing telemetry data towards a Kafka  cluster is as easy as (also see &lt;a href=&quot;https://github.com/ctron/hono-example-bridge&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;ctron/hono-example-bridge&lt;/a&gt;):&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;&amp;lt;route id=&quot;store&quot;&amp;gt;
  &amp;lt;from uri=&quot;amqp:telemetry/myapp.iot&quot; /&amp;gt;

  &amp;lt;setHeader id=&quot;setKafkaKey&quot; headerName=&quot;kafka.KEY&quot;&amp;gt;
    &amp;lt;simple&amp;gt;${header[device_id]}&amp;lt;/simple&amp;gt;
  &amp;lt;/setHeader&amp;gt;

  &amp;lt;to uri=&quot;kafka:telemetry?brokers={{kafka.brokers}}&quot; /&amp;gt;
&amp;lt;/route&amp;gt;&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Bringing together solutions like &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/fuse&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Fuse&lt;/a&gt;, &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/amq&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;AMQ&lt;/a&gt; and &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/decision-manager&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Decision Manager&lt;/a&gt; makes it a lot easier to give your custom logic in the data center (your value add‑on) access to the Internet of Things.&lt;/p&gt;



&lt;h2&gt;What’s next?&lt;/h2&gt;



&lt;p&gt;AMQ Online 1.1 is the first version to feature IoT as a tech preview. So, give it a try, play with it, but also keep in mind that it is a tech preview.&lt;/p&gt;



&lt;p&gt;In the upstream project EnMasse, we are currently working on creating a scalable, general purpose device registry based on &lt;a href=&quot;https://infinispan.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Infinispan&lt;/a&gt;.  Hono itself doesn’t bring a device registry, it only defines the APIs  it requires. However, we think it makes sense to provide a scalable  device registry, out of the box, to get you started. In AMQ Online, that  would then be supported by using &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/data-grid&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Red Hat Data Grid&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;In the next months, we hope to also see the release of Eclipse Hono 1.0 and graduate the project from the incubation phase. This is a big step for a project at Eclipse but also the right thing to do. Eclipse Hono is ready, and graduating the project means that we will pay even closer attention to APIs and stability. Still, new features like LoRaWAN, maybe Sigfox, and a proper HTTP API definition for the device registry, are already under development.&lt;/p&gt;



&lt;p&gt;So, there are lots of new features and enhancements that we hope to bring into AMQ Online 1.2.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/06/24/bringing-iot-to-red-hat-amq-online/&quot; rel=&quot;nofollow&quot;&gt;Bringing IoT to Red Hat AMQ Online&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 24 Jun 2019 07:47:59 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse ioFog: Evolving Toward Native Kubernetes Orchestration at the Edge</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1500</guid>
	<link>https://eclipse-foundation.blog/2019/06/23/eclipse-iofog-delivering-k8s-at-the-edge/</link>
	<description>&lt;p&gt;With the proliferation of AI, autonomous vehicles, 5G, IoT, and other industrial use cases that require lightning-fast data processing, edge computing has emerged over the past few years as a way to address the limitations of existing cloud architectures to process information and deliver services at the “IoT edge”. Instead of backhauling data to the centralized cloud, edge computing brings computational power closer to data sources to support near real-time insights and local actions while reducing network bandwidth and storage requirements.&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&quot;https://www.gartner.com/smarterwithgartner/what-edge-computing-means-for-infrastructure-and-operations-leaders/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Gartner&lt;/a&gt;, 75% of enterprise-generated data will be created and processed outside a traditional centralized data center or cloud by 2025. While the problems at the IoT edge — connectivity, manageability, scalability, reliability, security — are being solved as point solutions by enterprises and ecosystem players, there is a need for a foundational industry-wide standard for managing distributed IoT workloads. Time and again, open source has been proven to be the best way to deliver complex platform software with industrial scale collaboration.&lt;/p&gt;
&lt;p&gt;Enter Kubernetes, the de facto standard for orchestrating containers and the applications running inside them. Kubernetes has massive potential for handling IoT workloads on the edge by providing a common control plane across hybrid cloud and edge environments to simplify management and operations. Within the &lt;a href=&quot;https://github.com/kubernetes/community/tree/master/wg-iot-edge&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Kubernetes IoT Edge Working Group&lt;/a&gt;, members of the Kubernetes and Eclipse communities are collaborating with leading technology innovators to extend Kubernetes to support dynamically, securely, and remotely managing edge nodes.&lt;/p&gt;
&lt;p&gt;A great example of this collaboration is Eclipse ioFog, a universal Edge Compute Platform which offers a standardized way to develop and remotely deploy secure microservices to edge computing devices. ioFog can be installed on any hardware running Linux and provides a universal runtime for microservices to dynamically run on the edge. Companies in different vertical markets such as retail, automotive, oil and gas, telco, and healthcare are using ioFog to turn any compute device into an edge software platform.&lt;/p&gt;
&lt;p&gt;The Eclipse Foundation is excited to support today’s announcement of the initial availability of ioFog features that make any Kubernetes distribution edge-aware. With this latest release, developers are able to extend Kubernetes to easily deploy, secure, and manage edge computing networks supporting applications such as advanced AI and machine learning algorithms.&lt;/p&gt;
&lt;p&gt;Farah Papaioannou, co-founder and president of Edgeworx, explains the significance of the release this way:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;i&gt;“ioFog is a proven platform at the edge. With this release, we build on native Kubernetes, seamlessly extending it to the edge…We do this based on things that actually matter at the edge, such as latency, location or resources. We are delivering today a full cloud-to-edge solution, that’s 100-percent open source and works with any Kubernetes flavors and distros.”&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These native Kubernetes enhancements are in the process of being contributed to the Eclipse ioFog open source project. We are proud to support the collective efforts of the Eclipse community and the Kubernetes ecosystem to help developers deploy, manage, and orchestrate applications and microservices from cloud to edge in a simple and secure manner.&lt;/p&gt;
&lt;p&gt;For more information about ioFog, get started by using &lt;a href=&quot;https://iofog.org/releases.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;this link&lt;/a&gt; to install and set up your production ioFog environment. If you have questions or want to connect with other people involved in this platform, join the &lt;a href=&quot;https://discuss.iofog.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ioFog community&lt;/a&gt; and the &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/iofog-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sun, 23 Jun 2019 20:46:52 +0000</pubDate>
</item>
<item>
	<title>Vladimir Piskarev: Eclipse Handly 1.2 Released</title>
	<guid isPermaLink="false">http://pisv.wordpress.com/?p=703</guid>
	<link>https://pisv.wordpress.com/2019/06/19/eclipse-handly-1-2-released/</link>
	<description>&lt;p&gt;Eclipse &lt;a href=&quot;https://www.eclipse.org/handly&quot;&gt;Handly&lt;/a&gt; &lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/releases/1.2&quot;&gt;1.2&lt;/a&gt; has just been released. This release is focused on further enhancements to UI components. Particularly, it provides a framework for creating a full-featured Call Hierarchy view.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.eclipse.org/Handly/New_and_Noteworthy/1.2&quot;&gt;New and Noteworthy&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://wiki.eclipse.org/Handly/Migration/1.2&quot;&gt;Migration Guide&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://projects.eclipse.org/projects/technology.handly/downloads&quot;&gt;Downloads&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 18:50:18 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.14 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink188</guid>
	<link>http://eclipse.org/webtools/releases/3.14</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.14 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-06
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-06/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.14 is included in the 2019-06
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-06/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in 9
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.14 update site itself&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink188&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 19 Jun 2019 15:14:59 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Eclipse Introduces New IDE-Agnostic Tools for Building and Deploying Cloud-Native Applications</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2019/06/eclipse-codewind?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2019/06/eclipse-codewind?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Eclipse Codewind is a new developer-centric project from the Eclipse Foundation that aims to assist developers by providing ways to quickly and consistently accomplish tasks that are common to cloud-native application development.&lt;/p&gt; &lt;i&gt;By Dustin Schultz&lt;/i&gt;</description>
	<pubDate>Mon, 17 Jun 2019 05:35:00 +0000</pubDate>
</item>
<item>
	<title>Sharon Corbett: Eclipse Individual Committer Agreement 4.0 Update</title>
	<guid isPermaLink="false">6708 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/sharon-corbett/eclipse-individual-committer-agreement-40-update</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;The Eclipse Foundation has been busy over the last six months communicating with the Community at Large in order to update our standard Contributor and Committer Agreements to state explicitly that contributions made to our projects may also be used in specifications.&lt;/p&gt;

&lt;p&gt;Our second milestone in this campaign targeted the &lt;a href=&quot;https://www.eclipse.org/legal/committer_process/EclipseIndividualCommitterAgreement.pdf&quot;&gt;Eclipse Individual Committer Agreement&lt;/a&gt; (ICA) and we are happy to report that a very significant number of our individual committers successfully updated theirs.  On June 13th, we retired all versions of the ICA prior to version 4.0 which has placed a small number of individual committers in a temporary locked position.  Please note this does not impact your status as a Committer; it temporarily locks your commit privileges until the updated agreement is in place. This will ensure the integrity of all of our projects.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We are confident we have connected with all committers in this situation; however, we are here to help!  Email emo-records@eclipse-foundation.org for assistance.&lt;/p&gt;

&lt;p&gt;Thank you to the Eclipse Community for your support of this campaign and for helping make Eclipse a great community!&lt;br /&gt;
 &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 14 Jun 2019 15:27:28 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: My new book on TDD, Build Automation and Continuous Integration</title>
	<guid isPermaLink="false">http://www.lorenzobettini.it/?p=1179</guid>
	<link>http://www.lorenzobettini.it/2019/06/my-new-book-on-tdd-build-automation-and-continuous-integration/</link>
	<description>&lt;p&gt;I haven’t been blogging for some time now. I’m getting back to blogging by announcing my new book on TDD (Test-Driven Development), Build Automation and Continuous Integration.&lt;/p&gt;



&lt;p&gt;The title is indeed, “&lt;strong&gt;Test-Driven Development, Build Automation, Continuous Integration&lt;br /&gt; (with Java, Eclipse and friends)&lt;/strong&gt;” and can be bought from &lt;a href=&quot;https://leanpub.com/tdd-buildautomation-ci&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://leanpub.com/tdd-buildautomation-ci&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to get you started with Test-Driven Development (write tests before the code), Build Automation (make the overall process of compilation and testing automatic with Maven) and Continuous Integration (commit changes and a server will perform the whole build of your code). Using Java, Eclipse and their ecosystems.&lt;/p&gt;



&lt;p&gt;The main subject of this book is software testing. The main premise is that testing is a crucial part of software development. You need to make sure that the software you write behaves correctly. You can manually test your software. However, manual tests require lots of manual work and it is error prone.&lt;/p&gt;



&lt;p&gt;On the contrary, this book focuses on automated tests, which can be done at several levels. In the book we will see a few types of tests, starting from those that test a single component in isolation to those that test the entire application. We will also deal with tests in the presence of a database and with tests that verify the correct behavior of the graphical user interface.&lt;/p&gt;



&lt;p&gt;In particular, we will describe and apply the Test-Driven Development methodology, writing tests before the actual code.&lt;/p&gt;



&lt;p&gt;Throughout the book we will use Java as the main programming language. We use Eclipse as the IDE. Both Java and Eclipse have a huge ecosystem of “friends”, that is, frameworks, tools and plugins. Many of them are related to automated tests and perfectly fit the goals of the book. We will use JUnit throughout the book as the main Java testing framework.&lt;/p&gt;



&lt;p&gt;it is also important to be able to completely automate the build process. In fact, another relevant subject of the book is Build Automation. We will use one of the mainstream tools for build automation in the Java world, Maven.&lt;/p&gt;



&lt;p&gt;We will use Git as the Version Control System and GitHub as the hosting service for our Git repositories. We will then connect our code hosted on GitHub with a cloud platform for Continuous Integration. In particular, we will use Travis CI. With the Continuous Integration process, we will implement a workflow where each time we commit a change in our Git repository, the CI server will automatically run the automated build process, compiling all the code, running all the tests and possibly create additional reports concerning the quality of our code and of our tests.&lt;/p&gt;



&lt;p&gt;The code quality of tests can be measured in terms of a few metrics using code coverage and mutation testing. Other metrics are based on static analysis mechanisms, inspecting the code in search of bugs, code smells and vulnerabilities. For such a static analysis we will use SonarQube and its free cloud version SonarCloud.&lt;/p&gt;



&lt;p&gt;When we need our application to connect to a service like a database, we will use Docker a virtualization program, based on containers, that is much more lightweight than standard virtual machines. Docker will allow us to&lt;/p&gt;



&lt;p&gt;configure the needed services in advance, once and for all, so that the services running in the containers will take part in the reproducibility of the whole build infrastructure. The same configuration of the services will be used in our development environment, during build automation and in the CI server.&lt;/p&gt;



&lt;p&gt;Most of the chapters have a “tutorial” nature. Besides a few general explanations of the main concepts, the chapters will show lots of code. It should be straightforward to follow the chapters and write the code to reproduce the examples. All the sources of the examples are available on GitHub.&lt;/p&gt;



&lt;p&gt;The main goal of the book is to give the basic concepts of the techniques and tools for testing, build automation and continuous integration. Of course, the descriptions of these concepts you find in this book are far from being exhaustive. However, you should get enough information to get started with all the presented techniques and tools.&lt;/p&gt;



&lt;p&gt;I hope you enjoy the book &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;



&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 16:59:24 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse Tycho: Disable p2 dependency resolution with tycho.mode=maven</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1023</guid>
	<link>https://kthoms.wordpress.com/2019/06/12/eclipse-tycho-disable-p2-dependency-resolution-with-tycho-modemaven/</link>
	<description>&lt;p&gt;In Eclipse Tycho based builds the first step is always computation of the target platform and depedency resolution. This takes quite some time and in certain use cases it is not necessary. Typical use cases are updating versions with the &lt;a href=&quot;https://www.eclipse.org/tycho/sitedocs/tycho-release/tycho-versions-plugin/set-version-mojo.html&quot;&gt;tycho-versions-plugin&lt;/a&gt;, or displaying the effective pom with &lt;code&gt;help:effective-pom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The p2 target platform &amp;amp; dependency resolution can be skipped by setting the &lt;code&gt;tycho-mode&lt;/code&gt; system property:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mvn -Dtycho.mode=maven &amp;lt;goals&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This useful feature is a bit hidden in just a few posts, e.g. &lt;a href=&quot;https://www.eclipse.org/lists/tycho-user/msg06439.html&quot;&gt;https://www.eclipse.org/lists/tycho-user/msg06439.html&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 12 Jun 2019 01:31:39 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: Welcome Shabnam!</title>
	<guid isPermaLink="false">6707 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/welcome-shabnam</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;I am happy to announce that Shabnam Mayel has joined the Eclipse Foundation as a Senior Marketing Lead, Cloud Native Java. &lt;/p&gt;

&lt;p&gt;Shabnam brings with her several years of diverse marketing, business development, and technical sales experience. Most recently, she led marketing and brand management initiatives for tech startups in Southeast Asia. She holds an electronics engineering degree, an MBA and a Ph.D. in management. She is based in Toronto.&lt;/p&gt;

&lt;p&gt;Shabnam will be responsible for developing and implementing global marketing programs to grow the awareness of and participation in Jakarta EE, Eclipse MicroProfile, and other Foundation projects in the cloud native application space.&lt;/p&gt;

&lt;p&gt;Please join me in welcoming Shabnam to the Eclipse community!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakartaee&quot;&gt;#JakartaEE&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/microprofile&quot;&gt;MicroProfile&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/cloud-native&quot;&gt;cloud native&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/eclipse-foundation&quot;&gt;Eclipse Foundation&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/marketing-0&quot;&gt;Marketing&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 05 Jun 2019 09:13:08 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: Inline Display of Error / Warning / Info Annotations in Eclipse</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=436</guid>
	<link>https://www.nikostotz.de/blog/inline-display-of-error-warning-info-annotations-in-eclipse/</link>
	<description>&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; A prototype implementation shows all error, warning, and info annotations (“bubbles” in the left ruler) in Eclipse Java editor as inline text. Thus, we don’t have to use the mouse to view the error message. The error messages update live with changes in the editor.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-438&quot; src=&quot;https://www.nikostotz.de/blog/wp-content/uploads/2019/05/InlineAnnotationsSmall.gif&quot; /&gt;&lt;figcaption&gt;Screencast showing the live effect&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;I’m an avid keyboard user. If I have to touch the mouse, something is wrong. Eclise has tons of shortcuts to ease your live, and I use and enjoy them every day.&lt;/p&gt;



&lt;p&gt;However, if I had an error message in e.g. my Java file, and I couldn’t anticipate the error, I had several bad choices:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt; Opening the &lt;em&gt;Problems&lt;/em&gt; view and navigating to the current error (entries in the  Problems view are called “markers” by Eclipse)&lt;/li&gt;&lt;li&gt;Moving the mouse over the annotation in the left ruler (“annotation” in Eclipse lingo)&lt;/li&gt;&lt;li&gt;Guessing&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;Not so long ago, Angelo Zerr and others implemented &lt;a href=&quot;https://github.com/angelozerr/jdt-codemining&quot;&gt;code mining&lt;/a&gt; in Eclipse. This feature displays additional information within a text file without changing the actual contents of the file. Sounds like a natural fit for my problem!&lt;/p&gt;



&lt;p&gt;I first tried to implement the error code mining based on markers, (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=540443&quot;&gt;Bug 540443&lt;/a&gt;). This works in general. However, markers are bound to the &lt;em&gt;persisted state&lt;/em&gt; of a file, i.e. how a file is saved to disk. So they are only updated on saving.&lt;/p&gt;



&lt;p&gt;Most editors in Eclipse are more interactive than that: They update their error information based on the &lt;em&gt;dirty state&lt;/em&gt; of the editor, i.e. the text that’s currently in the editor. This feels way more natural, so I tried to rewrite my error code mining based on annotations. The current prototype is shown in above’s screencast.&lt;/p&gt;



&lt;p&gt;The code is attached to &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=547665&quot;&gt;Bug 547665&lt;/a&gt;. The prototype looks quite promising.&lt;/p&gt;



&lt;p&gt;As above’s screencast shows, I have at least one serious issue to resolve: When the editor is saved, all code minings briefly duplicate. Thankfully, they get back to normal quickly.&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Sun, 26 May 2019 22:11:09 +0000</pubDate>
        <enclosure url="https://www.nikostotz.de/blog/wp-content/uploads/2019/05/InlineAnnotationsSmall.gif" length="2854" type="image/jpeg"/>
</item>
<item>
	<title>Doug Schaefer: Going Straight to clang for WebAssembly</title>
	<guid isPermaLink="false">https://medium.com/p/928df1484430</guid>
	<link>https://medium.com/@dougschaefer/going-straight-to-clang-for-webassembly-928df1484430?source=rss-8f7a70438965------2</link>
	<description>&lt;p&gt;A few years ago at EclipseCon I gave a demo of a C++ app using libSDL2 and showed how you build it with CDT and launch it for multiple platforms, my desktop, a BeagleBone running QNX, and finally in a web browser using Emscripten. I used CMake for the build system and that worked fine for the first two, but Emscripten really fought the idea of something else driving the build. I finally figured it out but it left the impression that there had to be a simpler way to build WebAssembly apps.&lt;/p&gt;&lt;p&gt;Recently with version 8 of clang, they have made the wasm target a first class citizen available with the standard distribution. I thought I’d take a look and &lt;a href=&quot;https://github.com/PetterS/clang-wasm&quot;&gt;found at least one example on github&lt;/a&gt; that showed how. Here’s a quick summary on how to get started. Be warned, though, one of the arguments is nostdlib which means this is a very barebones example. But that’s another area where I think Emscripten has gone a little to far with. More on that later.&lt;/p&gt;&lt;p&gt;To start this example is a pretty basic Fibonacci calculator, pretty standard for WebAssembly. Here’s the C++ file.&lt;/p&gt;&lt;pre&gt;#include “wasm.h”&lt;/pre&gt;&lt;pre&gt;WASM_IMPORT void log(int i);&lt;/pre&gt;&lt;pre&gt;WASM_EXPORT int fib(int i) {&lt;br /&gt;    int res = i &amp;lt;= 1 ? i : fib(i — 1) + fib(i — 2);&lt;br /&gt;    log(res);&lt;br /&gt;    return res;&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;I wanted to show C++ calling back into JavaScript so there’s a very contrived log method we import. The fib function itself is pretty basic. I’ve created a couple of macros in the wasm.h file to manage marking functions as import or export.&lt;/p&gt;&lt;pre&gt;#define WASM_EXPORT __attribute__((visibility(“default”))) \&lt;br /&gt;    extern “C”&lt;br /&gt;#define WASM_IMPORT extern “C”&lt;/pre&gt;&lt;p&gt;Since I’m writing C++ I want to make sure the compiler doesn’t mangle the names so I declare them as extern “C”. As you can see, the export also turns on the visibility of the symbol which is hidden by default in the Makefile.&lt;/p&gt;&lt;p&gt;I’m running this with node.js which has had WebAssembly support since at least version 8 that I have on my Linux box. The idea is to do some of the more computationally expensive tasks in my node server using wasm. Here’s my js file.&lt;/p&gt;&lt;pre&gt;const fs = require(‘fs’)&lt;/pre&gt;&lt;pre&gt;async function run() {&lt;br /&gt;  const buf = fs.readFileSync(‘./fib.wasm’)&lt;br /&gt;  return await WebAssembly.instantiate(buf, {&lt;br /&gt;    ‘env’: {&lt;br /&gt;      ‘log’: function(i) { console.log(`log: ${i}`) }&lt;br /&gt;    }&lt;br /&gt;  })&lt;br /&gt;}&lt;/pre&gt;&lt;pre&gt;run().then(res =&amp;gt; {&lt;br /&gt;  const { fib } = res.instance.exports&lt;br /&gt;  console.log(fib(10))&lt;br /&gt;})&lt;/pre&gt;&lt;p&gt;It simply loads up the wasm file and instantiates it passing in the log function. When that’s complete, I extract my fib function from the exports and run it. You should see the output of the log function (more times that I was expecting at least), then the result, 55.&lt;/p&gt;&lt;p&gt;As with most things C++, the magic is actually in the Makefile.&lt;/p&gt;&lt;pre&gt;CXX = $(HOME)/wasm/clang-8/bin/clang&lt;br /&gt;CXXFLAGS = \&lt;br /&gt;    -Wall \&lt;br /&gt;    --target=wasm32 \&lt;br /&gt;    -Os \&lt;br /&gt;    -flto \&lt;br /&gt;    -nostdlib \&lt;br /&gt;    -fvisibility=hidden \&lt;br /&gt;    -std=c++14 \&lt;br /&gt;    -ffunction-sections \&lt;br /&gt;    -fdata-sections&lt;/pre&gt;&lt;pre&gt;LD = $(HOME)/wasm/clang-8/bin/wasm-ld&lt;br /&gt;LDFLAGS = \&lt;br /&gt;    --no-entry \&lt;br /&gt;    --strip-all \&lt;br /&gt;    --export-dynamic \&lt;br /&gt;    --initial-memory=131072 \&lt;br /&gt;    -error-limit=0 \&lt;br /&gt;    --lto-O3 \&lt;br /&gt;    -O3 \&lt;br /&gt;    --gc-sections&lt;/pre&gt;&lt;pre&gt;fib.wasm: fib.o&lt;br /&gt;    $(LD) $(LDFLAGS) -o $@ $&amp;lt;&lt;/pre&gt;&lt;p&gt;There’s lots of magic flags here and I have to thank the author of the example I linked above for getting me started. I’ll have to play with them to see what’s actually necessary. The key here is that it isn’t Emscripten but straight clang 8 that I downloaded from llvm.org. There’s no standard library, so don’t go and try and do a printf. You’re a bit on your own for now.&lt;/p&gt;&lt;p&gt;But that’s somewhat a conclusion I reached. Emscripten allows C++ developer to easily port their apps to run on the web. It doesn’t make the C++ developer think like a Web developer. What would be interesting to me is what it would look like if you weren’t handed those fancy libraries you get with Emscripten and really just wanted to build a web app, like a game, using the standard JavaScript APIs you get with node or the browser. I think you’d end up writing programs like an Arduino developer where you don’t have printf either…&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=928df1484430&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 24 May 2019 20:39:43 +0000</pubDate>
</item>
<item>
	<title>Red Hat Developers: Apache Camel development on Eclipse Che 7</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=597287</guid>
	<link>https://developers.redhat.com/blog/2019/05/21/apache-camel-development-on-eclipse-che-7/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://camel.apache.org&quot;&gt;Apache Camel&lt;/a&gt; development is improving on &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; 7 compared to Che 6. On Che 6, it is limited to XML DSL and without classical XSD-based XML support. With Che 7, Camel Java DSL is available and XSD-based XML support is working nicely with the Camel XML DSL support. Please note that Che 7 is still in beta.&lt;br /&gt;
&lt;span id=&quot;more-597287&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Camel language features available&lt;/h2&gt;
&lt;p&gt;Inside the same editor, there is access to classic XML tooling and Camel XML DSL support.&lt;/p&gt;
&lt;p&gt;Classic XML tooling completion based on XSD:&lt;br /&gt;
&lt;img alt=&quot;XMl tag completion based on Camel xsd&quot; class=&quot; aligncenter size-large  wp-image-597457 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionXMLXSD-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel XML DSL tooling completion:&lt;br /&gt;
&lt;img alt=&quot;Camel URI completion with Camel XML DSL&quot; class=&quot;  aligncenter size-large   wp-image-597467 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/completionXMLCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Classic XML tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Validation based on Camel XML xsd&quot; class=&quot;  aligncenter size-large   wp-image-597487 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationXMlXSD-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel XML DSL tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Camel XML DSL validation of Camel URI&quot; class=&quot; aligncenter size-large  wp-image-597507 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationXMLCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Inside the same editor, there is access to classic Java tooling and Camel Java DSL support.&lt;/p&gt;
&lt;p&gt;Classic Java tooling completion:&lt;br /&gt;
&lt;img alt=&quot;Classic Java completion&quot; class=&quot; aligncenter size-large  wp-image-597527 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionJavaClassic-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel Java DSL completion:&lt;br /&gt;
&lt;img alt=&quot;Camel URI completion with Camel Java DSL&quot; class=&quot; aligncenter size-large  wp-image-597537 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/compeltionJavaCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Classic Java tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Classic Java validation&quot; class=&quot; aligncenter size-large  wp-image-597557 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationJavaClassic-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Camel Java DSL tooling validation:&lt;br /&gt;
&lt;img alt=&quot;Camel URI validation with Java DSL&quot; class=&quot; aligncenter size-large  wp-image-597567 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/validationJavaCamel-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How to configure on che.openshift.io&lt;/h2&gt;
&lt;p&gt;Currently, some advanced steps are needed to have all extensions working together on a resource-limited Che environment, which is the default for che.openshift.io. Let’s see how to activate it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://che.openshift.io&quot;&gt;che.openshift.io&lt;/a&gt; (you will have to register if you’ve not done so already).&lt;/li&gt;
&lt;li&gt;Create a workspace based on Che 7.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Create Che 7 Workspace&quot; class=&quot; aligncenter size-large  wp-image-597297 &quot; height=&quot;347&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/createWorkspaceChe7-1024x555.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wait that workspace creation is finished.&lt;/li&gt;
&lt;li&gt;Import the Camel/Fuse project that you want.&lt;/li&gt;
&lt;li&gt;Go back to workspace configuration by using the top-left yellow arrow and clicking on Workspaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Go to workspace config&quot; class=&quot; aligncenter size-large  wp-image-597597 &quot; height=&quot;418&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/GoToSWorkspaceConfig-1024x668.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on the running workspace.&lt;/li&gt;
&lt;li&gt;Click stop at the top right.&lt;/li&gt;
&lt;li&gt;Go to Plugins tab.&lt;/li&gt;
&lt;li&gt;Enable Language Support for Apache Camel, Language Support for Java and XML.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&quot;Enable Camel, Java and XML plugins&quot; class=&quot; aligncenter size-large  wp-image-597807 &quot; height=&quot;347&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/enablePlugins-2-1024x555.png&quot; width=&quot;640&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to config tab.&lt;/li&gt;
&lt;li&gt;Search for “attributes”, add memory limits for each of the plugins, you should end with something like:
&lt;pre&gt;&quot;attributes&quot;: {
&quot;sidecar.redhat/java.memory_limit&quot;: &quot;1280Mi&quot;,
&quot;sidecar.camel-tooling/vscode-apache-camel.memory_limit&quot;: &quot;128Mi&quot;,
&quot;sidecar.redhat/vscode-xml.memory_limit&quot;: &quot;128Mi&quot;,
&quot;sidecar.eclipse/che-theia.memory_limit&quot;: &quot;512Mi&quot;,
&quot;editor&quot;: &quot;eclipse/che-theia/next&quot;,
&quot;plugins&quot;: &quot;eclipse/che-machine-exec-plugin/0.0.1,redhat/java/0.43.0,camel-tooling/vscode-apache-camel/0.0.14,redhat/vscode-xml/0.5.1&quot;
}&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Click on Open button on top right.&lt;/li&gt;
&lt;li&gt;Open a Java file and wait that the Java Language Server has started (it can take several minutes).&lt;/li&gt;
&lt;li&gt;Enjoy!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;What’s next?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;As you’ve noticed, the installation is currently a bit cumbersome as it requires you to touch the YAML config file. Don’t worry; there is work in progress to improve the installation experience, such as providing a &lt;a href=&quot;https://github.com/eclipse/che/issues/13182&quot;&gt;specific Camel stack&lt;/a&gt;. This will allow you to create a workspace preconfigured, which means doing only the first three steps instead of the 11 steps of the configuration. Several other features are in the works by incorporating existing VS Code extensions inside Che 7. Stay tuned.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;linkname=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F21%2Fapache-camel-development-on-eclipse-che-7%2F&amp;amp;title=Apache%20Camel%20development%20on%20Eclipse%20Che%207&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2019/05/21/apache-camel-development-on-eclipse-che-7/&quot; rel=&quot;nofollow&quot;&gt;Apache Camel development on Eclipse Che 7&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 May 2019 07:00:32 +0000</pubDate>
</item>
<item>
	<title>BJ Hargrave: I am an Incrementalist: Jakarta EE and package renaming</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-18834385.post-1387939004116518108</guid>
	<link>https://blog.hargrave.io/2019/05/jakarta-ee-and-package-renaming.html</link>
	<description>&lt;br /&gt;&lt;div class=&quot;MsoNormal&quot;&gt;Eclipse Jakarta EE has been placed in the position that it may not evolve the enterprise APIs under their existing package names. That is, the package names starting with &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt;. See &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/update-jakarta-ee-rights-java-trademarks&quot;&gt;Update on Jakarta EE Rights to Java Trademarks&lt;/a&gt;for the background on how we arrived at this state.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;So this means that after Jakarta EE 8 (which is API identical to Java EE 8 from which it descends), whenever an API in Jakarta EE is to be updated for a new specification version, the package names used by the API must be renamed away from &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt;. (Note: some other things will also need to be renamed such as system property names, property file names, and XML schema namespaces if those things start with &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt;. For example, the property file &lt;span&gt;META-INF/services/javax.persistence.PersistenceProvider&lt;/span&gt;.) But this also means that if an API does not need to be changed, then it is free to remain in its current package names. Only a change to the signature of a package, that is, adding or removing types in the package or adding or removing members in the existing types in the package, will require a name change to the package. &lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;There has been much discussion on the Jakarta EE mail lists and in blogs about what to do given the above constraint and David Blevins has kindly summed up the two main choices being discussed by the Jakarta EE Specification Committee: &lt;a href=&quot;https://www.eclipse.org/lists/jakartaee-platform-dev/msg00029.html&quot;&gt;https://www.eclipse.org/lists/jakartaee-platform-dev/msg00029.html&lt;/a&gt;.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;In a nutshell, the two main choices are (1) “Big Bang” and (2) Incremental. Big Bang says: Let’s rename all the packages in all the Jakarta EE specifications all at once for the Jakarta EE release after Jakarta EE 8. Incremental says: Let’s rename packages only when necessary such as when, in the normal course of specification innovation, a Jakarta EE specification project wants to update its API.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;I would like to argue that Jakarta EE should chose the Incremental option.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;Big Bang has no technical value and large, up-front community costs.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;The names of the packages are of little technical value in and of themselves. They just need to be unique and descriptive to programmers. In source code, developers almost never see the package names. They are generally in &lt;span&gt;import&lt;/span&gt; statements at the top of the source file and most IDEs kindly collapse the view of the import statements so they are not “in the way” of the developer. So, a developer will generally not really know or care if the Jakarta EE API being used in the source code is a mix of package names starting with &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt;, unchanged since Jakarta EE 8, and updated API with package names starting with &lt;span&gt;jakarta&lt;/span&gt;. That is, there is little mental cost to such a mixture. The Jakarta EE 8 API are already spread across many, many package names and developers can easily deal with this. That some will start with &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt; and some with &lt;span&gt;jakarta&lt;/span&gt; is largely irrelevant to a developer. The developer mostly works with type and member names which are not subject to the package rename problem.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;But once source code is compiled into class files, packaged into artifacts, and distributed to repositories, the package names are baked in to the artifacts and play an important role in interoperation between artifacts: binary compatibility. Modern Java applications generally include many 3&lt;sup&gt;rd&lt;/sup&gt;party open source artifacts from public repositories such as Maven Central and there are many such artifacts in Maven Central which use the current package names. If Jakarta EE 9 were to rename all packages, then the corpus of existing artifacts is no longer usable in Jakarta EE 9 and later. At least not without some technical “magic” in builds, deployments, and/or runtimes to attempt to rename package references on-the-fly. Such magic may be incomplete and will break jar signatures and will complicate builds and tool chains. It will not be transparent.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;Jakarta EE must minimize the inflection point/blast radius on the Java community caused by the undesired constraint to rename packages if they are changed. The larger the inflection point, the more reason you give to developers to consider alternatives to Jakarta EE and to Java in general. The Incremental approach minimizes the inflection point providing an evolutionary approach to the package naming changes rather than the revolutionary approach of the Big Bang.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;Some Jakarta EE specification may never be updated. They have long been stable in the Java EE world and will likely remain so in Jakarta EE. So why rename their packages? The Big Bang proposal even recognizes this by indicating that some specification will be “frozen” in their current package names. But, of course, there is the possibility that one day, Jakarta EE will want to update a frozen specification. And then the package names will need to be changed. The Incremental approach takes this approach to all Jakarta EE specifications. Only rename packages when absolutely necessary to minimize the impact on the Java community.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;Renaming packages incrementally, as needed, does not reduce the freedom of action for Jakarta EE to innovate. It is just a necessary part of the first innovation of a Jakarta EE specification.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;A Big Bang approach does not remove the need to run existing applications on earlier platform versions.&lt;span&gt;  &lt;/span&gt;It increases the burden on customers since they must update all parts of their application for the complete package renaming when the need to access a new innovation in a single updated Jakarta EE specification when none of the other Jakarta EE specifications they use have any new innovations. Just package renames for no technical reason.&lt;span&gt;  &lt;/span&gt;It also puts a large burden on all application server vendors. Rather than having to update parts of their implementations to support the package name changes of a Jakarta EE specification when the specification is updated for some new innovation, they must spend a lot of resources to support both old and new packages name for the implementations of all Jakarta EE specifications.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;There are some arguments in favor of a Big Bang approach. It “gets the job done” once and for all and for new specifications and implementations the old &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt; package names will fade from collective memories. In addition, the requirement to use a certified Java SE implementation licensed by Oracle to claim compliance with Eclipse Jakarta EE evaporates once there are no longer any &lt;span&gt;java&lt;/span&gt; or &lt;span&gt;javax&lt;/span&gt; package names in a Jakarta EE specification. However, these arguments do not seem sufficient motivation to disrupt the ability of all existing applications to run on a future Jakarta EE 9 platform.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;In general, lazy evaluation is a good strategy in programming. Don’t do a thing until the thing needs to be done. We should apply that strategy in Jakarta EE to package renaming and take the Incremental approach. Finally, I am reminded of Æsop’s fable, &lt;a href=&quot;http://www.read.gov/aesop/025.html&quot;&gt;The Tortoise &amp;amp; the Hare&lt;/a&gt;. “The race is not always to the swift.”&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 17 May 2019 17:11:18 +0000</pubDate>
	<author>noreply@blogger.com (BJ Hargrave)</author>
</item>
<item>
	<title>Red Hat Developers: Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=592227</guid>
	<link>https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/</link>
	<description>&lt;p&gt;You’ve probably heard about &lt;a href=&quot;https://quarkus.io&quot;&gt;Quarkus&lt;/a&gt;, the Supersonic Subatomic Java framework tailored for Kubernetes and containers. In this article, I will show how easy is it to create and set up a Quarkus project in an Eclipse IDE based environment.&lt;span id=&quot;more-592227&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Please note that even if we use &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio&lt;/a&gt; in this article, any Eclipse IDE can be used assuming it has the tooling for Java-based development. So, you can also use the &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-java-developers&quot;&gt;Eclipse IDE for Java Developers&lt;/a&gt; package or the &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-enterprise-java-developers&quot;&gt;Eclipse IDE for Enterprise Java Developers&lt;/a&gt; package.&lt;/p&gt;
&lt;h2&gt;Install IDE&lt;/h2&gt;
&lt;p&gt;If you don’t already have an IDE on your workstation, you must download and install one. You can use &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio&lt;/a&gt; or one of the Java packages from the &lt;a href=&quot;https://eclipse.org/downloads&quot;&gt;Eclipse Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once the IDE is installed, launch it and open a new workspace or reuse an existing workspace based on your preferences.&lt;/p&gt;
&lt;h2&gt;Create your first Quarkus project&lt;/h2&gt;
&lt;p&gt;Although it is possible from within the Eclipse-based IDE to create a Maven-based project using the new Maven project wizard, we will not use this path. It is based on the concept of Maven archetypes, and the Quarkus project does not provide a Maven archetype to bootstrap a new project but rather provides a Maven plugin to create a new project.&lt;/p&gt;
&lt;p&gt;So, we will follow the &lt;a href=&quot;https://quarkus.io/guides/getting-started-guide&quot;&gt;Quarkus Getting Started Guide&lt;/a&gt; recommendation on how to bootstrap a Quarkus project.&lt;/p&gt;
&lt;p&gt;Using a terminal, go into a folder where you want your first Quarkus project to be stored and type the following command:&lt;/p&gt;
&lt;pre&gt;mvn io.quarkus:quarkus-maven-plugin:create&lt;/pre&gt;
&lt;p&gt;You will be asked for the &lt;em&gt;groupId&lt;/em&gt; for your project:&lt;/p&gt;
&lt;pre&gt;Set the project groupId [org.acme.quarkus.sample]:&lt;/pre&gt;
&lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt;
&lt;p&gt;You will be asked for the &lt;em&gt;artifactId&lt;/em&gt; for your project:&lt;/p&gt;
&lt;pre&gt;Set the project artifactId [my-quarkus-project]:&lt;/pre&gt;
&lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt;
&lt;p&gt;You will be asked for the &lt;em&gt;version&lt;/em&gt; for your project:&lt;/p&gt;
&lt;pre&gt;Set the project version [1.0-SNAPSHOT]:&lt;/pre&gt;
&lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt;
&lt;p&gt;Then, you will be asked if you want to add a REST endpoint in your application.&lt;/p&gt;
&lt;pre&gt;Do you want to create a REST resource? (y/n) [no]:&lt;/pre&gt;
&lt;p&gt;Enter &lt;em&gt;yes&lt;/em&gt; and press the &lt;em&gt;ENTER&lt;/em&gt; key.&lt;/p&gt;
&lt;p&gt;Then, you will be asked for the class name of the REST endpoint.&lt;/p&gt;
&lt;pre&gt;Set the resource classname [org.acme.quarkus.sample.HelloResource]:&lt;/pre&gt;
&lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt;
&lt;p&gt;Then, you will be asked for the path of the REST endpoint.&lt;/p&gt;
&lt;pre&gt;Set the resource path [/hello]:&lt;/pre&gt;
&lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt;
&lt;p&gt;At this point, your first Quarkus project has been created on your local workstation, let’s import it into our IDE.&lt;/p&gt;
&lt;h2&gt;Import the first Quarkus project into IDE&lt;/h2&gt;
&lt;p&gt;From the IDE main window, open the &lt;em&gt;File -&amp;gt; Import -&amp;gt; Existing Maven Projects&lt;/em&gt; menu:&lt;/p&gt;
&lt;p id=&quot;aQHfHsU&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; alignnone size-full  wp-image-592717 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8104b27151.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Using the &lt;em&gt;Browse&lt;/em&gt; button, select the folder where your first Quarkus project has been generated:&lt;/p&gt;
&lt;p id=&quot;PcbCBXZ&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-592727 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc810aa69b37.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Press the &lt;em&gt;Finish&lt;/em&gt; button, you should now see a new project in the &lt;em&gt;Project Explorer&lt;/em&gt; window (please note that it may take a while, as Maven will download some Quarkus dependencies if this is the first time you have built a Quarkus project on your workstation):&lt;/p&gt;
&lt;p id=&quot;rTjyhnP&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-592737 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc.png&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Launch your first Quarkus application&lt;/h2&gt;
&lt;p&gt;From the &lt;em&gt;Project Explorer&lt;/em&gt; window, select your Quarkus project (&lt;em&gt;my-quarkus-project&lt;/em&gt;), right-click the &lt;em&gt;Run As -&amp;gt; Maven build…&lt;/em&gt; menu:&lt;/p&gt;
&lt;p id=&quot;UdZFNqI&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-592747 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81d1d8b30e.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In the Goals &lt;em&gt;field&lt;/em&gt;, enter &lt;code&gt;compile quarkus:dev&lt;/code&gt;:&lt;/p&gt;
&lt;p id=&quot;MpaqHrL&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-592767 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8473a0359e.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Press the &lt;em&gt;Run&lt;/em&gt; button. Your Quarkus application will start, and you should see the following output in the &lt;em&gt;Console&lt;/em&gt; window:&lt;/p&gt;
&lt;p id=&quot;XbMcZVA&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-592777 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At this point, your Quarkus application is started, and you should be able to access it from the following URL: &lt;a href=&quot;http://localhost:8080/hello&quot;&gt;http://localhost:8080/hello&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Debug your first Quarkus application&lt;/h2&gt;
&lt;p&gt;Although Quarkus has nice hot reload capabilities for developers, debugging is a key tool. Let’s see how to set up debugging on our Quarkus application and then start a debugging session.&lt;/p&gt;
&lt;p&gt;As you have probably noticed, we started the Quarkus application with the dev mode, which means that any changes in the application source code will be hot reloaded the next time your Quarkus application will process a request.&lt;/p&gt;
&lt;p&gt;Another nice thing about the dev feature from Quarkus is that the Java virtual machine that is running the Quarkus application has been launched in debug mode. So, to debug our Quarkus application, we only need to connect a debugger.&lt;/p&gt;
&lt;p&gt;If you’re familiar with the Java development tools in Eclipse, you know that you can easily launch a Java debugger against a running JVM that has been started in debug mode, assuming you know the debug port the JVM is listening on.&lt;/p&gt;
&lt;p&gt;If you looked at your Quarkus application output, you noticed the following message:&lt;/p&gt;
&lt;p id=&quot;dapuJUN&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-593517 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0a0e4bc16.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This is the message generated by the JVM when running in debug mode, and it gives us the information that the port used is 5005.&lt;/p&gt;
&lt;p&gt;Now you can create a remote Java debugger. Even better, because the message has been recognized by the Eclipse Java development tools, you just need to click on the list associated with the message and Eclipse will magically create a remote Java debugger and connect it to your Quarkus application!&lt;/p&gt;
&lt;p&gt;After clicking on the hyperlink, you will see nothing because the remote Java debugger has been launched in the background and it connected to your Quarkus application. However, you can check it if you switch to the &lt;em&gt;Debug&lt;/em&gt; perspective. To do that, open the &lt;em&gt;Window -&amp;gt; Perspective -&amp;gt; Open Perspective -&amp;gt; Debug&lt;/em&gt; menu and select the &lt;em&gt;Debug&lt;/em&gt; view. You should see something similar to:&lt;/p&gt;
&lt;p id=&quot;vuJNtvf&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  alignnone size-full   wp-image-593527 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0be388909.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the debugger is connected to the Quarkus application. That means you can add breakpoints in your application source code and, next time you send a request, the Quarkus JVM will stop and the Eclipse IDE will step to the code in which you set a breakpoint.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;amp;title=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/&quot; rel=&quot;nofollow&quot;&gt;Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 09 May 2019 10:45:42 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Eclipse Contributor Agreement 3.0</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5567</guid>
	<link>https://waynebeaton.wordpress.com/2019/05/07/eclipse-contributor-agreement-3-0/</link>
	<description>&lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/legal/ECA.php&quot;&gt;Eclipse Contributor Agreement&lt;/a&gt; (ECA) is an agreement made by contributors certifying the work they are contributing was authored by them and/or they have the legal authority to contribute as open source under the terms of the project license.&lt;/p&gt;



&lt;p&gt;The Eclipse Foundation’s IP Team has been working hard to get the various agreements that we maintain between the Eclipse Foundation and community updated. Our first milestone targeted the ECA, and we’re happy to report that a very significant number of our community members have successfully updated theirs. Today, we retired all of the rest of them. Specifically, we’ve revoked all ECAs that predate the ECA version 3.0.&lt;/p&gt;



&lt;p&gt;We’re confident that we’ve managed to connect and update the ECA for everybody who still wants to be a contributor, so there should be no interruption for anybody who is actively contributing. If we missed you, you’ll be asked to sign the new ECA the next time you try to contribute. Or you can just &lt;a href=&quot;https://accounts.eclipse.org/user/eca&quot;&gt;re-sign it now&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;We’ve made some changes with the new agreements that make contributing easier, (but explaining harder). Committers who have signed the &lt;a href=&quot;https://www.eclipse.org/legal/committer_process/EclipseIndividualCommitterAgreementFinal.pdf&quot;&gt;Individual Committer Agreement&lt;/a&gt; (ICA) version 4.0 or work for a company that has signed the &lt;a href=&quot;https://www.eclipse.org/legal/committer_process/EclipseMemberCommitterAgreementFinal.pdf&quot;&gt;Member Committer and Contributor Agreement&lt;/a&gt; do not require an ECA.&lt;/p&gt;



&lt;p&gt;Contact emo_records@eclipse.org if you’re having trouble with an agreement.&lt;/p&gt;</description>
	<pubDate>Tue, 07 May 2019 21:03:58 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: Ways your company can support and sustain open source</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4282</guid>
	<link>https://www.aniszczyk.org/2019/04/30/ways-your-company-can-support-and-sustain-open-source/</link>
	<description>&lt;p&gt;&lt;em&gt;Note: this article was original posted on &lt;/em&gt;&lt;a href=&quot;https://opensource.com/article/19/4/ways-support-sustain-open-source&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;https://opensource.com/article/19/4/ways-support-sustain-open-source&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To make sure open source continues to thrive, we all need to find ways to sustain the communities and projects we depend on&lt;/p&gt;
&lt;p&gt;The success of open source continues to grow; surveys show that the &lt;a href=&quot;https://www.slideshare.net/blackducksoftware/2016-future-of-open-source-survey-results&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;majority of companies&lt;/a&gt;use some form of open source, &lt;a href=&quot;https://www.redhat.com/cms/managed-files/rh-enterprise-open-source-ebook-f16984bf-201904-en_0.pdf&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;99% of enterprises see open source as important&lt;/a&gt;, and &lt;a href=&quot;https://insights.stackoverflow.com/survey/2018#developer-profile-_-contributing-to-open-source&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;almost half of developers&lt;/a&gt; are contributing back. It’s important to note that companies aren’t contributing to open source for purely altruistic reasons. Recent &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3091831&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;research&lt;/a&gt; from Harvard shows that open source-contributing companies capture up to 100% more productive value from open source than companies that do not contribute back. Another research &lt;a href=&quot;https://hbswk.hbs.edu/item/government-technology-policy-social-value-and-national-competitiveness&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;study&lt;/a&gt; concluded countries adopting modern open source practices saw:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“a 0.6%–5.4% yearly increase in companies that use OSS, a 9%–18% yearly increase in the number of IT-related startups, a 6.6%–14% yearly increase in the number of individuals employed in IT related jobs, and a 5%–16% yearly decrease in software-related patents. All of these outcomes help to increase productivity and competitiveness at the national level. In aggregate, these results show that changes in government technology policy that favor OSS can have a positive impact on both global social value and domestic national competitiveness.”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the end, there are many ways for a company or organization to sustain open source. It could be as simple as training your organization to contribute to open source projects you depend on or hiring engineers to work on open source projects. Here are eight ways your organization can contribute back to open source, based on examples in the industry.&lt;/p&gt;
&lt;h2&gt;Hire open source maintainers to work on open source&lt;/h2&gt;
&lt;p&gt;Companies with strategies to leverage open source often find the highest returns from hiring a maintainer of the projects they depend the most on. It’s no surprise if you look at the &lt;a href=&quot;https://www.linuxfoundation.org/2017-linux-kernel-report-landing-page/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Who Writes the Linux Kernel report&lt;/a&gt; that the top contributors are all employed by companies like ARM, Google, Facebook, Intel, Red Hat, Samsung, and more.&lt;/p&gt;
&lt;p&gt;Having a maintainer (full time or part time) on your staff can help your organization learn how to work within the project community and enable prioritization of upstream contributions based on understanding of what the community is focused on. Hiring the maintainers also means that the project will have people with enough time to focus on the details and the rigor that’s needed for a project to be useful; think security reviews, bug cleanup, release management, and more. A more predictable and reliable upstream project can benefit many in your organization while also improving the overall project community. As a bonus, maintainers can also become advocates for your organization and help with recruiting too!&lt;/p&gt;
&lt;h2&gt;Develop an open source award program or peer bonus fund&lt;/h2&gt;
&lt;p&gt;It is common for companies to have internal employee recognition programs that recognize individuals who go above and beyond. As an example, Red Hat has a &lt;a href=&quot;https://opensource.com/article/19/2/community-awards-2019&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;community award program&lt;/a&gt; through Opensource.com. Some other companies have expanded their recognition programs to include open source contributors. For example, Google has an &lt;a href=&quot;https://opensource.google.com/docs/growing/peer-bonus/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;open source peer bonus program&lt;/a&gt; that recognizes external people who have made exceptional contributions to open source.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Congratulations to our Open Source Peer Bonus winners! &lt;a href=&quot;https://t.co/LA1MsnsSQf&quot;&gt;https://t.co/LA1MsnsSQf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Google Open Source (@GoogleOSS) &lt;a href=&quot;https://twitter.com/GoogleOSS/status/1121825826939424768?ref_src=twsrc%5Etfw&quot;&gt;April 26, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;Start an open source program office&lt;/h2&gt;
&lt;p&gt;Many internet-scale companies, including Amazon, Google, Facebook, Twitter and more, have &lt;a href=&quot;https://opensource.com/article/18/1/how-start-open-source-program-your-company&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;established formal open source programs&lt;/a&gt; (colloquially called OSPOs) within their organizations to manage open source strategy along with the consumption and contribution of open source.&lt;/p&gt;
&lt;p&gt;If you want to increase your contributions to open source, &lt;a href=&quot;https://github.com/todogroup/survey/tree/master/2018#companies-with-an-open-source-program-more-likely-to-contribute&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;research&lt;/a&gt; has shown that companies with formal open source programs are more likely to contribute back. If you want to learn from organizations with formal open source programs, I recommend you read the &lt;a href=&quot;https://todogroup.org/guides/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;TODO Group Open Source Program Guides&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Launch an open source fund&lt;/h2&gt;
&lt;p&gt;Some organizations contribute fiscally to the open source projects that are important to them. For example, Comcast’s &lt;a href=&quot;https://innovationfund.comcast.com/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Open Source Development Grants&lt;/a&gt; “are intended to fund new or continued development of open source software in areas of interest to Comcast or of benefit to the Internet and broadband industries.” This isn’t just for big companies; small companies have open source funds, too. For example, CarGurus launched an &lt;a href=&quot;https://www.cargurus.com/press/cargurus_engineers_launch_open_source_fund.html&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;open source fund&lt;/a&gt; and &lt;a href=&quot;https://blog.geteventbot.com/2019/01/06/how-we-support-open-source-software.html&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Eventbot&lt;/a&gt; is supporting open source with a small percentage of its company revenue. Another interesting approach is what Indeed has done by &lt;a href=&quot;https://fosdem.org/2019/schedule/event/community_sustaining_foss_projects_democratizing_sponsorship/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;democratizing the open source funding process&lt;/a&gt; with its employees.&lt;/p&gt;
&lt;h2&gt;Contribute a portion of your company equity to open source&lt;/h2&gt;
&lt;p&gt;Consider donating a portion of your organization’s equity to an open source project you depend on. For example, Citus Data recently &lt;a href=&quot;https://www.citusdata.com/blog/2018/10/24/why-citus-data-is-donating-1-percent-equity/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;donated one percent of its equity&lt;/a&gt; to the PostgreSQL community. This worked out nicely; Citus Data was acquired by Microsoft recently, so the PostgreSQL community will benefit from that acquisition, too.&lt;/p&gt;
&lt;h2&gt;Support and join open source foundations&lt;/h2&gt;
&lt;p&gt;There are many open source foundations that house open source projects your organization depends on, including the &lt;a href=&quot;https://apache.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Apache Foundation&lt;/a&gt;, &lt;a href=&quot;https://eclipse.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Eclipse Foundation&lt;/a&gt;, &lt;a href=&quot;https://cncf.io/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Cloud Native Computing Foundation&lt;/a&gt; (home of Kubernetes), &lt;a href=&quot;https://graphql.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GraphQL Foundation&lt;/a&gt;, &lt;a href=&quot;https://letsencrypt.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Let’s Encrypt&lt;/a&gt;, &lt;a href=&quot;https://www.linuxfoundation.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Linux Foundation&lt;/a&gt;, &lt;a href=&quot;https://opensource.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Open Source Initiative&lt;/a&gt; (OSI), &lt;a href=&quot;https://openstack.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;OpenStack Foundation&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;NodeJS Foundation&lt;/a&gt;, and more.&lt;/p&gt;
&lt;p&gt;https://twitter.com/CloudNativeFdn/status/1092544807900110848&lt;/p&gt;
&lt;h2&gt;Fund and participate in open source internships or retreats&lt;/h2&gt;
&lt;p&gt;There are many open source internship programs that you can participate in and help fund. &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Google Summer of Code&lt;/a&gt; (GSoC) is the largest, and it requires mentorship from employees who work on open source projects as part of the program. Or you can sponsor internships for underrepresented minorities in open source through &lt;a href=&quot;https://www.outreachy.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Outreachy&lt;/a&gt; and &lt;a href=&quot;https://communitybridge.org/faq/#people&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;CommunityBridge&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Introducing CommunityBridge, a platform to accelerate innovation, sustainability, funding, security, mentoring, and diversity in open source projects. Join the private early access program: &lt;a href=&quot;https://t.co/22eGhqNbCt&quot;&gt;https://t.co/22eGhqNbCt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— The Linux Foundation (@linuxfoundation) &lt;a href=&quot;https://twitter.com/linuxfoundation/status/1105581918278635521?ref_src=twsrc%5Etfw&quot;&gt;March 12, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Another approach is to host an open source retreat at your company. For example, &lt;a href=&quot;https://stripe.com/blog/stripe-open-source-retreat&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Stripe hosts open source retreats&lt;/a&gt; to contribute to open source projects it depends on.&lt;/p&gt;
&lt;h2&gt;Include open source in your corporate philanthropy initiatives&lt;/h2&gt;
&lt;p&gt;If your organization has a corporate sustainability or philanthropic arm, consider working with that team to include open source as a part of its work. For example, &lt;a href=&quot;https://events.linuxfoundation.org/wp-content/uploads/2017/12/Software-Philanthropy-for-Everyone-Kevin-P.-Fleming-Bloomberg.pdf&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Bloomberg has a software philanthropy budget&lt;/a&gt; for projects it depends on, from Git to Eclipse to Python and more. In the future, I hope to see more &lt;a href=&quot;https://en.wikipedia.org/wiki/Corporate_sustainability&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;corporate sustainability&lt;/a&gt; and philanthropy efforts—like &lt;a href=&quot;https://pledge1percent.org/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Pledge 1%&lt;/a&gt;—that focus on funding critical open source infrastructure.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In conclusion, giving back to open source is not only the right thing to do, according to research, it’s also good for your business. To make sure open source continues to thrive and is sustainable in the long run, we all need to ensure that companies find ways to sustain the open source communities they depend on.&lt;/p&gt;</description>
	<pubDate>Tue, 30 Apr 2019 13:49:22 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Specification Scope in Jakarta EE</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5558</guid>
	<link>https://waynebeaton.wordpress.com/2019/04/08/specification-scope-in-jakarta-ee/</link>
	<description>&lt;p&gt;With the &lt;a href=&quot;https://www.eclipse.org/projects/efsp&quot;&gt;Eclipse Foundation Specification Process&lt;/a&gt; (EFSP) a single open source specification project has a dedicated project team of committers to create and maintain one or more specifications. The cycle of creation and maintenance extends across multiple versions of the specification, and so while individual members may come and go, the team remains and it is that team that is responsible for the every version of that specification that is created.&lt;/p&gt;
&lt;p&gt;The first step in managing how intellectual property rights flow through a specification is to define the range of the work encompassed by the specification. Per the Eclipse &lt;a href=&quot;https://www.eclipse.org/org/documents/Eclipse_IP_Policy.pdf&quot;&gt;Intellectual Property Policy&lt;/a&gt;, this range of work (referred to as the &lt;em&gt;scope&lt;/em&gt;) needs to be well-defined and captured. Once defined, the scope is effectively locked down (changes to the scope are possible but rare, and must be carefully managed; the scope of a specification can be tweaked and changed, but doing so requires approval from the &lt;a href=&quot;https://jakarta.ee/&quot;&gt;Jakarta EE Working Group’s&lt;/a&gt; &lt;a href=&quot;https://www.eclipse.org/projects/efsp/#efsp-committee&quot;&gt;Specification Committee&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Regarding scope, the EFSP states:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Among other things, the Scope of a Specification Project is intended to inform companies and individuals so they can determine whether or not to contribute to the Specification. Since a change in Scope may change the nature of the contribution to the project, a change to a Specification Project’s Scope must be approved by a Super-majority of the Specification Committee.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As a general rule, a scope statement should not be too precise. Rather, it should describe the intention of the specification in broad terms. Think of the scope statement as an executive summary or “elevator pitch”.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Elevator pitch: You have fifteen seconds before the elevator doors open on your floor; tell me about the problem your specification addresses.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;The scope statement must answer the question: what does an implementation of this specification do? &lt;/span&gt;The scope statement must be aspirational rather than attempt to capture any particular state at any particular point-in-time. A scope statement must not focus on the work planned for any particular version of the specification, but rather, define the problem space that the specification is intended to address.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Jakarta Batch provides describes a means for executing and managing batch processes in Jakarta EE applications.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Jakarta Message Service describes a means for Jakarta EE applications to create, send, and receive messages via loosely coupled, reliable asynchronous communication services.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For the scope statement, you can assume that the reader has a rudimentary understanding of the field. It’s reasonable, for example, to expect the reader to understand what “batch processing” means.&lt;/p&gt;
&lt;p&gt;I should note that the two examples presented above are just examples of form. I’m pretty sure that they make sense, but defer to the project teams to work with their communities to sort out the final form.&lt;/p&gt;
&lt;p&gt;The scope is “sticky” for the entire lifetime of the specification: it spans versions. The &lt;a href=&quot;https://www.eclipse.org/projects/efsp/#efsp-plans&quot;&gt;plan&lt;/a&gt; for any particular &lt;a href=&quot;https://www.eclipse.org/projects/efsp/#efsp-version-lifecycle&quot;&gt;development cycle&lt;/a&gt; must describe work that is &lt;em&gt;in scope&lt;/em&gt;; and at the &lt;a href=&quot;https://www.eclipse.org/projects/efsp/#efsp-reviews&quot;&gt;checkpoint (progress and release) reviews&lt;/a&gt;, the project team must be prepared to demonstrate that the behavior described by the specifications (and tested by the corresponding TCK) cleanly &lt;em&gt;falls within&lt;/em&gt; the scope (note that the development life cycle of specification project is described in &lt;a href=&quot;https://waynebeaton.wordpress.com/2019/03/08/eclipse-foundation-specification-process-step-by-step/&quot;&gt;Eclipse Foundation Specification Process Step-by-Step&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In addition the &lt;em&gt;specification&lt;/em&gt; scope which is required by the Eclipse Intellectual Property Policy and EFSP, the &lt;em&gt;specification project&lt;/em&gt; that owns and maintains the specification needs a &lt;em&gt;project scope&lt;/em&gt;. The project scope is, I think, pretty straightforward: a particular specification project defines and maintains a specification.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The Jakarta Batch project defines and maintains the Jakarta Batch specification and related artifacts.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Like the specification scope, the project scope should be aspirational. In this regard, the specification project is responsible for the particular specification in perpetuity. Further the related artifacts, like APIs and TCKs can be &lt;em&gt;in scope&lt;/em&gt; without actually being managed by the project &lt;em&gt;right now&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Today, for example, most of the TCKs for the Jakarta EE specifications are rolled into the &lt;a href=&quot;https://projects.eclipse.org/projects/ee4j.jakartaee-tck&quot;&gt;Jakarta EE TCK&lt;/a&gt; project. But, over time, this single monster TCK may be broken up and individual TCKs moved to corresponding specification projects. Or not. The point is that regardless of where the technical artifacts are currently maintained, they may one day be part of the specification project, so they are &lt;em&gt;in scope&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I should back up a bit and say that our intention right now is to turn the “Eclipse Project for …” projects that we have managing artifacts related to various specifications into actual specification projects. As part of this effort, we’ll add Git repositories to these projects to provide a home for the specification documents (more on this later). A handful of these proto-specification projects currently include artifacts related to multiple specifications, so we’ll have to sort out what we’re going to do about those project scope statements.&lt;/p&gt;
&lt;p&gt;We might consider, for example, changing the project scope of the &lt;a href=&quot;https://projects.eclipse.org/projects/ee4j.jakartaee-stable&quot;&gt;Jakarta EE Stable APIs&lt;/a&gt; (note that I’m guessing a future new project name) to something simple like:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Jakarta EE Stable APIs provides a home for stable (legacy) Jakarta EE specifications and related artifacts which are no longer actively developed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But, all that talk about specification projects aside, our initial focus needs to be on describing the scope of the specifications themselves. With that in mind, the EE4J PMC has created a &lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/10&quot;&gt;project board&lt;/a&gt; with issues to track this work and we’re going to ask the project teams to start working with their communities to put these scope statements together. If you have thoughts regarding the scope statements for a particular specification, please weigh in.&lt;/p&gt;
&lt;p&gt;Note that we’re in a bit of a weird state right now. As we engage in a parallel effort to rename the specifications (and corresponding specification projects), it’s not entirely clear what we should call things. You’ll notice that the issues that have been created all use the names that we guess we’re going to end up using (there’s more more information about that in &lt;a href=&quot;https://waynebeaton.wordpress.com/2019/04/04/renaming-java-ee-specifications-for-jakarta-ee/&quot;&gt;Renaming Java EE Specifications for Jakarta EE&lt;/a&gt;).&lt;/p&gt;</description>
	<pubDate>Mon, 08 Apr 2019 14:56:30 +0000</pubDate>
</item>
<item>
	<title>Eclipse Scout: Eclipse Scout 9 release: out now!</title>
	<guid isPermaLink="false">news-2675</guid>
	<link>https://www.bsi-software.com/en/scout-blog/article/eclipse-scout-9-release-out-now.html</link>
	<description>&lt;p class=&quot;lead&quot;&gt;The official Scout version 9 has been released as part of the Eclipse simultaneous release 2019-03 and is now publicly available. In this article we highlight some of the new features such as improved responsiveness, support for OpenJDK and more.&lt;/p&gt;
											
											
													
													&lt;div style=&quot;margin: 0px 15px;&quot;&gt;
													&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20294&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20294&quot;&gt;&lt;p&gt;With the Eclipse simultaneous release 2019-03, the new Scout version 9.0 has been released. As usual, it contains a lot of changes. We are happy to share some of the highlights with you. The complete release notes can be found &lt;a class=&quot;external-link-new-window&quot; href=&quot;https://eclipsescout.github.io/9.0/release-notes.html&quot; target=&quot;_blank&quot; title=&quot;Scout release notes&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20295&quot;&gt;&lt;div class=&quot;csc-header csc-header-n2&quot;&gt;&lt;h2&gt;Support for OpenJDK and newer Java Versions&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-text csc-text-c20295&quot;&gt;&lt;p&gt;Long requested and finally here: Scout now supports running on OpenJDK, and on Java versions up to 11. Note that this requires a bit of work on the side of developers; and RedHat's OpenJDK version is not compatible out of the box due to missing elliptic curves. For more details, see the Java 11 section in the &lt;strong&gt;release notes&lt;/strong&gt; and the &lt;strong&gt;migration guide&lt;/strong&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-textpic clearfix&quot; id=&quot;c20296&quot;&gt;&lt;div class=&quot;csc-header csc-header-n3&quot;&gt;&lt;h2&gt;Dark theme&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic csc-textpic-left csc-textpic-below&quot;&gt;&lt;div class=&quot;csc-textpic-text&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20296&quot;&gt;&lt;p&gt;You enjoy the dark theme of Eclipse, and want your Scout application users to enjoy the eye-friendliness of a dark theme too? Good news: A dark theme is now included with Scout and the widgets have been adjusted to blend in properly.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic-imagewrap&quot;&gt;&lt;figure class=&quot;csc-textpic-image csc-textpic-last&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/b/e/csm_Scout_9_01_Dark_Theme_7182cc4b88.png&quot; rel=&quot;lightbox[20296]&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;555&quot; src=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/b/e/csm_Scout_9_01_Dark_Theme_d6297142d1.png&quot; width=&quot;1160&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-textpic clearfix&quot; id=&quot;c20297&quot;&gt;&lt;div class=&quot;csc-header csc-header-n4&quot;&gt;&lt;h2&gt;Improved Usability&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic csc-textpic-left csc-textpic-below&quot;&gt;&lt;div class=&quot;csc-textpic-text&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20297&quot;&gt;&lt;p&gt;To improve responsiveness if the window becomes narrow, group boxes can reduce their width by moving their field labels to the top automatically. The Scrollbar handles should be easier to catch, while the trees (treeboxes, navigation) scroll to show you a better view of your data when you expand or collapse an entry. Don't forget to check out the improved options for menu bars and how you can control what happens if there isn't enough space for all the menus.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic-imagewrap&quot;&gt;&lt;figure class=&quot;csc-textpic-image csc-textpic-last&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/4/5/csm_Scout_9_02_Responsiveness_5ea2a9d01a.png&quot; rel=&quot;lightbox[20297]&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;403&quot; src=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/4/5/csm_Scout_9_02_Responsiveness_53a794ae1f.png&quot; width=&quot;1160&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-textpic clearfix&quot; id=&quot;c20298&quot;&gt;&lt;div class=&quot;csc-header csc-header-n5&quot;&gt;&lt;h2&gt;Denser layout option&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic csc-textpic-left csc-textpic-below&quot;&gt;&lt;div class=&quot;csc-textpic-text&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20298&quot;&gt;&lt;p&gt;Sometimes screen space can be scarce and the generously spaced elements of Scout will show only a small amount of data in these instances. If you need to display more data at once, you can switch to the &quot;Dense&quot; layout, which reduces the amount of whitespace, which especially increases the number of table rows that are visible at the same time. Below you can see an example from our Contacts demo application:&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic-imagewrap&quot;&gt;&lt;figure class=&quot;csc-textpic-image csc-textpic-last&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/5/3/csm_Scout_9_03_Condensed_b6c0a0f942.png&quot; rel=&quot;lightbox[20298]&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;838&quot; src=&quot;https://www.bsi-software.com/fileadmin/daten/Scout_Blog/2019/Scout_9_03_Condensed.png&quot; width=&quot;1153&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20299&quot;&gt;&lt;div class=&quot;csc-header csc-header-n6&quot;&gt;&lt;h2&gt;New widgets: Mode Selector and Popup&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-text csc-text-c20299&quot;&gt;&lt;p&gt;Many widgets got small but awesome improvements â€“ and for sure we have some new widgets too! For instances, check out the model selector and the popup widget.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-textpic clearfix&quot; id=&quot;c20300&quot;&gt;&lt;div class=&quot;csc-header csc-header-n7&quot;&gt;&lt;h3&gt;Widget 1: Mode Selector&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic csc-textpic-intext-right&quot;&gt;&lt;div class=&quot;csc-textpic-imagewrap&quot;&gt;&lt;figure class=&quot;csc-textpic-image csc-textpic-last&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;95&quot; src=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/6/1/csm_Scout_9_04_mode_selector_9f8931f083.png&quot; width=&quot;280&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic-text&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20300&quot;&gt;&lt;p&gt;Similar to a Radio Button Group, the new Mode Selector allows you to switch between predefined options, but with a &quot;regular button&quot;-like interface that is quite common on smartphones.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-textpic clearfix&quot; id=&quot;c20301&quot;&gt;&lt;div class=&quot;csc-header csc-header-n8&quot;&gt;&lt;h3&gt;Widget 2: Popup&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic csc-textpic-intext-right&quot;&gt;&lt;div class=&quot;csc-textpic-imagewrap&quot;&gt;&lt;figure class=&quot;csc-textpic-image csc-textpic-last&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/d/8/csm_Scout_9_05_popup_869cccee7a.png&quot; rel=&quot;lightbox[20301]&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;121&quot; src=&quot;https://www.bsi-software.com/fileadmin/daten/_processed_/d/8/csm_Scout_9_05_popup_4de155bf82.png&quot; width=&quot;280&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;&lt;div class=&quot;csc-textpic-text&quot;&gt;&lt;div class=&quot;csc-text csc-text-c20301&quot;&gt;&lt;p&gt;With the new &quot;Popup&quot; (also known as popover on some platforms), you can display additional information in an overlay. You have many options to embed widgets here - we can't wait to see what you do with it!
&lt;/p&gt;
&lt;p&gt;The Popup has the following features:&lt;/p&gt;&lt;ul class=&quot;arrow-list&quot;&gt;&lt;li&gt;Take any widget you like and open it in a Popup by using the WidgetPopup.&lt;/li&gt;&lt;li&gt;Use any widget you like as anchor and align the Popup around it.&lt;/li&gt;&lt;li&gt;Decide whether you want to point the Popup to the anchor by using the property withArrow. &lt;/li&gt;&lt;li&gt;Control the behavior of what should happen if there is not enough space to display the whole Popup using various properties.&lt;/li&gt;&lt;li&gt;Choose how the popup should react when the user clicks on the outside or on the anchor. &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a class=&quot;external-link-new-window button&quot; href=&quot;https://scout.bsi-software.com/widgets&quot; target=&quot;_blank&quot; title=&quot;Scout widgets app&quot;&gt;try out all the widgets in our widget app&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20302&quot;&gt;&lt;div class=&quot;csc-header csc-header-n9&quot;&gt;&lt;h2&gt;Changed property lookup order&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;csc-text csc-text-c20302&quot;&gt;&lt;p&gt;In many technologies such as Docker or Kubernetes, changing the configuration without having to create a new deployment is essential. To support this in Scout, the lookup order for Scout properties has been adjusted: It now allows overriding properties in the configuration file by using environment variables.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-div clearfix&quot; id=&quot;c20303&quot;&gt;&lt;div class=&quot;divider&quot;&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20304&quot;&gt;&lt;div class=&quot;csc-header csc-header-n11&quot;&gt;&lt;h3&gt;Get to know Scout?&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;csc-text csc-text-c20304&quot;&gt;&lt;p&gt;Visit our project page, make your first steps with Scout using the comprehensive &lt;a class=&quot;external-link-new-window&quot; href=&quot;http://eclipsescout.github.io/9.0/&quot; target=&quot;_blank&quot; title=&quot;scout documentation&quot;&gt;documentation&lt;/a&gt;, and check out the &lt;a class=&quot;external-link-new-window&quot; href=&quot;https://www.eclipse.org/forums/index.php?t=thread&amp;amp;frm_id=174&quot; target=&quot;_blank&quot; title=&quot;Scout forum&quot;&gt;Scout forum&lt;/a&gt; if you have questions around a particular topic!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;&lt;div class=&quot;csc-default-wrapper default &quot;&gt;
				&lt;div class=&quot;row&quot;&gt;
					&lt;div class=&quot;large-12 columns&quot;&gt;
						&lt;div class=&quot;csc-default content-type-text clearfix&quot; id=&quot;c20305&quot;&gt;&lt;div class=&quot;csc-header csc-header-n12&quot;&gt;&lt;h3&gt;Scout survey&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;csc-text csc-text-c20305&quot;&gt;&lt;p&gt;Do you have two minutes to make Scout even better?
&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;external-link-new-window button&quot; href=&quot;https://de.surveymonkey.com/r/ScoutSurvey&quot; target=&quot;_blank&quot; title=&quot;Scout survey&quot;&gt;Complete survey (2 MIN)&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;span class=&quot;clearfix&quot;&gt;&lt;/span&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
													&lt;/div&gt;</description>
	<pubDate>Fri, 05 Apr 2019 05:07:09 +0000</pubDate>
</item>
<item>
	<title>Scott Lewis: New Release:  Python&lt;-&gt;Java Remote Services</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-4192025638966416820</guid>
	<link>http://eclipseecf.blogspot.com/2019/04/new-release-python-java-remote-services.html</link>
	<description>There is a new release (2.9.0) of the &lt;a href=&quot;https://github.com/ECF/Py4j-RemoteServicesProvider&quot;&gt;ECF distribution provider&lt;/a&gt; for &lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Communication_Framework_Project&quot;&gt;OSGi R7 Remote Services&lt;/a&gt; between Java and Python.&lt;br /&gt;&lt;br /&gt;This release has:&lt;br /&gt;&lt;br /&gt;An upgraded version of &lt;a href=&quot;https://www.py4j.org/&quot;&gt;Py4j&lt;/a&gt;&lt;br /&gt;An upgraded version of &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;Google Protocol Buffers&lt;/a&gt;&lt;br /&gt;Enhancements to the distribution provider based upon the improved Py4j and Protobuf libs&lt;br /&gt;&lt;br /&gt;In &lt;a href=&quot;http://eclipseecf.blogspot.com/2018/08/osgi-remote-services-between-python-and.html&quot;&gt;this previous blog posting&lt;/a&gt; there are links to tutorials and examples showing how to use remote services between Python&amp;lt;-&amp;gt;Java.&lt;br /&gt;&lt;br /&gt;Python&amp;lt;-&amp;gt;Java remote services can be consumed or implemented in either Java or Python.</description>
	<pubDate>Thu, 04 Apr 2019 05:42:48 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Orion: Announcing Orion 20</title>
	<guid isPermaLink="false">http://planetorion.org/news/?p=915</guid>
	<link>http://planetorion.org/news/2019/03/announcing-orion-20/</link>
	<description>&lt;p&gt;We are pleased to announce the twentieth release of Orion, “Your IDE in the Cloud”. You can run it now at &lt;a href=&quot;https://orionhub.org/&quot;&gt;OrionHub,&lt;/a&gt; from &lt;a href=&quot;https://www.npmjs.com/package/orion&quot;&gt;NPM&lt;/a&gt; or &lt;a href=&quot;https://download.eclipse.org/orion/drops/R-20.0-201903291844/index.html&quot;&gt;download the server&lt;/a&gt; to run your own instance locally.&lt;/p&gt;



&lt;p&gt;Once again, thank you to all committers and contributors for your hard work this release. &lt;/p&gt;



&lt;p&gt;This release was focussed entirely on accessibility.&lt;/p&gt;</description>
	<pubDate>Fri, 29 Mar 2019 19:25:08 +0000</pubDate>
</item>
<item>
	<title>Fabio Zadrozny: LiClipse 5.2.2 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7855001383687474475.post-5274877453732983738</guid>
	<link>http://liclipse.blogspot.com/2019/03/liclipse-522-released.html</link>
	<description>This version does an updated of the main dependencies of LiClipse.&lt;br /&gt;&lt;br /&gt;It's now based on:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Eclipse 4.11 (also named 2019-03)&lt;/li&gt;&lt;li&gt;PyDev (5.2.2) &lt;/li&gt;&lt;li&gt;EGit (5.3.0)&lt;/li&gt;&lt;/ul&gt;As a note, it seems I haven't updated this blog as often as I should (I end up putting more effort into announcing the PyDev updates) but just to note, LiClipse is always updated whenever PyDev is updated.&lt;br /&gt;&lt;br /&gt;Enjoy! &lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Wed, 27 Mar 2019 13:46:27 +0000</pubDate>
	<author>noreply@blogger.com (Fabio Zadrozny)</author>
</item>
<item>
	<title>Christian Pontesegger: JFace TableViewer sorting via Drag and Drop</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-6733293349492915246</guid>
	<link>http://codeandme.blogspot.com/2019/03/jface-tableviewer-sorting-via-drag-and.html</link>
	<description>Recently I wanted to sort elements in a &lt;i&gt;TableViewer&lt;/i&gt; via drag and drop and was astonished that I could not find  existing helper classes or tutorial for this fairly trivial use case. So here is one for you in case you got the same use case.&lt;br /&gt;&lt;br /&gt;Source code for this tutorial is available on github as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/TableViewer_DnD_Sorting.zip?raw=true&quot; target=&quot;_blank&quot;&gt;single zip archive&lt;/a&gt;, as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/TableViewer_DnD_Sorting.psf?raw=true&quot;&gt;Team Project Set&lt;/a&gt; or you can &lt;a href=&quot;https://github.com/Pontesegger/codeandme/tree/master/ui/TableViewer%20DnD%20Sorting&quot; target=&quot;_blank&quot;&gt;browse the files&lt;/a&gt; online.&lt;br /&gt;&lt;br /&gt;If you are just interested in the helper class, have a look at &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/ui/TableViewer%20DnD%20Sorting/src/com/codeandme/tableviewer/dnd/sorting/DnDSortingSupport.java&quot; target=&quot;_blank&quot;&gt;DnDSortingSupport&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Prerequisites:&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To have something to work on I will start with a &lt;i&gt;TableViewer&lt;/i&gt; containing some data stored in a &lt;i&gt;java.util.List&lt;/i&gt;. It is a default &lt;i&gt;TableViewer&lt;/i&gt; and therefore I expect you have something similar ready for your experiments.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 1: Add drag support&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://www.eclipse.org/articles/Article-SWT-DND/DND-in-SWT.html&quot; target=&quot;_blank&quot;&gt;Drag and Drop support for SWT&lt;/a&gt; is implemented via &lt;i&gt;DragSource&lt;/i&gt; and &lt;i&gt;DropTarget&lt;/i&gt; instances. To define that we can drag data, we need to bind a &lt;i&gt;DragSource&lt;/i&gt; to a &lt;i&gt;Control&lt;/i&gt;. &lt;br /&gt;&lt;pre class=&quot;brush: java&quot;&gt;  DragSource dragSource = new DragSource(tableViewer.getControl(), DND.DROP_MOVE);&lt;br /&gt;  dragSource.setTransfer(LocalSelectionTransfer.getTransfer());&lt;br /&gt;  dragSource.addDragListener(new DragSourceAdapter() {&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public void dragStart(DragSourceEvent event) {&lt;br /&gt;    event.doit = !tableViewer.getStructuredSelection().isEmpty();&lt;br /&gt;   }&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public void dragSetData(DragSourceEvent event) {&lt;br /&gt;    if (LocalSelectionTransfer.getTransfer().isSupportedType(event.dataType)) {&lt;br /&gt;     LocalSelectionTransfer.getTransfer().setSelection(tableViewer.getStructuredSelection());&lt;br /&gt;     LocalSelectionTransfer.getTransfer().setSelectionSetTime(event.time &amp;amp; 0xFFFF);&lt;br /&gt;    }&lt;br /&gt;   }&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public void dragFinished(DragSourceEvent event) {&lt;br /&gt;    LocalSelectionTransfer.getTransfer().setSelection(null);&lt;br /&gt;    LocalSelectionTransfer.getTransfer().setSelectionSetTime(0);&lt;br /&gt;   }&lt;br /&gt;  });&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;In line 1 we create the &lt;i&gt;DragSource&lt;/i&gt; and define allowed DnD operations. As we want to sort elements, we only allow &lt;i&gt;DND.MOVE&lt;/i&gt; operations. Then we define the way data gets transferred from the &lt;i&gt;DragSource&lt;/i&gt; to the &lt;i&gt;DropTarget&lt;/i&gt;. As we stay within  the same Eclipse application we may use a &lt;i&gt;LocalSelectionTransfer&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;The first thing that happens on a drag is &lt;i&gt;dragStart()&lt;/i&gt;. Technically the selection cannot be empty as we have to select something before we start the operation, so this implementation is merely to understand how we could deny the operation right from the start.&lt;br /&gt;&lt;br /&gt;After the drop operation got accepted in the &lt;i&gt;DropTarget&lt;/i&gt; (see below) we get asked to &lt;i&gt;dragSetData()&lt;/i&gt; and define what data we are moving. &lt;i&gt;setSelectionSetTime()&lt;/i&gt; is not needed by our &lt;i&gt;DropTarget&lt;/i&gt;, so again this is for completeness only.&lt;br /&gt;&lt;br /&gt;Finally we need to clean up after the operation is done.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 2: Add drop support&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Implementation is similar like before, just now we need a &lt;i&gt;DropTarget&lt;/i&gt;. Instead of writing our own &lt;i&gt;DropTargetListener&lt;/i&gt; we may use a &lt;i&gt;ViewerDropAdapter&lt;/i&gt; which covers most of the required work already.&lt;br /&gt;&lt;pre class=&quot;brush: java&quot;&gt;  DropTarget dropTarget = new DropTarget(tableViewer.getControl(), DND.DROP_MOVE);&lt;br /&gt;  dropTarget.setTransfer(LocalSelectionTransfer.getTransfer());&lt;br /&gt;  dropTarget.addDropListener(new ViewerDropAdapter(tableViewer) {&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public void dragEnter(DropTargetEvent event) {&lt;br /&gt;    // make sure drag was triggered from current tableViewer&lt;br /&gt;    if (event.widget instanceof DropTarget) {&lt;br /&gt;     boolean isSameViewer = tableViewer.getControl().equals(((DropTarget) event.widget).getControl());&lt;br /&gt;     if (isSameViewer) {&lt;br /&gt;      event.detail = DND.DROP_MOVE;&lt;br /&gt;      setSelectionFeedbackEnabled(false);&lt;br /&gt;      super.dragEnter(event);&lt;br /&gt;     } else&lt;br /&gt;      event.detail = DND.DROP_NONE;&lt;br /&gt;    } else&lt;br /&gt;     event.detail = DND.DROP_NONE;&lt;br /&gt;   }&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public boolean validateDrop(Object target, int operation, TransferData transferType) {&lt;br /&gt;    return true;&lt;br /&gt;   }&lt;br /&gt;&lt;br /&gt;   @Override&lt;br /&gt;   public boolean performDrop(Object target) {&lt;br /&gt;    int location = determineLocation(getCurrentEvent());&lt;br /&gt;    if (location == LOCATION_BEFORE) {&lt;br /&gt;     if (modelManipulator.insertBefore(getSelectedElement(), getCurrentTarget())) {&lt;br /&gt;      tableViewer.refresh();&lt;br /&gt;      return true;&lt;br /&gt;     }&lt;br /&gt;&lt;br /&gt;    } else if (location == LOCATION_AFTER) {&lt;br /&gt;     if (modelManipulator.insertAfter(getSelectedElement(), getCurrentTarget())) {&lt;br /&gt;      tableViewer.refresh();&lt;br /&gt;      return true;&lt;br /&gt;     }&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    return false;&lt;br /&gt;   }&lt;br /&gt;&lt;br /&gt;   private Object getSelectedElement() {&lt;br /&gt;    return ((IStructuredSelection) LocalSelectionTransfer.getTransfer().getSelection()).getFirstElement();&lt;br /&gt;   }&lt;br /&gt;  });&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;i&gt;dragEnter()&lt;/i&gt; is the first thing that happens on the drop part of DnD. The default implementation is already fine. Our implementation additionally checks that the drag source is our current &lt;i&gt;TableViewer&lt;/i&gt;. Further we disable the selectionFeedback. The feedback visually shows the user whether we drop before an element, on the element, or after it. The &lt;i&gt;ViewerDropAdapter&lt;/i&gt; already supports these kind of feedbacks. Until &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=545733&quot; target=&quot;_blank&quot;&gt;bug 545733&lt;/a&gt; gets fixed the helper class contains a small patch to provide before/after feedback only. It does not make sense to drop on another element when we do sorting, right?&lt;br /&gt;&lt;br /&gt;&lt;i&gt;validateDrop()&lt;/i&gt; will be queried multiple times. We might check that we do not drop the table element on itself, but we spared this check for the current example.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;performDrop()&lt;/i&gt; finally implements the drop operation. To keep the helper class generic I used an interface that allows to insert elements before or after another element. An implementation of it needs to be passed to the helper class.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: java&quot;&gt; public interface IModelManipulator {&lt;br /&gt;  boolean insertBefore(Object source, Object target);&lt;br /&gt;&lt;br /&gt;  boolean insertAfter(Object source, Object target);&lt;br /&gt; }&lt;/pre&gt;The helper class comes with an implementation for &lt;i&gt;java.util.List&lt;/i&gt;, which you may reuse.&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 25 Mar 2019 12:31:12 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Webtools News: WTP 3.13 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink187</guid>
	<link>http://eclipse.org/webtools/releases/3.13</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.13 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-03
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-03/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.13 is included in the 2019-03
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-javascript-and-web-developers&quot;&gt;Eclipse IDE for JavaScript and Web Developers&lt;/a&gt;
		, with selected portions also included in 8
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.13 update site itself&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink187&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 20 Mar 2019 23:35:00 +0000</pubDate>
</item>
<item>
	<title>Christopher Guindon: Eclipse Foundation Contributor Validation Service</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/github-eclipse-eca-validation-service/</guid>
	<link>https://www.chrisguindon.com/post/github-eclipse-eca-validation-service/</link>
	<description>&lt;p&gt;In an effort to &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=540694&quot;&gt;provide a more robust solution&lt;/a&gt; to our Contributor Validation Service on GitHub, we created the &lt;a href=&quot;https://github.com/apps/eclipse-eca-validation&quot;&gt;Eclipse ECA Validation&lt;/a&gt; Github App that can be installed on any GitHub account, organization or repository.&lt;/p&gt;
&lt;p&gt;The goal of this new GitHub App is to make sure that every contributor is covered by the necessary legal agreements in order to contribute to all Eclipse Foundation Projects including &lt;a href=&quot;https://www.eclipse.org/projects/efsp/#efsp-projects&quot;&gt;specification projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example, all contributors must be covered by the &lt;a href=&quot;https://www.eclipse.org/legal/ECA.php&quot;&gt;Eclipse Foundation Contributor Agreement&lt;/a&gt; (ECA) and they must include a “Signed-off-by” footer in commit messages. When contributing to an Eclipse Foundation Specification Project, contributors must be covered with version 3.0.0 or greater of the ECA.&lt;/p&gt;
&lt;figure class=&quot;thumbnail&quot;&gt;
&lt;img src=&quot;https://www.chrisguindon.com/uploads/validation-feedback.jpg&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;We created a GitHub App to improve the following problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reduce our maintenance burden by simplifying the installation process.&lt;/li&gt;
&lt;li&gt;Increase our API rate limit.&lt;/li&gt;
&lt;li&gt;Create a better experience for users by allowing the App to be installed on non-Eclipse project repositories such as the &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org&quot;&gt;Eclipse IoT website&lt;/a&gt; and the &lt;a href=&quot;https://github.com/jakartaee/jakartaee.github.io&quot;&gt;Jakarta EE website&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, we made some improvements to our “details” page. We added a “revalidate” button to allow Eclipse users to trigger a revalidation without pushing new changes to the pull-request and we added some useful links to allow users to return to GitHub or to sign the &lt;a href=&quot;https://accounts.eclipse.org/user/eca&quot;&gt;ECA&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;thumbnail&quot;&gt;
&lt;img src=&quot;https://www.chrisguindon.com/uploads/details-page.jpg&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;We are planning to install our new Eclipse ECA Validation Github App to all our Eclipse Projects on GitHub this week and I am hoping that these changes will improve the way our users are contributing via Github.&lt;/p&gt;
&lt;p&gt;If you are using our new Github App and you wish to contribute feedback, please do so on &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=540694&quot;&gt;Bug 540694&lt;/a&gt; - Github IP validation needs to be more robust.&lt;/p&gt;</description>
	<pubDate>Mon, 25 Feb 2019 23:20:46 +0000</pubDate>
</item>
<item>
	<title>Michael Vorburger: OpenDaylight has Oomph!</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-2224194412636345302.post-3632268510737765609</guid>
	<link>http://blog2.vorburger.ch/2019/02/opendaylight-has-oomph.html</link>
	<description>&lt;div style=&quot;text-align: justify;&quot;&gt;When I started to dig into the &lt;a href=&quot;https://www.opendaylight.org/&quot;&gt;Open Daylight&lt;/a&gt; (ODL) code base in 2016, I almost got a severe case of irreversible stomach flu when I read on it’s &lt;a href=&quot;https://wiki.opendaylight.org/view/GettingStarted:_Eclipse&quot;&gt;Getting Started with Eclipse&lt;/a&gt; Wiki page that: &lt;i&gt;&quot;Eclipse is no longer able to compile OpenDaylight. The reason is three Maven plugins which are used by OpenDaylight but are not integrated into Eclipse: maven-plugin-plugin, karaf-maven-plugin and maven-antrun-plugin. This means you will always have Eclipse compile errors in the project (this could go to up to 100000 errors). You can use Eclipse for editing easily but to compile the project you need to open a terminal window and do the compilation according to the instructions from.&quot; &lt;/i&gt;(I may have removed this sentence from that Wiki page by the time you read this.) &lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;The certainly meant to be helpful advise from a new work colleague at Red Hat that &quot;we all ended just using JetBrains IntelliJ IDEA‎&quot; didn't quite do it for me, particularly for contributing to the leading OPEN future of networking kind of community,  so... what to do?! As any real Hacker would presumably agree, there really was only one solution for me: Take a pause from reading books and watching videos to come up to speed about Software Defined Networking (as fascinating as those IP packets in wireshark can be from the inside... or are they?), and get down to fixing any problems anywhere preventing the Open Daylight code base from being able to be worked on neatly within Eclipse!&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;In 2016, the right way to go about is to use the &lt;a href=&quot;http://eclipse.org/oomph&quot;&gt;Eclipse.org Oomph project&lt;/a&gt;, which also powers the new Eclipse Installer new used by millions for the core IDE &lt;a href=&quot;http://eclipse.org/downloads&quot;&gt;eclipse.org/downloads&lt;/a&gt;, and create a project catalog with Oomph setup models for the &lt;a href=&quot;https://git.opendaylight.org/gerrit/#/admin/projects/&quot;&gt;ca. 80-ish individual sub-projects&lt;/a&gt; which are part of OpenDaylight.&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;It took me a little bit of great fun times to figure out how to &lt;a href=&quot;https://git.opendaylight.org/gerrit/#/q/owner:vorburger&quot;&gt;change a number of things in various pom.xml in ODL&lt;/a&gt; (incl. some M2E Maven for Eclipse lifecycle-mapping; initially in pom.xml but then I realized that when using &lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Oomph_Authoring#How_to_create_M2E_lifecycle-mapping-metadata.xml_to_avoid_littering_your_pom.xml_with_org.eclipse.m2e:lifecycle-mapping&quot;&gt;Oomph M2E lifecycle mappipngs are probably best just kept in workspace preferences&lt;/a&gt;), and a &lt;a href=&quot;https://github.com/m2e-code-quality/m2e-code-quality/issues/83&quot;&gt;weird Maven/Eclipse interrelation Checkstyle LICENSE header check issue&lt;/a&gt; (contributing &lt;a href=&quot;https://github.com/m2e-code-quality/m2e-code-quality/pull/87&quot;&gt;a clearer LOG about that&lt;/a&gt;); and &lt;a href=&quot;https://github.com/m2e-code-quality/m2e-code-quality/issues/84&quot;&gt;fixing the build of another project&lt;/a&gt;, work around &lt;a href=&quot;https://git.opendaylight.org/gerrit/#/c/37718/&quot;&gt;some small but blocking M2E corner case problem&lt;/a&gt;, but ultimately it now all works rather nicely!&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;This setup model pre-installs a number of nice to have and useful Eclipse plugins which you may find of interest for your projects too, if you haven't heard of them yet incl. &lt;a href=&quot;https://github.com/m2e-code-quality/m2e-code-quality&quot;&gt;M2E Code Quality&lt;/a&gt;, used to configure Checkstyle, FindBugs &amp;amp; PMD Eclipse plugins automatically in-line with their respective Maven settings.&lt;/div&gt;&lt;br /&gt;see &lt;a href=&quot;https://github.com/vorburger/opendaylight-eclipse-setup/&quot;&gt;https://github.com/vorburger/opendaylight-eclipse-setup/&lt;/a&gt; and these videos:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 05 Feb 2019 21:11:43 +0000</pubDate>
	<author>noreply@blogger.com (Michael Vorburger.ch)</author>
</item>
<item>
	<title>William Candillon: モグニャンが半額50％オフ？100円お試しモニターも？キャンペーンを見逃さない裏技を紹介する</title>
	<guid isPermaLink="false">https://www.xqdt.org/?p=43</guid>
	<link>https://www.xqdt.org/campaign/</link>
	<description>モグニャンが半額キャンペーンだって！？100円モニターもあったの？ 僕は知らずにモグニャンを通常価格で購入したので、少し驚きでした…。 管理人まぁ、美味しそうに食べてくれるしウンチの調子もよくなったの ... &lt;p&gt;Copyright © 2019 &lt;a href=&quot;https://www.xqdt.org&quot;&gt;モグニャンの口コミ解説&lt;/a&gt; All Rights Reserved.&lt;/p&gt;</description>
	<pubDate>Fri, 28 Dec 2018 10:50:23 +0000</pubDate>
</item>

</channel>
</rss>
